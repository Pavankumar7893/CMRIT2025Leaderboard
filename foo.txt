diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml
deleted file mode 100644
index 165e376..0000000
--- a/.github/workflows/main.yml
+++ /dev/null
@@ -1,39 +0,0 @@
-
-name: Update Leaderboard and Site
-
-on:
-  schedule:
-    - cron: '58 09 * * *'
-
-jobs:
-  update-leaderboard:
-    runs-on: ubuntu-latest
-
-    steps:
-      - uses: actions/checkout@v2
-
-      - name: Setup Java
-        uses: actions/setup-java@v2
-        with:
-          distribution: 'temurin'
-          java-version: '17'
-
-      - name: Compile Java Program
-        run: javac -d build/classes -cp "./lib/*" src/cmritleaderboard2025/*.java
-
-      - name: Run Java Program
-        run: java -cp ./build/classes:./lib/* cmritleaderboard2025.CMRITLeaderboard2025
-
-      - name: Commit and Push Changes
-        run: |
-          git config --global user.name 'GitHub Actions'
-          git config --global user.email 'actions@github.com'
-          git add index.html Leaderboards/
-          git commit -m "Update Leaderboard - $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
-          git push
-
-      - name: Upload index.html as Artifact
-        uses: actions/upload-artifact@v2
-        with:
-          name: generated-index-html
-          path: index.html
diff --git a/.gitignore b/.gitignore
index 524f096..f68d109 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,24 +1,29 @@
-# Compiled class file
-*.class
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
 
-# Log file
-*.log
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
 
-# BlueJ files
-*.ctxt
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
 
-# Mobile Tools for Java (J2ME)
-.mtj.tmp/
+### VS Code ###
+.vscode/
 
-# Package Files #
-*.jar
-*.war
-*.nar
-*.ear
-*.zip
-*.tar.gz
-*.rar
-
-# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
-hs_err_pid*
-replay_pid*
+### Mac OS ###
+.DS_Store
\ No newline at end of file
diff --git a/CMRITLeaderboard2025.jar b/CMRITLeaderboard2025.jar
deleted file mode 100644
index e9dcc50..0000000
Binary files a/CMRITLeaderboard2025.jar and /dev/null differ
diff --git a/LICENSE b/LICENSE
deleted file mode 100644
index 261eeb9..0000000
--- a/LICENSE
+++ /dev/null
@@ -1,201 +0,0 @@
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/Leaderboards/CurrentCMRITLeaderboard2025.xlsx b/Leaderboards/CurrentCMRITLeaderboard2025.xlsx
index ae30692..8c83980 100644
Binary files a/Leaderboards/CurrentCMRITLeaderboard2025.xlsx and b/Leaderboards/CurrentCMRITLeaderboard2025.xlsx differ
diff --git a/README.TXT b/README.TXT
deleted file mode 100644
index f8c5ea0..0000000
--- a/README.TXT
+++ /dev/null
@@ -1,32 +0,0 @@
-========================
-BUILD OUTPUT DESCRIPTION
-========================
-
-When you build an Java application project that has a main class, the IDE
-automatically copies all of the JAR
-files on the projects classpath to your projects dist/lib folder. The IDE
-also adds each of the JAR files to the Class-Path element in the application
-JAR files manifest file (MANIFEST.MF).
-
-To run the project from the command line, go to the dist folder and
-type the following:
-
-java -jar "CMRITLeaderboard2025.jar" 
-
-To distribute this project, zip up the dist folder (including the lib folder)
-and distribute the ZIP file.
-
-Notes:
-
-* If two JAR files on the project classpath have the same name, only the first
-JAR file is copied to the lib folder.
-* Only JAR files are copied to the lib folder.
-If the classpath contains other types of files or folders, these files (folders)
-are not copied.
-* If a library on the projects classpath also has a Class-Path element
-specified in the manifest,the content of the Class-Path element has to be on
-the projects runtime path.
-* To set a main class in a standard Java project, right-click the project node
-in the Projects window and choose Properties. Then click Run and enter the
-class name in the Main Class field. Alternatively, you can manually type the
-class name in the manifest Main-Class element.
diff --git a/README.md b/README.md
deleted file mode 100644
index 42fcfaf..0000000
--- a/README.md
+++ /dev/null
@@ -1,2 +0,0 @@
-# CMRIT2025Leaderboard
-The autoupdating leaderboard of CMR Institute of Technology, 2025 batch.
diff --git a/build/built-jar.properties b/build/built-jar.properties
deleted file mode 100644
index cec90d8..0000000
--- a/build/built-jar.properties
+++ /dev/null
@@ -1,4 +0,0 @@
-#Sat, 16 Dec 2023 01:04:15 +0530
-
-
-C\:\\Users\\gabya\\Desktop\\OverallLeaderboard\ Project\\CMRITLeaderboard2025=
diff --git a/build/classes/cmritleaderboard2025/CMRITLeaderboard2025$1.class b/build/classes/cmritleaderboard2025/CMRITLeaderboard2025$1.class
deleted file mode 100644
index b0aa86c..0000000
Binary files a/build/classes/cmritleaderboard2025/CMRITLeaderboard2025$1.class and /dev/null differ
diff --git a/build/classes/cmritleaderboard2025/CMRITLeaderboard2025$Participant.class b/build/classes/cmritleaderboard2025/CMRITLeaderboard2025$Participant.class
deleted file mode 100644
index 70d1a03..0000000
Binary files a/build/classes/cmritleaderboard2025/CMRITLeaderboard2025$Participant.class and /dev/null differ
diff --git a/build/classes/cmritleaderboard2025/CMRITLeaderboard2025.class b/build/classes/cmritleaderboard2025/CMRITLeaderboard2025.class
deleted file mode 100644
index 68819fa..0000000
Binary files a/build/classes/cmritleaderboard2025/CMRITLeaderboard2025.class and /dev/null differ
diff --git a/cmritleaderboard2025/CMRITLeaderboard2025.java b/cmritleaderboard2025/CMRITLeaderboard2025.java
deleted file mode 100644
index 9269ea9..0000000
--- a/cmritleaderboard2025/CMRITLeaderboard2025.java
+++ /dev/null
@@ -1,878 +0,0 @@
-// Built OVERNIGHT, yes again, by https://www.instagram.com/gabyah92 (Instagram)
-// Technical Trainer
-package cmritleaderboard2025;
-
-import javax.swing.*;
-import java.awt.*; 
-import java.io.*;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.net.HttpURLConnection; 
-import java.net.URL;
-import java.net.URLConnection;
-import java.text.DecimalFormat; 
-import java.util.ArrayList;
-import java.util.Collections; 
-import java.util.HashMap; 
-import java.util.Iterator;
-import java.util.List;   
-import org.apache.poi.ss.usermodel.BorderStyle;
-import org.apache.poi.ss.usermodel.Cell;
-import org.apache.poi.ss.usermodel.CellStyle; 
-import org.apache.poi.ss.usermodel.FillPatternType;
-import org.apache.poi.ss.usermodel.HorizontalAlignment;
-import org.apache.poi.ss.usermodel.IndexedColors;
-import org.apache.poi.ss.usermodel.Row;
-import org.apache.poi.ss.usermodel.Workbook;
-import org.apache.poi.ss.usermodel.WorkbookFactory;
-import org.apache.poi.xssf.usermodel.XSSFWorkbook;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject; 
-
-public class CMRITLeaderboard2025 extends javax.swing.JFrame { 
-    private String excelSheetField = "lib//CMRIT2025Leaderboard.xlsx";
-    HashMap <String, Integer> geeksforgeeksDB = new HashMap<>(); 
-    HashMap <String, Integer> hackerrankDB = new HashMap<>(); 
-    HashMap <String, Integer> codeforcesDB = new HashMap<>(); 
-     
-    static boolean hackerrankchk = false; 
-    static String searchToken = "";
-    static int hackerrankMaxScore = 0; 
-    static int GFGMaxScore = 0; 
-    static int GFGpMaxScore = 0; 
-    static int codechefMaxRating = 0;
-    static int leetcodeMaxRating = 0;
-    static int codeforcesMaxRating = 0;
-    
-    public CMRITLeaderboard2025() {  
-            hackerrankMaxScore = 0; 
-            GFGMaxScore = 0; 
-            GFGpMaxScore = 0; 
-            codechefMaxRating = 0;
-            leetcodeMaxRating = 0;
-            codeforcesMaxRating = 0; 
-            searchToken = "cmrit25-1-basics, cmrit25-4-rbd, cmrit25-3-iterables, cmrit25-2-lpb, cmrit25-5-ds, 1-basics-2025, 2-loops-2025, 3-bitpat-2025, 4-iterables-2025, ds-2025, codevita-2025";
-            if (searchToken.equals("")) { 
-                hackerrankchk = false;
-            }
-            else hackerrankchk = true;
-            List<Participant> curr_leaderboard = null; 
-            
-            String excelSheetPath = excelSheetField; 
-            System.out.print(excelSheetPath);
-            if (!excelSheetPath.equals("")) {
-                try{
-                    curr_leaderboard = loadExcelSheet(excelSheetPath);
-                    if(curr_leaderboard.isEmpty()) throw new Exception();
-                    downloadLeaderboard(curr_leaderboard);
-                    // Sort and assign ranks 
-                    assignRanks(curr_leaderboard); 
-                    // Display the leaderboard in console 
-                    exportParticipantsToExcel((ArrayList<Participant>) curr_leaderboard); 
-                    curr_leaderboard.clear();
-                } catch(Exception f) { JOptionPane.showMessageDialog(null, "Invalid Excel Sheet! ", "Error", JOptionPane.ERROR_MESSAGE); }
-            } else { JOptionPane.showMessageDialog(null, "Select an Excel Sheet! ", "Error", JOptionPane.ERROR_MESSAGE);  }  
-            this.geeksforgeeksDB.clear();
-            this.hackerrankDB.clear(); 
-            this.codeforcesDB.clear(); 
-    }
-
-    static void exportParticipantsToExcel(ArrayList<Participant> participants) {
-        try {
-            // Create a new Workbook
-            XSSFWorkbook workbook = new XSSFWorkbook();
-
-            // Create a new Sheet
-            org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("Current CMRITLeaderboard2025");
-
-            // Create bold font with size 18 for column headers
-            org.apache.poi.ss.usermodel.Font boldFont = workbook.createFont();
-            boldFont.setBold(true);
-            boldFont.setFontHeightInPoints((short) 20);
-
-            org.apache.poi.ss.usermodel.Font boldFont2 = workbook.createFont();
-            boldFont2.setBold(true);
-            boldFont2.setFontHeightInPoints((short) 14);
-
-            // Create bold centered cell style with 14 font size for normal cells
-            CellStyle boldCenteredCellStyle = workbook.createCellStyle();
-            boldCenteredCellStyle.setAlignment(HorizontalAlignment.CENTER);
-            boldCenteredCellStyle.setFont(boldFont);
-            boldCenteredCellStyle.setFillForegroundColor(IndexedColors.LIGHT_TURQUOISE1.getIndex());
-            boldCenteredCellStyle.setBorderBottom(BorderStyle.THICK);
-            boldCenteredCellStyle.setBorderTop(BorderStyle.THICK);
-            boldCenteredCellStyle.setBorderLeft(BorderStyle.THICK);
-            boldCenteredCellStyle.setBorderRight(BorderStyle.THICK);
-            boldCenteredCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
-            // Create bold cell style with 14 font size for normal cells
-            CellStyle boldCellStyle = workbook.createCellStyle();
-            boldCellStyle.setAlignment(HorizontalAlignment.CENTER);
-            boldCellStyle.setFont(boldFont2);
-            boldCellStyle.setFillForegroundColor(IndexedColors.TURQUOISE.getIndex());
-            boldCellStyle.setBorderBottom(BorderStyle.THICK);
-            boldCellStyle.setBorderTop(BorderStyle.THICK);
-            boldCellStyle.setBorderLeft(BorderStyle.THICK);
-            boldCellStyle.setBorderRight(BorderStyle.THICK);
-            boldCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
-
-            // Add column headers => 
-            // Rank, Codeforces_Handle, 35% Codeforces_Rating,
-            //       GFG_Handle, 30% GFG_Contest_Score, 10% GFG_Practice_Score,
-            //       Leetcode_Handle, 15% Leetcode_Rating
-            //       CodeChef_Handle, 10% Codechef_Rating
-            Row headerRow = sheet.createRow(0);
-            Cell rankHeaderCell = headerRow.createCell(0);
-            rankHeaderCell.setCellValue("Rank");
-            rankHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell handleHeaderCell = headerRow.createCell(1);
-            handleHeaderCell.setCellValue("Handle");
-            handleHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codeforcesIdHeaderCell = headerRow.createCell(2);
-            codeforcesIdHeaderCell.setCellValue("Codeforces_Handle");
-            codeforcesIdHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codeforcesRatingHeaderCell = headerRow.createCell(3);
-            codeforcesRatingHeaderCell.setCellValue("Codeforces_Rating");
-            codeforcesRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell gfgHeaderCell = headerRow.createCell(4);
-            gfgHeaderCell.setCellValue("GFG_Handle");
-            gfgHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell gfgCScoreHeaderCell = headerRow.createCell(5);
-            gfgCScoreHeaderCell.setCellValue("GFG_Contest_Score");
-            gfgCScoreHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell gfgPScoreHeaderCell = headerRow.createCell(6);
-            gfgPScoreHeaderCell.setCellValue("GFG_Practice_Score");
-            gfgPScoreHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell leetcodeHeaderCell = headerRow.createCell(7);
-            leetcodeHeaderCell.setCellValue("Leetcode_Handle");
-            leetcodeHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell leetcodeRatingHeaderCell = headerRow.createCell(8);
-            leetcodeRatingHeaderCell.setCellValue("Leetcode_Rating");
-            leetcodeRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codechefHeaderCell = headerRow.createCell(9);
-            codechefHeaderCell.setCellValue("Codechef_Handle");
-            codechefHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codechefRatingHeaderCell = headerRow.createCell(10);
-            codechefRatingHeaderCell.setCellValue("Codechef_Rating");
-            codechefRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            int hc = 11;
-            
-            if( hackerrankchk ){
-                hc = 13;
-                Cell hackerRankHeaderCell = headerRow.createCell(11);
-                hackerRankHeaderCell.setCellValue("HackerRank_Handle");
-                hackerRankHeaderCell.setCellStyle(boldCenteredCellStyle);
-
-                Cell hackerRankRatingHeaderCell = headerRow.createCell(12);
-                hackerRankRatingHeaderCell.setCellValue("HackerRank_Practice_Score");
-                hackerRankRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            } 
-            
-            Cell percentileHeaderCell = headerRow.createCell(hc);
-            percentileHeaderCell.setCellValue("Percentile");
-            percentileHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            // Add participants' data : Rank, Codeforces_Handle, 35% Codeforces_Rating,
-            //       GFG_Handle, 30% GFG_Contest_Score, 10% GFG_Practice_Score,
-            //       Leetcode_Handle, 15% Leetcode_Rating
-            //       CodeChef_Handle, 10% Codechef_Rating
-            for (int i = 0; i < participants.size(); i++) {
-                Participant participant = participants.get(i);
-                Row row = sheet.createRow(i + 1);
-                
-                Cell rankCell = row.createCell(0);
-                rankCell.setCellValue(participant.getRank());
-                rankCell.setCellStyle(boldCellStyle); 
-                
-                Cell handleCell = row.createCell(1);
-                handleCell.setCellValue(participant.getHandle());
-                handleCell.setCellStyle(boldCellStyle);
-                
-                Cell idCell1 = row.createCell(2);
-                idCell1.setCellValue(participant.getCodeforcesHandle());
-                idCell1.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell1 = row.createCell(3);
-                scoreCell1.setCellValue(participant.getCodeforcesRating());
-                scoreCell1.setCellStyle(boldCellStyle);
-                
-                Cell idCell2 = row.createCell(4);
-                idCell2.setCellValue(participant.getGeeksForGeeksHandle());
-                idCell2.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell2 = row.createCell(5);
-                scoreCell2.setCellValue(participant.getGeeksForGeeksScore());
-                scoreCell2.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell2_1 = row.createCell(6);
-                scoreCell2_1.setCellValue(participant.getGeeksForGeekspScore());
-                scoreCell2_1.setCellStyle(boldCellStyle);
-                
-                Cell idCell3 = row.createCell(7);
-                idCell3.setCellValue(participant.getLeetcodeHandle());
-                idCell3.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell3 = row.createCell(8);
-                scoreCell3.setCellValue(participant.getLeetcodeRating());
-                scoreCell3.setCellStyle(boldCellStyle);
-                
-                Cell idCell4 = row.createCell(9); 
-                idCell4.setCellValue(participant.getCodeChefHandle());
-                idCell4.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell4 = row.createCell(10);
-                scoreCell4.setCellValue(participant.getCodeChefRating());
-                scoreCell4.setCellStyle(boldCellStyle);
-                
-                if(hackerrankchk){
-                    Cell idCell5 = row.createCell(11); 
-                    idCell5.setCellValue(participant.getHackerrankHandle());
-                    idCell5.setCellStyle(boldCellStyle);
-
-                    Cell scoreCell5 = row.createCell(12);
-                    scoreCell5.setCellValue(participant.getHackerrankScore());
-                    scoreCell5.setCellStyle(boldCellStyle);
-                }
-                Cell scoreCell6 = row.createCell(hc);
-                DecimalFormat df = new DecimalFormat("#.##");
-                scoreCell6.setCellValue( df.format(participant.getPercentile())+"%" );
-                scoreCell6.setCellStyle(boldCellStyle);
-            }
-
-            File folder = new File("Leaderboards");
-            if (!folder.exists()) {
-                folder.mkdir();
-            }
-
-            // Resize columns to fit the content 
-            for(int i=0;i<12 + (hackerrankchk?2:0);i++) sheet.autoSizeColumn(i); 
-            
-            String baseFileName = "Leaderboards/CurrentCMRITLeaderboard2025";
-            String extension = ".xlsx";
-
-            
-            File file = new File(baseFileName + extension); 
-            try ( FileOutputStream fileOut = new FileOutputStream(file)) { 
-                workbook.write(fileOut);
-                System.out.println("Excel file created successfully!");
-                JOptionPane.showMessageDialog(null, "Generated! ", "Finished Generating Leaderboard!", JOptionPane.INFORMATION_MESSAGE);
-                
-                {
-                    {  
-                        StringBuilder htmlBuilder = new StringBuilder(); 
-                        htmlBuilder.append("<html><head><title>").append(sheet.getSheetName()).append("</title></head><body>");
-                        htmlBuilder.append("<table>");
-                        int rowss=0;
-                        for (Row row : sheet) { 
-                            if(rowss == 0) htmlBuilder.append("<thead>"); 
-                            else if(rowss == 1) htmlBuilder.append("<tbody>");
-                            htmlBuilder.append("<tr>");
-                            int cols = 0;
-                            for (Cell cell : row) {
-                                if(rowss == 0) htmlBuilder.append("<th>");
-                                else htmlBuilder.append("<td>"); 
-                                switch (cell.getCellType()) {
-                                    case STRING -> htmlBuilder.append(cell.getStringCellValue());
-                                    case NUMERIC -> {
-                                        htmlBuilder.append((int)(cell.getNumericCellValue()));
-                                       
-                                    }
-                                    case BOOLEAN -> htmlBuilder.append(cell.getBooleanCellValue());
-                                    case FORMULA -> htmlBuilder.append(cell.getCellFormula());
-                                    default -> htmlBuilder.append(" ");
-                                }
-                                cols++;
-                            }
-                            if(rowss == 0) {
-                                htmlBuilder.append("</thead>");
-                                htmlBuilder.append("""
-                                                   <style>@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600);
-                                                   
-                                                   *, *:before, *:after {
-                                                     margin: 0;
-                                                     padding: 0;
-                                                     box-sizing: border-box;
-                                                   }
-                                                   
-                                                   body {
-                                                     background: #105469;
-                                                     font-family: 'Open Sans', sans-serif;
-                                                   }
-                                                   table {
-                                                     background: #012B39;
-                                                     border-radius: 0.25em;
-                                                     border-collapse: collapse;
-                                                     margin: 1em;
-                                                   }
-                                                   th {
-                                                     border-bottom: 1px solid #364043;
-                                                     color: #E2B842;
-                                                     font-size: 0.85em;
-                                                     font-weight: 600;
-                                                     padding: 0.5em 1em;
-                                                     text-align: center;
-                                                   }
-                                                   td {
-                                                     color: #fff;
-                                                     font-weight: 400;
-                                                     padding: 0.65em 1em;
-                                                     text-align: center;
-                                                   } 
-                                                   tbody tr {
-                                                     transition: background 0.25s ease;
-                                                     text-align: center;
-                                                   }
-                                                   tbody tr:hover {
-                                                     background: #014055;
-                                                     text-align: left;
-                                                   }
-                                                   
-                                                   </style>""");
-                            } 
-                            rowss++;
-                        }
-
-                        htmlBuilder.append("</tbody></table>");
-
-                        // Save the generated HTML to a file. 
-                        try (FileOutputStream htmlOut = new FileOutputStream("index.html")) {
-                            htmlOut.write(htmlBuilder.toString().getBytes());
-                            System.out.println("HTML file created successfully!");
-                            JOptionPane.showMessageDialog(null, "HTML Generated!", "Finished Generating HTML Leaderboard!", JOptionPane.INFORMATION_MESSAGE);
-                        } catch (Exception e) {
-                            e.printStackTrace();
-                        }
-
-                        // Make sure to close the workbook after finishing with the file operations.
-                        try {
-                            workbook.close();
-                        } catch (Exception e) {
-                            e.printStackTrace();
-                        }
-
-                    }
-                }
-                
-                workbook.close();
-
-            } catch (Exception e) {
-                JOptionPane.showMessageDialog(null, "Something Went Wrong! ", "Error", JOptionPane.ERROR_MESSAGE);
-            }
-        } catch (HeadlessException e) {
-            JOptionPane.showMessageDialog(null, "Something Went Wrong!", "Error", JOptionPane.ERROR_MESSAGE);
-        } 
-    }
-
-    private List<Participant> downloadLeaderboard(List <Participant>list) throws Exception {  
-        try{
-            String url;
-            URL websiteUrl;
-            URLConnection connection;
-            HttpURLConnection o;
-            InputStream inputStream;
-            // geeksforgeeks 
-            for(int j=1;j<=10000;j++){ 
-                try{
-                    url = "https://practiceapi.geeksforgeeks.org/api/latest/events/recurring/gfg-weekly-coding-contest/leaderboard/?leaderboard_type=0&page="+j;
-                    websiteUrl = new URL(url);
-                    connection = new URL(url).openConnection();
-                    o = (HttpURLConnection) websiteUrl.openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){ continue; } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        JSONArray arr = jsonObject.getJSONArray("results");
-                        int n = arr.length();
-                        if( n == 0) break; 
-                        for(int i=0;i<n;i++){
-                            JSONObject tmp = arr.getJSONObject(i);
-                            String userHandle = tmp.getString("user_handle").toLowerCase();
-                            if(geeksforgeeksDB.containsKey(userHandle)) { 
-                                int score = (int)tmp.getDouble("user_score");
-                                list.get(geeksforgeeksDB.get(userHandle)).setGeeksForGeeksScore(score); 
-                                GFGMaxScore = Integer.max(GFGMaxScore, score);
-                            } 
-                        }
-                    } catch(Exception t) {}
-                }catch(Exception pp) {}
-            }  
-            // hackerrank
-            if(hackerrankchk){
-                try{
-                    String tracker_names[] = searchToken.replace(" ", "").split(","); 
-                    for(String tracker_name : tracker_names){ 
-                        System.out.print(tracker_name);
-                        for(int j=0;j<10000;j+=100){ 
-                            try{
-                                url = "https://www.hackerrank.com/rest/contests/" + tracker_name +  "/leaderboard?offset="+j+"&limit=100";
-                                websiteUrl = new URL(url);
-                                connection = new URL(url).openConnection();
-                                o = (HttpURLConnection) websiteUrl.openConnection();
-                                o.setRequestMethod("GET");
-                                connection.setRequestProperty("Accept", "application/json");
-                                connection.setRequestProperty("User-Agent", "Mozilla/5.0");
-                                if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){ throw new ArithmeticException("INVALID URL : " + tracker_name); } 
-                                inputStream = connection.getInputStream();
-                                try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                                    StringBuilder jsonContent = new StringBuilder();
-                                    String line;
-                                    while ((line = bufferedReader.readLine()) != null) { 
-                                        jsonContent.append(line);
-                                    }
-                                    JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                                    JSONArray arr = jsonObject.getJSONArray("models");
-                                    int n = arr.length();
-                                    if( n == 0) break; 
-                                    for(int i=0;i<n;i++){
-                                        JSONObject tmp = arr.getJSONObject(i);
-                                        String userHandle = tmp.getString("hacker").toLowerCase();
-
-                                        if( ( !userHandle.isBlank() && !userHandle.equals("[deleted]")) && this.hackerrankDB.containsKey(userHandle)) { 
-                                            int index = hackerrankDB.get(userHandle);
-                                            int score = list.get(index).getHackerrankScore()+(int)tmp.getDouble("score"); 
-                                            hackerrankMaxScore = Integer.max(score, hackerrankMaxScore);
-                                            list.get(index).setHackerrankScore(score); 
-                                        }  
-                                    }
-                                } catch(Exception t) {}
-                            }
-                            catch(ArithmeticException e){ 
-                                JOptionPane.showMessageDialog(null, tracker_name+" is invalid. Ignoring...", "Error", JOptionPane.ERROR_MESSAGE); 
-                                break;
-                            }
-                            catch(Exception pp) {}
-                        } 
-                    } 
-                }catch(Exception ee){}
-            } 
-            int n = list.size();
-            for(int i=0;i<n;i++){
-                // geeksforgeeks overallScore 
-                try{
-                    if(list.get(i).getGeeksForGeeksHandle().isBlank()) throw new Exception("");
-                    url = "https://coding-platform-profile-api.onrender.com/geeksforgeeks/"+list.get(i).getGeeksForGeeksHandle(); 
-                    websiteUrl = new URL(url);
-                    connection = new URL(url).openConnection();
-                    o = (HttpURLConnection) websiteUrl.openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){
-                        throw new ArithmeticException();
-                    } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        int score; 
-                        try{
-                            score = jsonObject.getInt("overall_coding_score");
-                        }catch(Exception e) { score = 0; } 
-                        list.get(i).setGeeksForGeekspScore(score);
-                        GFGpMaxScore = Integer.max(score, GFGpMaxScore); 
-                    }catch (Exception e) { }
-                }catch(Exception e) {  } 
-
-                // Codechef 
-                try{
-                    if(list.get(i).getCodeChefHandle().isBlank()) throw new Exception("");
-                    url = "https://codechef-api.vercel.app/"+list.get(i).getCodeChefHandle();
-                    websiteUrl = new URL(url);
-                    connection = new URL(url).openConnection();
-                    o = (HttpURLConnection) websiteUrl.openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){
-                        throw new ArithmeticException();
-                    } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        int rating = 0;
-                        try{
-                            rating = jsonObject.getInt("currentRating");
-                        }catch(Exception e) { rating = 0; } 
-                        list.get(i).setCodeChefRating(rating);
-                        codechefMaxRating = Integer.max(codechefMaxRating, rating); 
-                    }catch (Exception e) { }
-                }catch(Exception e){  } 
-
-                // leetcode
-                try{ 
-                    if(list.get(i).leetcode_handle.isBlank()) throw new Exception("");
-                    url = "https://leetcode.com/graphql?query=query{userContestRanking(username:\""+ list.get(i).getLeetcodeHandle() + "\"){rating}}";
-                    websiteUrl = new URL(url);
-                    connection = new URL(url).openConnection();
-                    o = (HttpURLConnection) websiteUrl.openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE)
-                    {  throw new ArithmeticException(); } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        int rating = 0;
-                        try{
-                        rating = (int)jsonObject.getJSONObject("data").getJSONObject("userContestRanking").getDouble("rating");
-                        }catch(Exception e) { rating = 0; }  
-                        list.get(i).setLeetcodeRating(rating);
-                        leetcodeMaxRating = Integer.max(rating, leetcodeMaxRating);
-                    }catch (Exception e) { }
-                }catch(Exception e) {  }  
-            }
-        } catch(Exception e) {}
-        
-        //codeforces
-        try {
-            String url = "https://codeforces.com/api/user.ratedList?activeOnly=false&includeRetired=true";
-            JSONArray rows = null;
-            try {
-                URL websiteUrl = new URL(url);
-                URLConnection connection = new URL(url).openConnection();
-                HttpURLConnection o = (HttpURLConnection) websiteUrl.openConnection();
-                o.setRequestMethod("GET");
-                if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE) {
-                    JOptionPane.showMessageDialog(null, "No Internet | Could not connect!", "Error", JOptionPane.ERROR_MESSAGE); 
-                }
-                InputStream inputStream = connection.getInputStream();
-                try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                    StringBuilder jsonContent = new StringBuilder();
-                    String line;
-                    while ((line = bufferedReader.readLine()) != null) {
-                        jsonContent.append(line);
-                    }
-                    JSONObject jsonObject = new JSONObject(jsonContent.toString());
-                    String status = jsonObject.getString("status");
-                    if (status.equals("OK")) {
-                        rows = jsonObject.getJSONArray("result");
-                    }
-                }
-            } catch (HeadlessException | IOException | NumberFormatException | JSONException e) {
-                JOptionPane.showMessageDialog(null, "No Internet!", "Error", JOptionPane.ERROR_MESSAGE); 
-            }
-            JSONArray standings = rows; 
-            try { 
-                if (standings != null) {
-                    for (int j = 0; j < standings.length(); j++) {
-                        JSONObject member = standings.getJSONObject(j);
-                        String handle = member.getString("handle").toLowerCase();
-                        int points = member.getInt("rating"); 
-                        if(codeforcesDB.containsKey(handle)) {
-                            list.get(codeforcesDB.get(handle)).setCodeforcesRating(points);
-                            codeforcesMaxRating = Integer.max(points, codeforcesMaxRating); 
-                        } 
-                    }
-                } else {
-                    JOptionPane.showMessageDialog(null, "Something went wrong! 222", "Error", JOptionPane.ERROR_MESSAGE);
-                }
-            } catch (Exception e) {
-                JOptionPane.showMessageDialog(null, "Something Went Wrong! 223", "Error", JOptionPane.ERROR_MESSAGE);
-            }
-        } catch(Exception e) {  } 
-        return list;
-    } 
-
-    private double participantRank(Participant p){ // using normalization and weighted averages
-        // metric being 35% codeforces, 30% geeksforgeeks, 10% geeksforgeeks(practice), 15% leetcode, 10% codechef 
-        // including hackerrank:
-        // metric being 30% codeforces, 30% geeksforgeeks, 10% geeksforgeeks(practice), 10% leetcode, 10% codechef, 10% hackerrank
-        // 1477 3400 13.03235
-        try{
-            double cf   =   (p.getCodeforcesRating()/(double)codeforcesMaxRating)  *100  ;
-            double gfgs =   (p.getGeeksForGeeksScore()/(double)GFGMaxScore)        *100  ;
-            double gfgp =   (p.getGeeksForGeekspScore()/(double)GFGpMaxScore)      *100  ;
-            double lc   =   (p.getLeetcodeRating()/(double)leetcodeMaxRating)      *100  ;
-            double cc   =   (p.getCodeChefRating()/(double)codechefMaxRating)      *100  ;
-            double hr   =   (p.getHackerrankScore()/(double)hackerrankMaxScore)    *100  ;
-            double percentile ;
-            if( hackerrankchk ) percentile = ( cf * 0.3 + gfgs*0.3  + gfgp*0.1 + lc*0.1 + cc*0.1 + hr*0.1 ); 
-            else                percentile = ( cf * 0.35 + gfgs*0.3  + gfgp*0.1 + lc*0.15 + cc*0.1 ); 
-            p.percentile = percentile;
-            return percentile;
-        }catch (Exception e) {
-            JOptionPane.showMessageDialog(null, "Something went wrong!", "Error", JOptionPane.ERROR_MESSAGE);
-            return 0;
-        }
-    }
-    
-    private List<Participant> loadExcelSheet(String excelSheetPath) {
-        // Format of excel sheet must be : {Handle, GFG_Handle, Codeforces_Handle, LeetCode_Handle, CodeChef_Handle}
-        ArrayList<Participant> participants = new ArrayList<>( );
-
-        try { 
-            try ( FileInputStream excelFile = new FileInputStream(excelSheetPath);  Workbook workbook = WorkbookFactory.create(excelFile)) {
-                // Assuming the data is in the first sheet (index 0)
-                org.apache.poi.ss.usermodel.Sheet sheet = workbook.getSheetAt(0);
-
-                // Assuming 'Handle' is in column A (index 0) and Other handles start from column B (index 1)
-                Iterator<Row> rowIterator = sheet.iterator();
-                int handleInd = 0;
-                int gfgInd = 1;
-                int codeforcesInd = 2;
-                int leetcodeInd = 3;
-                int codechefInd = 4;  
-                int hackerrankInd = 5;
-
-                if ( handleInd==-1 || gfgInd == -1 || codeforcesInd == -1 || leetcodeInd == -1 || codechefInd == -1 || sheet.getRow(0).getCell(codeforcesInd) == null || sheet.getRow(0).getCell(gfgInd) == null || sheet.getRow(0).getCell(leetcodeInd) == null || sheet.getRow(0).getCell(codechefInd) == null || sheet.getRow(0).getCell(handleInd) == null  ) {
-                    JOptionPane.showMessageDialog(null, "Source Excel Sheet must have Columns: {Name|Handle, GFG_Handle, Codeforces_Handle, LeetCode_Handle, CodeChef_Handle, Hackerrank(Optional)}!", "Error", JOptionPane.ERROR_MESSAGE); 
-                    return new ArrayList<>();
-                }
-                
-                if( (hackerrankchk && sheet.getRow(0).getCell(hackerrankInd) == null   ) ){
-                    JOptionPane.showMessageDialog(null, "Hackerrank Contest ID's were provided! Yet Excel sheet doesn't haveHackerRank Usernames! Retry!", "Error", JOptionPane.ERROR_MESSAGE);
-                    return new ArrayList<>();
-                }
-                
-                if (rowIterator.hasNext()) {
-                    rowIterator.next();
-                }
-                
-                int ind = 0;
-                while (rowIterator.hasNext()) {
-                    Row row = rowIterator.next();
-                    
-                    Cell handleCell = row.getCell(handleInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    Cell gfgCell = row.getCell(gfgInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    Cell codeforcesCell = row.getCell(codeforcesInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL); 
-                    Cell leetcodeCell = row.getCell(leetcodeInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL); 
-                    Cell codechefCell = row.getCell(codechefInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    Cell hackerrankCell = row.getCell(hackerrankInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    
-                    Participant participant = new Participant(); 
-                    if( handleCell != null ){
-                         participant.setHandle(handleCell.toString().replace(" ", "").toLowerCase());
-                    } else break;
-                    if ( codeforcesCell != null ) { 
-                        String cfhandle = codeforcesCell.toString().replace(" ", "").toLowerCase();  
-                        cfhandle = cfhandle.replace("#n/a", "");
-                        cfhandle = cfhandle.replace("@cmritonline.ac.in", "");
-                        codeforcesDB.put(cfhandle, ind);
-                        participant.setCodeforcesHandle(cfhandle); 
-                    }
-                    if ( gfgCell != null ) { 
-                        String gfghandle = gfgCell.toString().replace(" ", "").toLowerCase();  
-                        gfghandle = gfghandle.replace("#n/a", "");
-                        gfghandle = gfghandle.replace("@cmritonline.ac.in", "");
-                        participant.setGeeksForGeeksHandle(gfghandle);
-                        geeksforgeeksDB.put(gfghandle, ind);
-                    }
-                    if ( leetcodeCell != null ){
-                        String lthandle = leetcodeCell.toString().replace(" ", "").toLowerCase();  
-                        lthandle = lthandle.replace("#n/a", "");
-                        lthandle = lthandle.replace("@cmritonline.ac.in", "");
-                        participant.setLeetcodeHandle(lthandle); 
-                    }
-                    if ( codechefCell != null ){
-                        String cchandle = codechefCell.toString().replace(" ", "").toLowerCase();  
-                        cchandle = cchandle.replace("#n/a", "");
-                        cchandle = cchandle.replace("@cmritonline.ac.in", "");
-                        participant.setCodeChefHandle(cchandle); 
-                    }
-                    if ( hackerrankCell != null && hackerrankchk ){
-                        String hrhandle = hackerrankCell.toString().replace(" ", "").toLowerCase();
-                        hrhandle = hrhandle.replace("#n/a", "");
-                        if( hrhandle.length()>1 && hrhandle.charAt(0) == '@') hrhandle = hrhandle.substring(1); 
-                        hrhandle = hrhandle.replace("@cmritonline.ac.in", "");
-                        participant.setHackerrankHandle(hrhandle); 
-                        hackerrankDB.put(hrhandle, ind);
-                    }
-                    participants.add(participant);
-                    ind++; 
-                }
-            }
-        } catch ( Exception e ) {
-            JOptionPane.showMessageDialog(null, "Source Excel Sheet must have Columns: {Name|Handle, GFG_Handle, Codeforces_Handle, LeetCode_Handle, CodeChef_Handle, HackerRank_Handle(Optional)}!", "Error", JOptionPane.ERROR_MESSAGE);
-            return new ArrayList<>();
-        }
-        return participants;
-    } 
-    
-    private void assignRanks(List<Participant> leaderboard) { 
-        Collections.sort(leaderboard, (a, b)-> -Double.compare(participantRank(a),participantRank(b) ) );
-        try {
-            for (int i = 0; i < leaderboard.size(); i++) {
-                leaderboard.get(i).setRank(i + 1);
-            }
-        } catch (Exception e) {
-            JOptionPane.showMessageDialog(null, "Something went wrong!", "Error", JOptionPane.ERROR_MESSAGE);
-        }
-    }
-
-    private class Participant { 
-        private String handle;
-        
-        private String codechef_handle;
-        private String codeforces_handle;
-        private String leetcode_handle;
-        private String geeksforgeeks_handle;
-        private String hackerrank_handle;
-        
-        private int codechefrating;
-        private int codeforcesrating;
-        private int leetcoderating;
-        private int geeksforgeeksscore;  // Contest Score
-        private int geeksforgeekspscore; // Practice Score
-        private int hackerrankscore;
-        private double percentile;
-        
-        private int rank;
-
-        private Participant() {
-            this.percentile = 0;
-            this.hackerrankscore = 0;
-            this.geeksforgeekspscore = 0;
-            this.geeksforgeeksscore = 0;
-            this.codeforcesrating = 0;
-            this.codechefrating = 0;
-            this.leetcoderating = 0;
-        }
-        
-        public void setPercentile(double p){
-            this.percentile = p;
-        }
-        
-        public double getPercentile(){
-            return this.percentile;
-        }
-        
-        public void setHandle(String handle) {
-            this.handle = handle;
-        } 
-        
-        public void setHackerrankHandle(String handle) {
-            this.hackerrank_handle = handle;
-        } 
-        
-        public void setGeeksForGeeksHandle(String handle) {
-            this.geeksforgeeks_handle = handle;
-        } 
-        
-        public void setLeetcodeHandle(String handle) {
-            this.leetcode_handle = handle;
-        }
-        
-        public void setCodeChefHandle(String handle) {
-            this.codechef_handle = handle;
-        }
-        
-        public void setCodeforcesHandle(String handle) {
-            this.codeforces_handle = handle;
-        }
-        
-        public String getGeeksForGeeksHandle() {
-            return this.geeksforgeeks_handle;
-        }
-        
-        public String getLeetcodeHandle() {
-            return this.leetcode_handle;
-        }
-        
-        public String getHackerrankHandle() {
-            return this.hackerrank_handle;
-        }
-        
-        public String getCodeChefHandle() {
-            return this.codechef_handle;
-        }
-        
-        public String getCodeforcesHandle() {
-            return this.codeforces_handle;
-        }
-
-        public void setGeeksForGeeksScore(int score) {
-            this.geeksforgeeksscore = score;
-        }
-        
-        public void setHackerrankScore(int score) {
-            this.hackerrankscore = score;
-        }
-        
-        public void setGeeksForGeekspScore(int score){
-            this.geeksforgeekspscore = score;
-        }
-        
-        public void setLeetcodeRating(int rating) {
-            this.leetcoderating = rating;
-        }
-        
-        public void setCodeChefRating(int rating) {
-            this.codechefrating = rating;
-        }
-        
-        public void setCodeforcesRating(int rating) {
-            this.codeforcesrating = rating;
-        }
-
-        public String getHandle() {
-            return handle;
-        }
-
-        public int getGeeksForGeeksScore() {
-            return this.geeksforgeeksscore;
-        }
-        
-        public int getHackerrankScore() {
-            return this.hackerrankscore;
-        }
-        
-        public int getGeeksForGeekspScore() {
-            return this.geeksforgeekspscore;
-        }
-        
-        public int getLeetcodeRating() {
-            return this.leetcoderating;
-        }
-        
-        public int getCodeChefRating() {
-            return this.codechefrating;
-        }
-        
-        public int getCodeforcesRating() {
-            return this.codeforcesrating;
-        }
-
-        public int getRank() {
-            return rank;
-        }
-
-        public void setRank(int rank) {
-            this.rank = rank;
-        }
-    } 
-    public static void main(String[] args) {
-        try {
-            SwingUtilities.invokeLater(() -> {
-                new CMRITLeaderboard2025().setVisible(true);
-            });
-        } catch (Exception e) {
-            JOptionPane.showMessageDialog(null, "Something went wrong!", "Error", JOptionPane.ERROR_MESSAGE);
-        }
-    }
-}
diff --git a/index.html b/index.html
deleted file mode 100644
index 87774e4..0000000
--- a/index.html
+++ /dev/null
@@ -1,42 +0,0 @@
-<html><head><title>Current CMRITLeaderboard2025</title></head><body><table><thead><tr><th>Rank<th>Handle<th>Codeforces_Handle<th>Codeforces_Rating<th>GFG_Handle<th>GFG_Contest_Score<th>GFG_Practice_Score<th>Leetcode_Handle<th>Leetcode_Rating<th>Codechef_Handle<th>Codechef_Rating<th>HackerRank_Handle<th>HackerRank_Practice_Score<th>Percentile</thead><style>@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600);
-
-*, *:before, *:after {
-  margin: 0;
-  padding: 0;
-  box-sizing: border-box;
-}
-
-body {
-  background: #105469;
-  font-family: 'Open Sans', sans-serif;
-}
-table {
-  background: #012B39;
-  border-radius: 0.25em;
-  border-collapse: collapse;
-  margin: 1em;
-}
-th {
-  border-bottom: 1px solid #364043;
-  color: #E2B842;
-  font-size: 0.85em;
-  font-weight: 600;
-  padding: 0.5em 1em;
-  text-align: center;
-}
-td {
-  color: #fff;
-  font-weight: 400;
-  padding: 0.65em 1em;
-  text-align: center;
-}
-tbody tr {
-  transition: background 0.25s ease;
-  text-align: center;
-}
-tbody tr:hover {
-  background: #014055;
-  text-align: left;
-}
-
-</style><tbody><tr><td>1<td>21r01a0513<td>cmrit_21r01a0513<td>867<td>21r01a0513<td>433<td>151<td>21r01a0513<td>1529<td>vishwatej4<td>1434<td>21r01a0513<td>117<td>64.81%<tr><td>2<td>21r01a0561<td>cmrit25__21r01a0561<td>707<td>21r01a0561<td>445<td>113<td>21r01a0561<td>1521<td>pavanvasam577<td>1421<td>21r01a0561<td>165<td>61.4%<tr><td>3<td>21r01a0520<td>21r01a0520<td>593<td>21r01a0520<td>550<td>14<td>21r01a0520<td>1671<td>premsai20<td>1370<td>21r01a0520<td>15<td>61.2%<tr><td>4<td>21r01a66e5<td>cmrit25_21r01a66e5<td>779<td>21r01a66e5<td>288<td>160<td>21r01a66e5<td>1452<td>deepak216<td>1394<td>21r01a66e5<td>790<td>61.04%<tr><td>5<td>21r01a7362<td>cmrit25_21r01a7362<td>554<td>21r01a7362<td>395<td>381<td>narayansharma09<td>1229<td>narayansharma<td>1478<td>21r01a7362<td>5<td>59.61%<tr><td>6<td>21r01a67f2<td>cmrit25_21r01a67f2<td>832<td>21r01a67f2<td>311<td>0<td>21r01a67f2<td>1580<td>sribro123<td>1427<td>21r01a67f2<td>571<td>58.06%<tr><td>7<td>21r01a66e0<td>cmrit25_21r01a66e0<td>829<td>21r01a66e0<td>228<td>255<td>21r01a66e0<td>1242<td>prashanth50<td>1125<td>21r01a66e0<td>714<td>57.72%<tr><td>8<td>21r01a7238<td>cmrit25_21r01a7238<td>1013<td>kjcreddy666<td>62<td>13<td>kjcreddy666<td>1455<td>jai_21r01a7238<td>1602<td>21r01a7238<td>1041<td>53.56%<tr><td>9<td>21r01a05r3<td>cmrit25_21r01a05r3<td>874<td>21r01a05r3<td>215<td>33<td>21r01a05r3<td>1484<td>bhanuprakash75<td>1416<td>21r01a05r3<td>378<td>52.11%<tr><td>10<td>21r01a66h1<td>cmrit25_21r01a66h1<td>990<td>moturiadithyasai<td>156<td>39<td>cmr_21r01a66h1<td>1455<td>adithya_09<td>1375<td>21r01a66h1<td>231<td>49.68%<tr><td>11<td>21r01a05c0<td>cmrit25_21r01a05c0<td>521<td>21r01a05c0<td>319<td>104<td>21r01a05c0<td>1404<td>tanirukavyasri<td>1305<td>21r01a05c0<td>204<td>49.32%<tr><td>12<td>21r01a66c7<td>cmrit25_21r01a66c7<td>811<td>21r01a66c7<td>192<td>43<td>21r01a66c7<td>1259<td>deepikachowdar<td>1351<td>21r01a66c7<td>477<td>49.04%<tr><td>13<td>21r01a0531<td>cmrit25_21r01a0531<td>801<td>21r01a0531<td>219<td>16<td>21r01a0531<td>1428<td>meg_21r01a0531<td>1317<td>21r01a0531<td>207<td>47.75%<tr><td>14<td>21r01a7345<td>cmrit25_21r01a7345<td>1108<td>cmr_21r01a7345<td>120<td>27<td>cmr_21r01a7345<td>1550<td>cmr_21r01a7345<td>1073<td>21r01a7345<td>71<td>47.03%<tr><td>15<td>21r01a67e6<td>cmrit25_21r01a67e6<td>984<td>21r01a67e6<td>0<td>6<td>21r01a67e6<td>1557<td>r_21r01a67e6<td>1429<td>21r01a67e6<td>796<td>46.53%<tr><td>16<td>21r01a05f9<td>cmrit25_21r01a05f9<td>759<td>sanjana_54<td>208<td>53<td>sanjana_54<td>1386<td>sanjana_54<td>1353<td>21r01a05f9<td>123<td>46.41%<tr><td>17<td>21r01a05k8<td>cmrit25_21r01a05k8<td>827<td>21r01a05k8<td>187<td>16<td>21r01a05k8<td>1363<td>srujan_20<td>1439<td>21r01a05k8<td>40<td>45.35%<tr><td>18<td>22r05a7302<td>22r05a7302<td>814<td>22r05a7302<td>78<td>206<td>22r05a7302<td>1464<td>charanteja45<td>1335<td>22r05a7302<td>169<td>45.28%<tr><td>19<td>21r01a6775<td>cmrit25_21r01a6775<td>902<td>21r01a6775<td>136<td>0<td>21r01a6775<td>1441<td>cmr_21r016775<td>1474<td>21r01a6775<td>97<td>44.95%<tr><td>20<td>21r01a67g1<td>cmrit25_21r01a67g1<td>932<td>21r01a67g1_harishh<td>90<td>0<td>21r01a67g1<td>1456<td>harish_1333<td>1365<td>21r01a67g1<td>335<td>44.77%<tr><td>21<td>21r01a0599<td>cmrit25_21r01a0599<td>855<td>sayeem<td>193<td>6<td>mdsayeem<td>1363<td>sayeem01<td>1240<td>21r01a0599<td>35<td>44.72%<tr><td>22<td>21r01a66a1<td>cmrit25_21r01a66a1<td>793<td>21r01aspay<td>163<td>2<td>cmr_21r01a66a1<td>1470<td>cmr_21r01a66a1<td>1419<td>21r01a66a1<td>139<td>44.38%<tr><td>23<td>21r01a67h9<td>cmrit25_21r01a67h9<td>816<td>21r01a67h9<td>119<td>0<td>21r01a67h9<td>1571<td>manaswini18<td>1320<td>21r01a67h9<td>338<td>44.29%<tr><td>24<td>21r01a05h2<td>cmrit25_21r01a05h2<td>821<td>21r01aymik<td>169<td>2<td>21r01a05h2<td>1423<td>cmr_21r01a05h2<td>1405<td>rakeshpadamatin1<td>30<td>43.9%<tr><td>25<td>21r01a0548<td>cmrit25_21r01a0548<td>881<td>varshitha613<td>69<td>58<td>varshitha_77<td>1427<td>varshitha_77<td>1385<td>21r01a0548<td>320<td>43.88%<tr><td>26<td>21r01a05d3<td>cmrit25_21r01a05d3<td>812<td>21r01a05d3<td>94<td>41<td>21r01a05d3<td>1398<td>edith3000<td>1319<td>21r01a05d3<td>429<td>43.8%<tr><td>27<td>22r05a0503<td>22r05a0503<td>816<td>22r05a0503<td>125<td>38<td>22r05a0503<td>1568<td>s22r05a0503<td>1151<td>22r05a0503<td>166<td>42.89%<tr><td>28<td>21r01a67e2<td>cmrit25_21r01a67e2<td>819<td>21r01a67e2<td>60<td>10<td>21r01a67e2<td>1380<td>raghavendra24<td>1220<td>21r01a67e2<td>661<td>42.79%<tr><td>29<td>21r01a66a8<td>cmrit25_21r01a66a8<td>786<td>21r01a3yvp<td>129<td>51<td>raju_9<td>1446<td>raju_2003<td>1295<td>21r01a66a8<td>142<td>42.78%<tr><td>30<td>21r01a05h0<td>cmrit25_21r01a05h0<td>790<td>21r01a05h0<td>162<td>2<td>21r01a05h0<td>1430<td>gowtham_sagar7<td>1395<td>21r01a05h0<td>20<td>42.74%<tr><td>31<td>21r01a0524<td>21r01a0524<td>590<td>21r01a0524<td>118<td>278<td>21r01a0524<td>1489<td>akshaya_42<td>1147<td>21r01a0524<td>45<td>42.36%<tr><td>32<td>21r01a7348<td>cmrit25_21r01a7348<td>846<td>21r01a7348<td>143<td>18<td>21r01a7348<td>1500<td>keerthana_7348<td>985<td>21r01a7348<td>142<td>42.33%<tr><td>33<td>21r01a6672<td>cmrit25_21r01a6672<td>784<td>21r01a6672<td>89<td>53<td>21r01a6672<td>1345<td>sanjana_6672<td>1261<td>21r01a6672<td>397<td>42.27%<tr><td>34<td>21r01a66d6<td>cmrit25_21r01a66d6<td>890<td>21r01a66d6<td>93<td>4<td>cmr_21r01a66d6<td>1435<td>cmr_21r01a66d6<td>1280<td>21r01a66d6<td>205<td>42.25%<tr><td>35<td>21r01a6618<td>cmrit25_21r01a6618<td>855<td>21r01a96ng<td>105<td>2<td>21r01a6618<td>1274<td>gs1103<td>1015<td>21r01a6618<td>456<td>41.94%<tr><td>36<td>21r01a6632<td>cmrit25_21r01a6632<td>639<td>21r016632<td>172<td>0<td>21r01a6632<td>1297<td>manishkumar_11<td>1137<td>21r01a6632<td>436<td>41.65%<tr><td>37<td>21r01a6696<td>cmrit25_21r01a6696<td>857<td>21r01a6696<td>121<td>29<td>21r01a6696<td>1321<td>siddharth291<td>1139<td>21r01a6696<td>122<td>41.4%<tr><td>38<td>21r01a67b2<td>21r01a67b2<td>759<td>21r01awke4<td>144<td>0<td>21r01a67b2<td>1482<td>harsha67b2<td>1395<td>21r01a67b2<td>10<td>41.25%<tr><td>39<td>21r01a66a0<td>cmrit25_21r01a66a0<td>773<td>srilekha_152<td>125<td>2<td>66a0<td>1406<td>srilekha_152<td>1299<td>21r01a66a0<td>169<td>41.06%<tr><td>40<td>21r01a0509<td>cmrit25_21r01a0509<td>734<td>21r01a0509<td>98<td>73<td>bhavani_2234<td>1379<td>bhavani_2234<td>1176<td>21r01a0509<td>309<td>41.04%<tr><td>41<td>22r05a6702<td>cmrit25_22r05a6702<td>626<td>praneeth702<td>191<td>39<td>22r05a6702<td>1227<td>praneeth702<td>1446<td>22r05a6702<td>23<td>41%<tr><td>42<td>21r01a0551<td>abhiram122002<td>933<td>21r01a0551<td>0<td>124<td>abhiram_212<td>1578<td>abhiram_2023<td>1388<td>abhiram551<td>15<td>40.9%<tr><td>43<td>21r01a0504<td>cmrit25_21r01a0504<td>647<td>21r01a0504<td>181<td>6<td>21r01a0504<td>1392<td>madhusudhan04<td>1333<td>21r01a0504<td>45<td>40.48%<tr><td>44<td>21r01a66c6<td>cmrit25_21r01a66c6<td>717<td>21r01a66c6<td>89<td>14<td>varshiniguptha66c6<td>1401<td>varshiniguptha<td>1242<td>21r01a66c6<td>419<td>40.24%<tr><td>45<td>21r01a05h6<td>cmrit25_21r01a05h6<td>739<td>21r01a05h6<td>168<td>3<td>21r01a05h6<td>1362<td>vaishnavi_5h6<td>1166<td>21r01a05h6<td>10<td>40.1%<tr><td>46<td>21r01a6623<td>cmrit25_21r01a6623<td>711<td>kneharedo1ck<td>135<td>7<td>nehakalimela<td>1380<td>nehareddy1904<td>1023<td>21r01a6623<td>330<td>40.09%<tr><td>47<td>21r01a0566<td>cmrit25_21r01a0566<td>852<td>21r01a1fp0<td>89<td>15<td>gnanitha_annavarapu<td>1355<td>r01a0566<td>1261<td>21r01a0566<td>113<td>40.05%<tr><td>48<td>21r01a05j3<td>cmrit25_21r01a05j3<td>816<td>21r01a05j3<td>79<td>14<td>21r01a05j3<td>1478<td>sravani173<td>1393<td>21r01a05j3<td>75<td>39.87%<tr><td>49<td>21r01a6712<td>rahuldrp<td>825<td>rahuldrp<td>75<td>22<td>rahuldrp<td>1317<td>rahuldrp<td>1454<td>rahuldrp<td>110<td>39.85%<tr><td>50<td>21r01a05n8<td>cmrit25-21r01a05n8<td>827<td>karthik_51<td>74<td>20<td>karthik_51<td>1377<td>karthik_51<td>1407<td>21r01a05n8<td>53<td>39.29%<tr><td>51<td>21r01a7210<td>cmrit25_21r01a7210<td>834<td>pavan_10<td>63<td>5<td>pavan_7210<td>1408<td>sololeveler_10<td>1302<td>21r01a7210_pavan<td>188<td>39.26%<tr><td>52<td>21r01a0543<td>cmrit25_21r01a0543<td>915<td>21r01a0543<td>68<td>2<td>santhosh_76<td>1350<td>santhoshnayakm<td>1247<td>21r01a0543<td>26<td>38.95%<tr><td>53<td>21r01a05a3<td>cmrit25_21r01a05a3<td>921<td>21r01a05a3<td>34<td>21<td>21r01a05a3<td>1320<td>rahilsubhan<td>1298<td>21r01a05a3<td>136<td>38.93%<tr><td>54<td>21r01a05m4<td>cmrit25_21r01a05m4<td>802<td>21r01acgdz<td>88<td>11<td>21r01a05m4<td>1445<td>sunil5m4<td>1307<td>21r01a05m4<td>27<td>38.8%<tr><td>55<td>21r01a0534<td>cmrit25_21r01a0534<td>842<td>21r01a0534<td>40<td>36<td>21r01a0534<td>1321<td>cmrit_21r01a05<td>1116<td>21r01a0534<td>329<td>38.69%<tr><td>56<td>21r01a05n7<td>cmrit25_21r01a05n7<td>758<td>21r01a05n7<td>100<td>10<td>21r01a05n7<td>1503<td>cmr_21r01a05n7<td>1301<td>21r01a05n7<td>15<td>38.67%<tr><td>57<td>21r01a0536<td>cmrit25_21r01a0536<td>959<td>21r01a0536<td>0<td>4<td>21r01a0536<td>1469<td>akanksha_konga<td>1278<td>21r01a0536<td>177<td>38.55%<tr><td>58<td>21r01a6690<td>cmrit25_21r01a6690<td>774<td>21r01a10bg<td>97<td>30<td>21r01a6690<td>1383<td>kbaakash12345<td>1130<td>21r01a6690<td>107<td>38.51%<tr><td>59<td>21r01a0514<td>cmrit2025_21r01a0514<td>725<td>21r01a0514<td>120<td>67<td>21r01a0514<td>1220<td>cmr_21r01a0514<td>1142<td>21r01a0514<td>45<td>38.24%<tr><td>60<td>21r01a0545<td>cmrit25_21r01a0545<td>712<td>ravi21r01a0545<td>70<td>86<td>21r01a0545ravi<td>1383<td>ravi_1603<td>1314<td>21r01a0545<td>85<td>38.12%<tr><td>61<td>21r01a0564<td>cmrit25_21r01a0564<td>652<td>akshitha12<td>117<td>35<td>akshitha12<td>1347<td>akshitha564<td>1286<td>21r01a0564<td>101<td>37.84%<tr><td>62<td>21r01a67f9<td>cmrit25_21r01a67f9<td>701<td>21r01a67f9<td>83<td>0<td>karthikf9<td>1271<td>karthikf9<td>1115<td>21r01a67f9<td>422<td>37.7%<tr><td>63<td>21r01a66f9<td>cmrit25_21r01a66f9<td>773<td>21r01a66f9<td>67<td>4<td>21r01a66f9<td>1452<td>nithin421<td>1425<td>21r01a66f9<td>29<td>37.65%<tr><td>64<td>21r01a6677<td>cmrit25_21r01a6677<td>759<td>siddesh122<td>76<td>6<td>21r01a6677<td>1392<td>siddesh122<td>1454<td>21r01a6677<td>5<td>37.51%<tr><td>65<td>21r01a7251<td>cmrit25_21r01a7251<td>799<td>parvathamr94gs<td>0<td>19<td>21r01a7251<td>1411<td>ramcharan01<td>1216<td>21r01a7251<td>455<td>37.5%<tr><td>66<td>21r01a67g9<td>cmrit25_21r01a67g9<td>846<td>21r01a67g9<td>25<td>0<td>narendra_3<td>1378<td>narendra3<td>1360<td>21r01a67g9<td>179<td>37.42%<tr><td>67<td>21r01a6676<td>cmrit25_21r01a6676<td>869<td>21r01a0lxc<td>10<td>18<td>21r01a6676<td>1430<td>navaketanb1910<td>1230<td>21r01a6676<td>197<td>37.22%<tr><td>68<td>22r05a6613<td>cmrit25_22r05a6613<td>867<td>22r05a6613<td>40<td>22<td>22r05a6613<td>1403<td>cmr_22r05a6613<td>1089<td>22r05a6613<td>122<td>37.17%<tr><td>69<td>21r01a7258<td>cmrit25_21r01a7258<td>902<td>somajhansi6504<td>10<td>2<td>somajhansi7258<td>1429<td>anonymous44<td>1398<td>21r01a7258<td>50<td>37.13%<tr><td>70<td>21r01a6666<td>cmrit25_21r01a6666<td>869<td>21r01a6666<td>39<td>0<td>21r01a6666<td>1354<td>cmr_21r01a6666<td>1215<td>21r01a6666<td>125<td>37.11%<tr><td>71<td>21r01a67f8<td>cmrit_21r01a67f8<td>868<td>21r01a67f8<td>0<td>9<td>sathwikakoduri<td>1572<td>sathwikakoduri<td>1274<td>21r01a67f8<td>147<td>37.02%<tr><td>72<td>21r01a0549<td>cmrit25_21r01a0549<td>851<td>21r01as4mb<td>28<td>21<td>harshithhreddy<td>1501<td>harshithreddy4<td>1227<td>21r01a0549<td>65<td>37.02%<tr><td>73<td>21r01a6761<td>cmrit25_21r01a6761<td>832<td>ganesh_61<td>9<td>4<td>ganesh_61<td>1498<td>ganesh_61<td>1174<td>21r01a6761<td>293<td>36.97%<tr><td>74<td>21r01a66h0<td>cmrit25_21r01a66h0<td>838<td>shivakumar_245<td>0<td>31<td>21r01a66h0<td>1513<td>shivakumar_245<td>1210<td>21r01a66h0<td>221<td>36.94%<tr><td>75<td>21r01a7342<td>cmrit25_21r01a7342<td>714<td>21r01a7nsm<td>0<td>81<td>21r01a7342<td>1291<td>cmr_21r01a7342<td>1441<td>21r01a7342<td>333<td>36.87%<tr><td>76<td>21r01a0563<td>21r01a0563<td>824<td>21r01a0563<td>60<td>0<td>21r01a0563<td>1401<td>shivathmika63<td>993<td>21r01a0563<td>191<td>36.82%<tr><td>77<td>21r01a05k5<td>cmrit25_21r01a05k5<td>862<td>21r01a05k5<td>29<td>7<td>veerendra74<td>1433<td>veerendra74<td>1272<td>21r01a05k5<td>56<td>36.75%<tr><td>78<td>21r01a0533<td>cmrit25_21r01a0533<td>823<td>21r01a0533<td>29<td>35<td>21r01a0533<td>1327<td>harikakaranam<td>1316<td>21r01a0533<td>91<td>36.66%<tr><td>79<td>22r05a0505<td>cmrit25_22r05a0505<td>358<td>cmrit_22r05a0505<td>206<td>16<td>22r05a0505<td>1516<td>praveen784<td>1265<td>22r05a0505<td>85<td>36.63%<tr><td>80<td>21r01a66e9<td>cmrit25_21r01a66e9<td>614<td>21r01a66e9<td>142<td>0<td>gandla_saikiran<td>1337<td>saikiran50412<td>1124<td>21r01a66e9<td>116<td>36.56%<tr><td>81<td>21r01a6714<td>cmrit25_21r01a6714<td>765<td>21r01a6714<td>0<td>51<td>21r01a6714<td>1478<td>cmr_21r01a6714<td>1436<td>21r01a6714<td>158<td>36.52%<tr><td>82<td>21r01a67h6<td>cmrit25_21r01a67h6<td>728<td>ramana67h6<td>0<td>7<td>21r01a67h6<td>1546<td>ramana67h6<td>1363<td>21r01a67h6<td>347<td>36.32%<tr><td>83<td>21r01a05p4<td>cmrit25_21r01a05p4<td>817<td>21r01a05p4<td>49<td>16<td>21r01a05p4<td>1314<td>cmr_21r01a05p4<td>1110<td>21r01a05p4<td>147<td>36.3%<tr><td>84<td>22r05a0416<td>cmrit25_22r05a0416<td>761<td>22r05a8kn1<td>20<td>5<td>22r05a0416<td>1561<td>charithasree27<td>1245<td>22r05a0416<td>230<td>36.29%<tr><td>85<td>21r01a05j6<td>cmrit25_21r01a05j6<td>776<td>21r01awu1y<td>60<td>9<td>21r01a05j6<td>1415<td>hima21r01a05j6<td>1304<td>21r01a05j6<td>5<td>36.27%<tr><td>86<td>21r01a66h8<td>cmrit25_21r01a66h8<td>958<td><td>0<td>0<td>akshayram<td>1426<td>akshayram<td>1096<td>21r01a66h8<td>93<td>36.24%<tr><td>87<td>22r05a0514<td>kodam1<td>880<td>22r05a0514<td>30<td>0<td>22r05a0514<td>1427<td>kodam1<td>1212<td>22r05a0514<td>9<td>36.14%<tr><td>88<td>21r01a05m5<td>cmrit25_21r01a05m5<td>830<td>21r01a05m5<td>40<td>24<td>21r01a05m5<td>1410<td>hemanth_463<td>1034<td>21r01a05m5<td>122<td>36.13%<tr><td>89<td>21r01a67j3<td>cmrit25_21r01a67j3<td>757<td>21r01a67j3<td>0<td>0<td>21r01a67j3<td>1487<td>sasaank7<td>1345<td>21r01a67j3<td>326<td>36.1%<tr><td>90<td>21r01a05j1<td>cmrit25_21r01a05j1<td>833<td>21r01a05j1<td>40<td>0<td>21r01a05j1<td>1493<td>srikar741<td>1217<td>21r01a05j1<td>0<td>36.01%<tr><td>91<td>21r01a0523<td>21r01a0523<td>850<td>21r01a0523<td>0<td>0<td>vedaprathik23<td>1597<td>vedaprathik23<td>1362<td>21r01a0523<td>30<td>35.97%<tr><td>92<td>21r01a67c0<td>cmrit25_21r01a67c0<td>601<td>21r01a67c0<td>109<td>0<td>21r01a67c0<td>1494<td>r01a67c0<td>1260<td>21r01a67c0<td>75<td>35.83%<tr><td>93<td>21r01a0552<td>21r01a0552<td>826<td>21r01a0552<td>30<td>1<td>21r01a0552<td>1438<td>shravani52<td>1011<td>21r01a0552<td>206<td>35.72%<tr><td>94<td>21r01a05e5<td>cmrit25_21r01a05e5<td>773<td>cmrit25_21r01a05e5<td>57<td>4<td>21r01a05e5<td>1436<td>csashish<td>1195<td>21r01a05e5<td>39<td>35.67%<tr><td>95<td>21r01a67a8<td>cmrit25_21r01a67a8<td>870<td>21r01apfut<td>0<td>19<td>21r01a67a8<td>1475<td>s21r01a67a8<td>1037<td>21r01a67a8<td>180<td>35.61%<tr><td>96<td>21r01a66b0<td>cmrit25_21r01a66b0<td>782<td>21r01ae3yc<td>10<td>100<td>21r01a66b0<td>1416<td>yashwanthh<td>1003<td>21r01a66b0<td>149<td>35.57%<tr><td>97<td>21r01a05h3<td>cmrit25_21r01a05h3<td>836<td>prashanthn60z<td>30<td>0<td>prashanth_padige07<td>1362<td>prashanth64<td>1318<td>21r01a05h3<td>12<td>35.52%<tr><td>98<td>21r01a67b5<td>21r01a67b5<td>809<td>21r01a2k2z<td>29<td>17<td>21r01a67b5<td>1521<td>cmr21r01a67b5<td>1075<td>21r01a67b5<td>80<td>35.38%<tr><td>99<td>21r01a6687<td>cmrit25_21r01a6687<td>773<td>21r01a6687<td>9<td>48<td>ashwitha1702<td>1420<td>ashwitha3610<td>823<td>21r01a6687<td>408<td>35.34%<tr><td>100<td>21r01a7360<td>thumusanjay000<td>820<td>thumusanjay000<td>0<td>0<td>tumusanjay000<td>1586<td>tumusanjay<td>1390<td>thumusanjay000<td>0<td>35.16%<tr><td>101<td>21r01a0410<td>21r01a0410<td>812<td>21r01a0410<td>30<td>4<td>21r01a0410<td>1522<td>shivani_0410<td>1132<td>21r01a0410<td>32<td>35.06%<tr><td>102<td>21r01a05p5<td>cmrit25_21r01a05p5<td>778<td>21r01a05p5<td>50<td>18<td>21r01a05p5<td>1209<td>cmr_21r01a05p5<td>1165<td>21r01a05p5<td>119<td>35.05%<tr><td>103<td>21r01a67b1<td>cmrit25_21r01a67b1<td>822<td>21r01ari5z<td>30<td>0<td>21r01a67b1<td>1554<td>cmr_21r01a67b1<td>1091<td>21r01a67b1<td>20<td>34.98%<tr><td>104<td>21r01a0441<td>21r01a0441<td>765<td>21r01a0441<td>37<td>2<td>21r01a0441<td>1450<td>sunil441<td>1191<td>21r01a0441<td>97<td>34.97%<tr><td>105<td>21r01a0593<td>cmrit25_21r01a0593<td>778<td>pavish2xqq<td>25<td>21<td>21r01a0593<td>1271<td>vishnu_593<td>1090<td>kvv21r01a0593<td>241<td>34.83%<tr><td>106<td>21r01a67k3<td>cmrit25_21r01a67k3<td>757<td>21r01a67k3<td>49<td>1<td>charan_k3<td>1379<td>v21r01a67k3<td>1304<td>charan_k3<td>0<td>34.8%<tr><td>107<td>21r01a7301<td>cmrit25_21r01a7301<td>754<td>21r01ao4pu<td>35<td>0<td>ab031<td>1568<td>ab013<td>1065<td>21r01a7301<td>120<td>34.69%<tr><td>108<td>21r01a66e2<td>cmrit25_21r01a66e2<td>740<td>21r01a66e2<td>60<td>6<td>21r01a66e2<td>1403<td>sh21r01a66e2<td>1060<td>21r01a66e2<td>90<td>34.65%<tr><td>109<td>21r01a6689<td>cmrit25_21r01a6689<td>783<td>21r01a6689<td>0<td>31<td>ashwini_21r01a6689<td>1372<td>ashu21r01a6689<td>1068<td>21r01a6689<td>279<td>34.63%<tr><td>110<td>22r05a0521<td>cmrit25_22r05a0521<td>682<td>22r05a0521<td>40<td>28<td>22r05a0521<td>1400<td>dhanu521<td>1187<td>22r05a0521<td>179<td>34.53%<tr><td>111<td>21r01a05g6<td>cmrit25_21r01a05g6<td>722<td>21r01a05g6<td>40<td>22<td>21r01a05g6<td>1377<td>cmr_21r01a05g6<td>1193<td>21r01a05g6<td>107<td>34.44%<tr><td>112<td>21r01a6715<td>vivekdunuka<td>748<td>vivek_6715<td>49<td>2<td>dunukavivek<td>1381<td>vivekdunuka<td>1270<td>21r01a6715<td>0<td>34.43%<tr><td>113<td>21r01a6693<td>21r01a6693<td>785<td>21r01alz21<td>10<td>4<td>adithya2210<td>1368<td>adithya2210<td>1281<td>21r01a6693<td>133<td>34.42%<tr><td>114<td>21r01a66d5<td>cmrit25_21r01a66d5<td>752<td>21r01a66d5<td>9<td>42<td>21r01a66d5<td>1442<td>akhil7777<td>1073<td>21r01a66d5<td>196<td>34.39%<tr><td>115<td>21r01a6758<td>cmrit25_21r01a6758<td>438<td>21r01a6758<td>135<td>25<td>nandhu2304<td>1238<td>nandhu2304<td>1077<td>21r01a6758<td>326<td>34.25%<tr><td>116<td>21r01a0559<td>cmrit25_21r01a0559<td>755<td>21r01a0559<td>29<td>0<td>21r01a0559<td>1354<td>sravani1304<td>1330<td>21r01a0559<td>60<td>34.24%<tr><td>117<td>21r01a0544<td>cmrit25_21r01a0544<td>789<td>21r01a0544<td>20<td>26<td>sushma_2374<td>1375<td>sushma_2374<td>998<td>21r01a0544<td>167<td>34.23%<tr><td>118<td>21r01a66b1<td>cmrit25_21r01a66b1<td>803<td>21r01a66b1<td>10<td>0<td>21r01a66b1<td>1345<td>nishanth069<td>1212<td>21r01a66b1<td>141<td>34.21%<tr><td>119<td>21r01a0585<td>21r01a0585<td>804<td>21r01a0585<td>0<td>8<td>agent_storm<td>1445<td>agent_storm<td>1379<td>agent_storm10<td>0<td>34.16%<tr><td>120<td>21r01a6635<td>cmrit25_21r01a6635<td>873<td>mdabdulkadeer<td>0<td>11<td>mdabdulkadeer<td>1266<td>mdabdulkadeer<td>1113<td>21r01a6635<td>115<td>34.12%<tr><td>121<td>21r01a66b5<td>cmrit25_21r01a66b5<td>744<td>21r01ax5wh<td>78<td>0<td>21r01a66b5<td>1253<td>jagadeesh55<td>1049<td>21r01a66b5<td>35<td>34.11%<tr><td>122<td>22r05a0501<td>cmrit25_22r05a0501<td>688<td>abbagouni22501<td>39<td>6<td>22r05a0501<td>1358<td>bhavani2003<td>1233<td>22r05a0501<td>173<td>34.02%<tr><td>123<td>22r05a0406<td>cmrit25_22r05a0406<td>722<td>22r05a8g5o<td>20<td>0<td>22r05a0406<td>1488<td>akhilreddy_13<td>1351<td>22r05a0406<td>68<td>34.02%<tr><td>124<td>21r01a0557<td>cmrit25_21r01a0557<td>741<td>thada_preethi<td>0<td>28<td>21r01a0557<td>1451<td>cmr_21r01a0557<td>1264<td>21r01a0557<td>140<td>34%<tr><td>125<td>21r01a05d6<td>cmrit25_21r01a05d6<td>763<td>21r01a05d6<td>69<td>0<td>21r01a05d6<td>1344<td>julie14<td>994<td>21r01a05d6<td>15<td>34%<tr><td>126<td>21r01a7233<td>cmrit25_21r01a7233<td>809<td>siddu99<td>9<td>2<td>21r01a7233<td>1425<td>siddu99<td>1269<td>21r01a7233<td>20<td>33.99%<tr><td>127<td>21r01a6699<td>cmrit25_21r01a6699<td>835<td>21r01ay00k<td>0<td>0<td>aparna_235<td>1421<td>aparna_235<td>1000<td>21r01a6699<td>194<td>33.97%<tr><td>128<td>21r01a7309<td>cmrit25_21r01a7309<td>810<td>21r01a7309<td>0<td>0<td>21r01a7309<td>1586<td>abhinav_781<td>1179<td>21r01a7309<td>35<td>33.96%<tr><td>129<td>21r01a6665<td>21r01a6665<td>767<td>21r01a6665<td>37<td>34<td>abhishekabramaina<td>1343<td>abhishek202002<td>1084<td>21r01a6665<td>31<td>33.94%<tr><td>130<td>22r05a0427<td>cmrit25_22r05a0427<td>600<td>22r05a08ms<td>50<td>5<td>sowmika_27<td>1510<td>sowmika_27<td>1258<td>22r05a0427<td>192<td>33.93%<tr><td>131<td>22r05a0520<td>cmrit25_22r05a0520<td>727<td>cmrit25_22r05a0520<td>38<td>26<td>22r05a0520<td>1222<td>ramupalla912<td>1099<td>22r05a0_520<td>196<td>33.93%<tr><td>132<td>22r05a0401<td>cmrit25_22r05a0401<td>700<td>22r05a0401<td>10<td>56<td>22r05a0401<td>1432<td>cmr_22r05a0401<td>1117<td>22r05a0401<td>195<td>33.91%<tr><td>133<td>21r01a0550<td>cmrit25_21r01a0550<td>572<td>21r01a0550<td>113<td>2<td>21r01a0550<td>1273<td>akhil_550<td>1220<td>21r01a0550<td>63<td>33.86%<tr><td>134<td>21r01a04e6<td>cmrit25_21r01a04e6<td>578<td>gmuma_16<td>10<td>97<td>gmumamaheswararao<td>1489<td>gmuma_16<td>1068<td>21r01a04e6<td>339<td>33.8%<tr><td>135<td>21r01a7209<td>21r01a7209<td>761<td>21r01a7209<td>20<td>11<td>sindhu_21r01a7209<td>1331<td>sindhuja_9849<td>1079<td>21r01a7209<td>197<td>33.78%<tr><td>136<td>21r01a66a3<td>21r01a66a3<td>765<td>21r01aup3f<td>10<td>30<td>21r01a66a3<td>1404<td>manisha_75<td>1073<td>21r01a66a3<td>145<td>33.7%<tr><td>137<td>21r01a67g3<td>cmrit25_21r01a67g3<td>599<td>mayaanambiar<td>70<td>0<td>maya_g3<td>1314<td>maya_g3<td>940<td>21r01a67g3<td>392<td>33.68%<tr><td>138<td>21r01a67h4<td>cmrit25-21r01a67h4<td>833<td>21r01acdlh<td>0<td>0<td>pranay_kumar45<td>1375<td>pranaykumar45<td>1203<td>21r01a67h4<td>42<td>33.47%<tr><td>139<td>21r01a6685<td>cmrit25_21r01a6685<td>757<td>koushik_04<td>0<td>0<td>koushik2003<td>1430<td>saikoushik04<td>1315<td>21r01a6685<td>103<td>33.45%<tr><td>140<td>21r01a6602<td>21r01a6602<td>774<td>21r01a6602<td>19<td>12<td>cmr_21r01a6602<td>1382<td>cmr_21r01a6602<td>879<td>21r01a6602<td>227<td>33.36%<tr><td>141<td>21r01a0508<td>cmrit25_21r01a0508<td>716<td>21r01a0508<td>29<td>0<td>21r01a0508<td>1309<td>vishnupriya508<td>1368<td>21r01a0508<td>55<td>33.34%<tr><td>142<td>21r01a6766<td>cmrit25_21r01a6766<td>827<td><td>0<td>0<td>srinidhi_12<td>1472<td>jerry1002<td>1177<td>cmrit25_21r01a6766<td>0<td>33.33%<tr><td>143<td>21r01a05r6<td>cmrit25_21r01a05r6<td>788<td>21r01a05r6<td>0<td>14<td>21r01a05r6<td>1439<td>cmr_21r01a05r6<td>1093<td>21r01a05r6<td>119<td>33.3%<tr><td>144<td>21r01a6634<td>cmrit25_21r01a6634<td>723<td>21r01a6634<td>192<td>1<td>nikitha92<td>1297<td>nikitha92<td>0<td>nikithareddy<td>0<td>33.27%<tr><td>145<td>21r01a7313<td>21r01a7313<td>858<td>21r01a7313<td>0<td>11<td>21r01a7313<td>1512<td>jay21r01a7313<td>910<td>21r01a7313<td>45<td>33.27%<tr><td>146<td>21r01a6619<td>cmrit__2521r01a6619<td>826<td>sricharanteja<td>0<td>8<td>21r01a6619<td>1482<td>sricharanteja9<td>1057<td>21r01a6619<td>25<td>33.06%<tr><td>147<td>21r01a6796<td>21r01a6796<td>721<td>21r01a6796<td>20<td>0<td>21r01a6796<td>1540<td>jukantisoumya9<td>1180<td>21r01a6796<td>50<td>33.05%<tr><td>148<td>21r01a6670<td>cmrit25_21r01a6670<td>805<td>vidhya_6670<td>0<td>0<td>vidhya_6670<td>1383<td>vidhya_6670<td>1285<td>vidhya_6670<td>0<td>33.03%<tr><td>149<td>21r01a6669<td>cmrit25_21r01a6669<td>764<td>21r01apm60<td>135<td>12<td>21r01a6669<td>1288<td>21r01a6669<td>0<td>21r01a6669<td>182<td>33.02%<tr><td>150<td>21r01a6719<td>cmrit25_21r01a6719<td>776<td>21r01amvt4<td>0<td>270<td>21r01a6719<td>0<td>pujitha567<td>1209<td>21r01a6719<td>194<td>33%<tr><td>151<td>21r01a0558<td>cmrit25_21r01a0558<td>625<td>nischaypq24<td>80<td>0<td>user0322sl<td>1299<td>nischayreddy<td>1251<td>nischayreddy_t<td>0<td>32.87%<tr><td>152<td>21r01a7347<td>sadanand26<td>806<td>21r01aeapc<td>0<td>31<td>21r01a7347<td>1306<td>sadanand26<td>1069<td>21r01a7347<td>75<td>32.79%<tr><td>153<td>21r01a05a6<td>cmrit25_21r01a05a6<td>769<td>harishblia<td>10<td>0<td>21r01a05a6<td>1240<td>harishgo764<td>1314<td>harishgo764<td>57<td>32.72%<tr><td>154<td>21r01a67j7<td>cmrit25_21r01a67j7<td>702<td>manohar7j7<td>18<td>21<td>21r01a67j7<td>1349<td>cmr_21r01a67j7<td>1111<td>21r01a67j7<td>165<td>32.67%<tr><td>155<td>21r01a6680<td>cmrit25_21r01a6680<td>789<td>chabhi0z1r<td>0<td>6<td>chabhilash<td>1418<td>chabhilash<td>1069<td>21r01a6680<td>91<td>32.57%<tr><td>156<td>21r01a67a4<td>cmrit25_21r01a67a4<td>716<td><td>0<td>0<td>meghana_939<td>1427<td>meghana_939<td>1311<td>21r01a67a4<td>102<td>32.53%<tr><td>157<td>21r01a05j7<td>vishnuabhi<td>706<td>21r01a05j7<td>30<td>0<td>cmr_21r01a05j7<td>1489<td>vishnu_5j7<td>1177<td>21r01a05j7<td>0<td>32.49%<tr><td>158<td>21r01a05f1<td>cmrit25_21r01a05f1<td>748<td>21r01a05f1<td>10<td>15<td>21r01a05f1<td>1368<td>vynika2004<td>1037<td>21r01a05f1<td>139<td>32.45%<tr><td>159<td>21r01a05m7<td>21r01a05m7<td>787<td>21r01a05m7<td>0<td>7<td>21r01a05m7<td>1409<td>prasad_00<td>1071<td>21r01a05m7<td>82<td>32.43%<tr><td>160<td>21r01a66a5<td>cmrit25_21r01a66a5<td>736<td>21r01al8fu<td>0<td>0<td>21r01a66a5<td>1322<td>cmr_21r01a66a5<td>1326<td>21r01a66a5<td>90<td>32.33%<tr><td>161<td>21r01a67a3<td>cmrit25_21r01a67a3<td>828<td>21r01aebz4<td>0<td>0<td>21r01a67a3<td>1481<td>v21r01a67a3<td>942<td>21r01a67a3<td>25<td>32.17%<tr><td>162<td>21r01a66a9<td>21r01a66a9<td>824<td>21r01adbxu<td>0<td>9<td>21r01a66a9<td>1414<td>cmr_21r01a66a9<td>805<td>21r01a66a9<td>123<td>32.03%<tr><td>163<td>21r01a7263<td>gaurav_saiteja<td>752<td><td>0<td>0<td>gaurav_saiteja<td>1404<td>gaurav_saiteja<td>1282<td>gaurav_saiteja<td>0<td>32%<tr><td>164<td>21r01a6765<td>cmrit25_21r01a6765<td>756<td>21r01a6765<td>0<td>0<td>21r01a6765<td>1351<td>h21r01a6765<td>1175<td>21r01a6765<td>90<td>31.98%<tr><td>165<td>21r01a67f6<td>21r01a67f6<td>692<td>21r01a67f6<td>10<td>0<td>akshaj06<td>1501<td>cmr_21r01a67f6<td>1306<td>akshaj<td>0<td>31.97%<tr><td>166<td>22r05a6611<td>cmrit25_22r05a6611<td>760<td>22r05a6611<td>0<td>19<td>22r05a6611<td>1336<td>sinu19<td>1043<td>22r05a6611<td>117<td>31.91%<tr><td>167<td>21r01a6795<td>cmrit25_21r01a6795<td>722<td><td>0<td>0<td>upendra456<td>1550<td>upendra456<td>1159<td>21r01a6795<td>50<td>31.91%<tr><td>168<td>22r05a0518<td>22r05a0518<td>803<td>22r05a0518<td>0<td>0<td>22r05a0518<td>1533<td>venu22r05a0518<td>896<td>22r05a0518<td>50<td>31.89%<tr><td>169<td>21r01a05d7<td>cmrit25_21r01a05d7<td>779<td>21r01a05d7<td>20<td>2<td>21r01a05d7<td>1372<td>akanksha_0304<td>995<td>21r01a05d7<td>15<td>31.89%<tr><td>170<td>22r05a6614<td>cmrit25_22r05a6614<td>787<td>22r05a6614<td>9<td>2<td>22r05a6614<td>1415<td>govardhan14<td>1037<td>cmr_22r05a6614<td>0<td>31.82%<tr><td>171<td>21r01a7259<td>cmrit25_21r01a7259<td>727<td>arjun1515<td>0<td>13<td>21r01a7259<td>1415<td>arjun1515<td>1162<td>21r01a7259<td>70<td>31.8%<tr><td>172<td>21r01a66g1<td>cmrit25_21r01a66g1<td>702<td>21r01a66g1<td>0<td>33<td>21r01a66g1<td>1489<td>pavan138<td>949<td>21r01a66g1<td>162<td>31.77%<tr><td>173<td>21r01a05b8<td>cmrit25_21r01a05b8<td>760<td>21r01a05b8<td>0<td>16<td>21r01a05b8<td>1415<td>haneefa215b8<td>1061<td>21r01a05b8<td>50<td>31.75%<tr><td>174<td>21r01a05d8<td>b_sai_charan99<td>585<td>21r01a4moz<td>60<td>0<td>21r01a05d8<td>1418<td>sai21r01a05d8<td>1265<td>21r01a05d8cmrit1<td>0<td>31.7%<tr><td>175<td>21r01a66a2<td>cmrit25_21r01a66a2<td>725<td>sandy_m0<td>10<td>18<td>sandeepmanepally<td>1306<td>sandy_m0<td>1119<td>21r01a66a2<td>84<td>31.67%<tr><td>176<td>21r01a7317<td>21r01a7317<td>751<td>21r01a7317<td>20<td>0<td>21r01a7317<td>1339<td>sridhar7317<td>1063<td>21r01a7317<td>35<td>31.67%<tr><td>177<td>21r01a05f2<td>21r01a05f2<td>769<td>21r01a05f2<td>0<td>25<td>21r01a05f2<td>1392<td>sketch5f2<td>977<td>21r01a05f2<td>59<td>31.61%<tr><td>178<td>21r01a0528<td>cmrit25_21r01a0528<td>0<td>21r01a0528<td>162<td>229<td>21r01a0528<td>1392<td>k_prakashraj17<td>1334<td>21r01a0528<td>50<td>31.59%<tr><td>179<td>21r01a66f4<td>cmrit25_21r01a66f4<td>741<td>21r01a66f4<td>0<td>0<td>teja_sri26<td>1353<td>teja_sri26<td>1101<td>21r01a66f4<td>128<td>31.58%<tr><td>180<td>21r01a66a6<td>cmrit25_21r01a66a6<td>680<td>21r01ac1bc<td>0<td>29<td>yousufansari<td>1412<td>yousufansari<td>1059<td>21r01a66a6<td>171<td>31.53%<tr><td>181<td>21r01a04f6<td>cmrit25_21r01a04f6<td>708<td>21r01a04f6<td>0<td>0<td>21r01a04f6<td>1363<td>pranish_f6<td>1093<td>21r01a04f6<td>194<td>31.51%<tr><td>182<td>21r01a66c5<td>cmrit25_21r01a66c5<td>611<td>21r01a66c5<td>10<td>93<td>t_devendar<td>1418<td>devendar7987<td>1002<td>21r01a66c5<td>121<td>31.48%<tr><td>183<td>21r01a67a7<td>cmrit25_21r01a67a7<td>786<td>21r01a59yv<td>0<td>0<td>21r01a67a7<td>1421<td>s_21r01a67a7<td>991<td>21r01a67a7<td>40<td>31.39%<tr><td>184<td>22r05a7204<td>cmrit25_22r05a7204<td>752<td>22r05a7204<td>0<td>2<td>22r05a7204<td>1371<td>cmr22r05a7204<td>1130<td>22r05a7204<td>46<td>31.36%<tr><td>185<td>21r01a04k4<td>cmrit25_21r01a04k4<td>701<td>21r01a04k4<td>0<td>9<td>21r01a04k4<td>1427<td>r01a04k4<td>997<td>21r01a04k4<td>184<td>31.27%<tr><td>186<td>21r01a0553<td>srijaseepathi07<td>748<td>21r01a0553<td>0<td>0<td>srijaseepathi07<td>1489<td>srijaseepathi<td>1041<td>srijaseepathi07<td>37<td>31.25%<tr><td>187<td>21r01a6764<td>cmrit25_21r01a6764<td>832<td>21r01a6764<td>0<td>100<td>21r01a6764<td>0<td>vyshnavi6764<td>1458<td>21r01a6764<td>190<td>31.24%<tr><td>188<td>21r01a6673<td>cmrit25_21r01a6673<td>739<td>srivarshini<td>0<td>0<td>21r01a6673<td>1311<td>varshini8<td>1279<td>srivarshini<td>0<td>31.17%<tr><td>189<td>21r01a6683<td>manohar_eldhandi<td>708<td>21r01a6683<td>25<td>0<td>manohareldhandi<td>1396<td>mano2003<td>1004<td>21r01a6683<td>51<td>31.14%<tr><td>190<td>21r01a6788<td>21r01a6788<td>726<td>6788_cmrit25<td>0<td>10<td>21r01a6788<td>1395<td>r01a6788<td>893<td>21r01a6788<td>179<td>30.95%<tr><td>191<td>21r01a6615<td>cmrit25_21r01a6615<td>728<td>21r01a6615<td>25<td>0<td>21r01a6615<td>1292<td>cmr21r01a6615<td>976<td>21r01a6615<td>65<td>30.93%<tr><td>192<td>21r01a7262<td>cmrit25_21r01a7262<td>695<td>21r01a7262<td>0<td>9<td>21r01a7262<td>1408<td>sai_vivek04<td>1059<td>21r01a7262<td>132<td>30.92%<tr><td>193<td>21r01a0484<td>cmrit25_21r01a0484<td>671<td>akankshagof5fs<td>0<td>0<td>akanksha2k23<td>1509<td>akanksha2k23<td>834<td>21r01a0484<td>295<td>30.91%<tr><td>194<td>21r01a05j4<td>cmrit25_21r01a05j4<td>902<td>21r01a05j4<td>70<td>0<td>gopikrishna<td>0<td>r01a05j4<td>1194<td>21r01a05j4<td>45<td>30.88%<tr><td>195<td>22r05a6618<td>cmrit25_22r05a6618<td>625<td>22r05a1feu<td>40<td>6<td>naveen1008<td>1314<td>velpulanaveen9<td>1107<td>22r05a6618<td>80<td>30.8%<tr><td>196<td>21r01a04k0<td>21r01a04k0<td>705<td>21r01accwe<td>10<td>0<td>21r01a04k0<td>1434<td>manojmikey<td>1057<td>21r01a04k0manoj<td>47<td>30.76%<tr><td>197<td>21r01a66c4<td>cmrit25_21r01a66c4<td>731<td>nithhyya<td>0<td>0<td>nithya66c4<td>1350<td>nithhyya<td>1009<td>21r01a66c41<td>120<td>30.69%<tr><td>198<td>21r01a6799<td>saikrishna_25<td>748<td>21r01a6799<td>0<td>0<td>21r01a6799<td>1374<td>r01a6799<td>1089<td>21r01a6799<td>15<td>30.68%<tr><td>199<td>21r01a67d6<td>21r01a67d6<td>734<td><td>0<td>0<td>21r01a67d6<td>1392<td>meghana_85<td>1134<td>21r01a67d6<td>5<td>30.67%<tr><td>200<td>21r01a05e1<td>charan_boga<td>589<td>21r01a05e1<td>40<td>19<td>21r01a05e1<td>1420<td>cmr_21r01a05e1<td>942<td>21r01a05e1<td>149<td>30.62%<tr><td>201<td>21r01a66b6<td>cmrit25_21r01a66b6<td>734<td>21r01ant7h<td>0<td>0<td>21r01a66b6<td>1354<td>cmr_21r01a66b6<td>1042<td>21r01a66b6<td>70<td>30.51%<tr><td>202<td>21r01a66d9<td>cmrit_21r01a66d9<td>378<td>21r01a66d9<td>0<td>92<td>cmr_21r01a66d9<td>1411<td>navya_63<td>1093<td>21r01a66d9<td>520<td>30.32%<tr><td>203<td>21r01a7316<td>21r01a7316<td>726<td>21r01a7316<td>0<td>15<td>21r01a7316<td>1377<td>madhan45<td>1000<td>21r01a7316<td>40<td>30.31%<tr><td>204<td>21r01a6649<td>cmrit25_21r01a6649<td>635<td>vinay2605<td>0<td>10<td>vinay2605<td>1427<td>vinay2605<td>1172<td>21r01a6649<td>110<td>30.28%<tr><td>205<td>21r01a66h5<td>cmrit25_21r01a66h5<td>647<td>21r01a66h5<td>0<td>23<td>21r01a66h5<td>1262<td>pavithra_12<td>938<td>21r01a66h5<td>277<td>30.08%<tr><td>206<td>22r05a7301<td>jayanth<td>1411<td>jayanth<td>0<td>0<td>jayanth<td>0<td>jayanth<td>0<td>jayanth<td>0<td>30%<tr><td>207<td>22r05a6608<td>22r05a6608<td>703<td>22r05a6608<td>0<td>8<td>22r05a6608<td>1436<td>abhishek4044<td>1025<td>22r05a6608<td>25<td>29.99%<tr><td>208<td>21r01a6711<td>21r01a6711<td>714<td>21r01a6711<td>0<td>0<td>21r01a6711<td>1316<td>kartheekdama11<td>1108<td>21r01a6711<td>35<td>29.94%<tr><td>209<td>21r01a7228<td>21r01a7228<td>710<td>21r01anlru<td>0<td>0<td>user0895hf<td>1413<td>yashaswini84<td>1073<td>21r01a7228<td>0<td>29.85%<tr><td>210<td>21r01a05m1<td>cmrit25_21r01a05m1<td>578<td>21r01a05m1<td>0<td>0<td>21r01a05m1<td>1602<td>cmr_21r01a05m1<td>1340<td>21r01a05m1<td>0<td>29.79%<tr><td>211<td>21r01a6633<td>cmrit25_21r01a6633<td>729<td>21r01a6633<td>0<td>6<td>sairam_sagar<td>1342<td>sairam_33<td>710<td>cmrit_21r01a6633<td>210<td>29.76%<tr><td>212<td>21r01a05e6<td>21r01a05e6<td>632<td>21r01a05e6<td>30<td>5<td>21r01a05e6<td>1669<td>cmr_21r01a05e6<td>793<td>21r01a05e6<td>0<td>29.68%<tr><td>213<td>21r01a04p2<td>cmrit_25_21r01a04p2<td>782<td>m_vaishnavi06<td>0<td>0<td>21r01a04p2<td>1415<td>m_vaishnavi06<td>729<td>21r01a04p2<td>35<td>29.59%<tr><td>214<td>21r01a0516<td>cmrit25_21r01a0516<td>360<td>21r01a0516<td>125<td>2<td>21r01a0516<td>1400<td>vinuthnagoud<td>1094<td>21r01a0516<td>15<td>29.48%<tr><td>215<td>22r05a6603<td>cmrit25_22r05a6603<td>617<td>cheedallaso5l0<td>0<td>0<td>srinidhi_cheedalla<td>1558<td>srinidhi89<td>1195<td>cheedallasrinidhi22r05a6603<td>0<td>29.47%<tr><td>216<td>21r01a04c7<td>cmrit25_21r01a04c7<td>769<td>21r01a04c7<td>60<td>0<td>bhavani_19<td>0<td>bhavani_92<td>1144<td>21r01a04c7<td>274<td>29.4%<tr><td>217<td>21r01a05f0<td>cmrit25_21r01a05f0<td>610<td>21r01a05f0<td>0<td>0<td>explorer245<td>1658<td>explorer245<td>1103<td>21r01a05f0<td>5<td>29.36%<tr><td>218<td>21r01a05d2<td>rana_9325<td>597<td><td>0<td>0<td>21r01a05d2<td>1513<td>rana_9325<td>1274<td>21r01a05d2<td>0<td>29.28%<tr><td>219<td>21r01a6682<td>cmrit25_21r01a6682<td>933<td>21r01asoh5<td>0<td>11<td>21r01a6682<td>0<td>cmr_21r01a6682<td>1231<td>21r01a6682<td>152<td>29.27%<tr><td>220<td>21r01a04r4<td>21r01a04r4<td>571<td>21r01angrz<td>20<td>0<td>21r01a04r4<td>1415<td>s21r01a04r4<td>1173<td>21r01a04r4<td>60<td>29.2%<tr><td>221<td>21r01a6782<td>cmrit25_21r01a6782<td>819<td>manikcmrit<td>19<td>0<td>manikcmrit<td>0<td>r01a6782manik<td>1168<td>21r01a6782<td>333<td>28.94%<tr><td>222<td>21r01a04m3<td>cmrit-25-21r01a04m3<td>561<td>21r01a04m3<td>0<td>19<td>21r01a04m3<td>1298<td>swetha214m3<td>1038<td>21r01a04m3<td>252<td>28.73%<tr><td>223<td>22r05a0519<td>22r05a0519<td>616<td>22r05aqyzx<td>0<td>11<td>cmr25_srinu519<td>1329<td>srinivas_189<td>1143<td>22r05a0519<td>53<td>28.61%<tr><td>224<td>22r05a6604<td>cmrit25_22r05a6604<td>634<td>thanojsrlibh<td>10<td>1<td>22r05a6604thanoj<td>1314<td>thanojsriman<td>1090<td>22r05a6604thanoj<td>27<td>28.61%<tr><td>225<td>21r01a7343<td>cmrit25_21r01a7343<td>301<td>21r01a7343<td>74<td>28<td>21r01a7343<td>1275<td>sruthi38<td>914<td>21r01a7343<td>459<td>28.56%<tr><td>226<td>21r01a0485<td>ramarao_123<td>709<td><td>0<td>0<td>21r01a0485<td>1359<td>ramarao444<td>892<td>21r01a0485<td>10<td>28.49%<tr><td>227<td>21r01a67f7<td>cmrit25_21r01a67f7<td>0<td>21r01a67f7<td>190<td>10<td>21r01a67f7<td>1622<td>s_21r01a67f7<td>1184<td>21r01a67f7<td>125<td>28.47%<tr><td>228<td>21r01a0547<td>cmrit25_21r01a0547<td>576<td>21r01a0547_navadeep<td>0<td>0<td>21r01a0547<td>1430<td>navadeep_1511<td>1231<td>21r01a0547<td>35<td>28.42%<tr><td>229<td>21r01a0582<td>cmrit2025_21r01a0582<td>566<td>21r01a0582<td>0<td>21<td>21r01a0582<td>1458<td>sravya2004<td>1070<td>21r01a0582<td>75<td>28.3%<tr><td>230<td>21r01a67e7<td>ajit_04<td>357<td>21r01aecx4<td>0<td>25<td>21r01a67e7<td>1577<td>hamilpurajit<td>1000<td>21r01a67e7<td>480<td>28.1%<tr><td>231<td>21r01a67f3<td>21r01a67f3<td>358<td>21r01a67f3<td>49<td>1<td>21r01a67f3<td>1377<td>rithish81<td>1299<td>21r01a67f3<td>187<td>28.07%<tr><td>232<td>22r05a6617<td>22r05a6617<td>916<td>22r05a6617<td>0<td>0<td>22r05a6617<td>0<td>s22r05a6617<td>1182<td>22r05a6617<td>125<td>28.05%<tr><td>233<td>21r01a04b1<td>janvipulluri_18<td>574<td>21r01ab5ys<td>0<td>0<td>_j21r01a04b1<td>1485<td>j21r01a04b1<td>993<td>21r01a04b1<td>116<td>27.99%<tr><td>234<td>21r01a6630<td>cmrit25_21r01a6630<td>843<td>adhinath<td>0<td>20<td>adhinath_9393<td>0<td>adhinath_9393<td>1132<td>adhinath_k<td>257<td>27.98%<tr><td>235<td>21r01a0578<td>cmrit25_21r01a0578<td>836<td>21r01a0578<td>30<td>12<td>21r01a0578<td>0<td>navya578<td>1252<td>21r01a0578<td>45<td>27.97%<tr><td>236<td>21r01a67d8<td>21r01a67d8<td>358<td>21r01a67d8<td>49<td>5<td>21r01a67d8<td>1377<td>deekshitha2k4<td>1261<td>21r01a67d8<td>190<td>27.97%<tr><td>237<td>21r01a6612<td>cmrit25_21r01a6612<td>583<td>21r01awdt9<td>0<td>23<td>21r01a6612<td>1408<td>anuragvamshi<td>897<td>21r01a6612<td>135<td>27.93%<tr><td>238<td>21r01a6627<td>cmrit25_21r01a6627<td>588<td>nikhitha_2604<td>0<td>2<td>nikhitha_2604<td>1392<td>nikhitha_2604<td>1179<td>nikhitha2604@gmail.com<td>0<td>27.85%<tr><td>239<td>21r01a6650<td>cmrit25_21r01a6650<td>584<td>21r01a6650<td>0<td>13<td>21r01a6650<td>1262<td>indu_sri2209<td>928<td>21r01a6650<td>210<td>27.77%<tr><td>240<td>21r01a0521<td>cmrit25_21r01a0521<td>595<td>21r01a0521<td>0<td>0<td>21r01a0521<td>1338<td>cmr_21r01a0521<td>1188<td>21r01a0521<td>0<td>27.7%<tr><td>241<td>21r01a0486<td>cmrit25_21r01a0486<td>581<td><td>0<td>0<td>chennaraogurrala<td>1367<td>gchennarao<td>1144<td>21r01a0486<td>30<td>27.58%<tr><td>242<td>21r01a05h8<td>cmrit25_21r01a05h8<td>822<td>21r01a05h8<td>49<td>8<td>21r01a05h8<td>0<td>cmr_21r01a05h8<td>1090<td>21r01a05h8<td>39<td>27.54%<tr><td>243<td>21r01a0424<td>cmrit25_21r01a0424<td>862<td><td>0<td>0<td>21r01a0424<td>0<td>sravani2k23<td>1221<td>21r01a0424<td>161<td>27.5%<tr><td>244<td>21r01a6787<td>21r01a6787<td>560<td><td>0<td>0<td>21r01a6787<td>1420<td>cmr_21r01a6787<td>1191<td>21r01a6787<td>5<td>27.49%<tr><td>245<td>21r01a66b8<td>cmrit25_21r01a66b8<td>820<td>21r01a66b8<td>0<td>0<td>rajesh<td>1576<td>21r01a66b8<td>0<td>21r01a66b8<td>85<td>27.24%<tr><td>246<td>21r01a66k1<td>sneha2884<td>564<td>21r01a66k1sneha<td>30<td>0<td>21r01a66k1<td>1424<td>r01a66k1<td>870<td>21r01a66k1<td>0<td>27.18%<tr><td>247<td>21r01a0510<td>cmrit25_21r01a0510<td>568<td>ranjithra88zk<td>10<td>0<td>ranjith_890<td>1480<td>ranjith_890<td>969<td>ranjithranji2251<td>5<td>27.16%<tr><td>248<td>21r01a6657<td>cmrit25_21r01a6657<td>880<td>21r01ab99c<td>0<td>22<td>snehal_593<td>0<td>snehal_593<td>987<td>21r01a6657<td>177<td>27.15%<tr><td>249<td>21r01a67e3<td>cmrit25_21r01a67e3<td>762<td>21r01a67e3<td>22<td>0<td>21r01a67e3<td>0<td>cmr_21r01a67e3<td>1230<td>21r01a67e3<td>203<td>27.03%<tr><td>250<td>21r01a0487<td>cmrit25_21r01a0487<td>357<td>21r01a0487<td>28<td>0<td>21r01a0487<td>1530<td>koushik2004<td>1050<td>21r01a0487<td>257<td>26.87%<tr><td>251<td>21r01a05j5<td>cmrit25_21r01a05j5<td>348<td>21r01a05j5<td>50<td>29<td>sreenath_5j5<td>1508<td>sreenath_5j5<td>1127<td>21r01a05j5<td>25<td>26.76%<tr><td>252<td>22r05a0515<td>cmrit25_22r05a0515<td>768<td>22r05asq20<td>22<td>13<td>sahithilakkarasu<td>0<td>sahithi_2702<td>1217<td>22r05a0515<td>122<td>26.64%<tr><td>253<td>21r01a6738<td>cmrit25_21r01a6738<td>796<td>m_keerthi15<td>0<td>13<td>m_keerthi15<td>0<td>m_keerthi15<td>1365<td>21r01a6738<td>86<td>26.61%<tr><td>254<td>21r01a6794<td>cmrit25_21r01a6794<td>370<td>21r01a83ys<td>60<td>4<td>trishareddy<td>1421<td>trishareddy94<td>1156<td>21r01a6794<td>0<td>26.57%<tr><td>255<td>21r01a0416<td>cmrit25_21r01a0416<td>358<td>shashank416<td>10<td>19<td>shashankgurram03<td>1418<td>gshashank416<td>1395<td>21r01a0416<td>113<td>26.54%<tr><td>256<td>21r01a0417<td>cmrit25_21r01a0417<td>366<td>21r01a0417<td>9<td>11<td>21r01a0417<td>1420<td>hanumanth4410<td>1381<td>21r01a0417<td>128<td>26.51%<tr><td>257<td>22r05a0512<td>cmrit25_22r05a0512<td>718<td>22r05a0512<td>30<td>0<td>22r05a0512<td>0<td>kalyani2003<td>1350<td>22r05a0512<td>95<td>26.24%<tr><td>258<td>21r01a0421<td>cmrit25_21r01a0421<td>366<td>21r01a0421<td>9<td>11<td>vijay_kumar946<td>1421<td>vijay421<td>1245<td>21r01a0421<td>170<td>26.07%<tr><td>259<td>21r01a6631<td>cmrit25_21r01a6631<td>809<td>21r01a6631<td>0<td>28<td>21r01a6631<td>0<td>cmr_21r01a6631<td>1109<td>21r01a6631<td>120<td>26.01%<tr><td>260<td>21r01a6640<td>cmrit25_21r01a6640<td>654<td>elena_jakaes<td>39<td>8<td>elena_jakaes<td>0<td>suji_jakaes<td>969<td>suji_jakaes<td>378<td>25.92%<tr><td>261<td>21r01a05g5<td>cmrit25_21r01a05g5<td>371<td>ruthikc11kv<td>40<td>2<td>ruthikchary<td>1438<td>ruthik25<td>1208<td>21r01a05g5<td>0<td>25.87%<tr><td>262<td>21r01a04d7<td>cmrit25_21r01a04d7<td>577<td>21r01a04d7<td>0<td>0<td>swathi2k23<td>1412<td>swathi2k23<td>719<td>21r01a04d7<td>102<td>25.79%<tr><td>263<td>21r01a6648<td>cmrit25_21r01a6648<td>772<td>21r01a6648<td>0<td>31<td>21r01a6648<td>0<td>cmr_21r01a6648<td>934<td>21r01a6648<td>267<td>25.62%<tr><td>264<td>21r01a04a1<td>cmrit25_21r01a04a1<td>724<td>21r01a04a1<td>0<td>0<td>cmrit_21r01a04a1<td>0<td>cmr21r01a04a1<td>1519<td>21r01a04a1<td>77<td>25.61%<tr><td>265<td>22r05a6612<td>saikiran_6612<td>781<td>22r05agr07<td>20<td>12<td><td>0<td>saikiran_6612<td>1123<td>22r05a6612<td>56<td>25.56%<tr><td>266<td>21r01a0556<td>cmrit25_21r01a0556<td>788<td>cmr_21r01a0556<td>0<td>51<td>21r01a0556<td>0<td>cmr_21r01a0556<td>1183<td>21r01a0556<td>2<td>25.5%<tr><td>267<td>21r01a04q7<td>21r01a04q7<td>349<td>21r01ae2ne<td>40<td>0<td>jahnavi_q7<td>1433<td>jahnavi_q7<td>1132<td>21r01a04q7<td>65<td>25.47%<tr><td>268<td>21r01a6798<td>21r01a6798<td>868<td><td>0<td>0<td><td>0<td>vandana2702<td>1114<td>21r01a67981<td>0<td>25.41%<tr><td>269<td>21r01a04p0<td>cmrit25_21r01a04p0<td>789<td>kumarram<td>0<td>0<td>21r01a04p0<td>1459<td>5may22<td>0<td>21r01a04p0<td>32<td>25.41%<tr><td>270<td>21r01a6701<td>21r01a6701<td>813<td>21r01a6701<td>0<td>9<td>sanjay6701<td>0<td>sanjay6701<td>1090<td>21r01a6701<td>109<td>25.37%<tr><td>271<td>21r01a05j9<td>21r01a05j9<td>366<td>21r01a05j9<td>40<td>25<td>21r01a05j9<td>1679<td>cmr_21r01a05j9<td>819<td>21r01a05j9<td>5<td>25.36%<tr><td>272<td>21r01a05b6<td>cmrit25_21r01a05b6<td>595<td>21r01a05b6<td>65<td>15<td>21r01a05b6<td>0<td>samrah10<td>1163<td>21r01a05b6<td>157<td>25.36%<tr><td>273<td>21r01a7319<td>21r01a7319<td>829<td>ganesh<td>0<td>33<td>ganeshjadav<td>0<td>g21r01a7319<td>1009<td>21r01a7319<td>50<td>25.27%<tr><td>274<td>21r01a66c3<td>cmrit25_21r01a66c3<td>767<td>21r01a66c3<td>0<td>31<td>sunitha_12<td>0<td>sunitha_12<td>888<td>21r01a66c3<td>270<td>25.26%<tr><td>275<td>21r01a04h4<td>cmrit25_21r01a04h4<td>373<td>21r01a04h4<td>30<td>7<td>21r01a04h4<td>1437<td>pavan_h4<td>1158<td>21r01a04h4<td>5<td>25.22%<tr><td>276<td>22r05a0421<td>22r05a0421<td>371<td>22r05ai9oy<td>30<td>5<td>22r05a0421<td>1400<td>nissar21<td>1188<td>22r05a0421<td>3<td>25.09%<tr><td>277<td>22r05a0402<td>cmrit25_22r05a0402<td>366<td>22r05a0402<td>10<td>8<td>22r05a0402<td>1483<td>nikhil402<td>1253<td>22r05a0402<td>25<td>25.06%<tr><td>278<td>21r01a6731<td>cmrit25_21r01a6731<td>779<td>21r01a6731<td>0<td>5<td>prathyusha79<td>0<td>prathyusha79<td>1161<td>21r01a6731<td>110<td>25%<tr><td>279<td>21r01a67c1<td>cmrit25_21r01a67c1<td>375<td>21r01awf3x<td>50<td>2<td>21r01a67c1p<td>1564<td>r01a67c1<td>822<td>21r01a67c1<td>15<td>24.95%<tr><td>280<td>21r01a67f4<td>cmrit25_21r01a67f4<td>749<td>21r01a67f4<td>0<td>0<td>21r01a67f4<td>0<td>d21r01a67f4<td>1097<td>21r01a67f4<td>220<td>24.89%<tr><td>281<td>21r01a7334<td>21r01a7334<td>359<td><td>0<td>0<td>21r01a7334<td>1550<td>madhangoud34<td>1338<td>21r01a7334<td>5<td>24.87%<tr><td>282<td>21r01a6756<td>cmrit25_21r01a6756<td>723<td>21r01a6756<td>0<td>19<td>vyshnavi-04<td>0<td>r01a6756<td>1206<td>21r01a6756<td>142<td>24.76%<tr><td>283<td>22r05a0410<td>cmrit25_22r05a0410<td>362<td>22r05a0ejf<td>10<td>11<td>22r05a0410<td>1461<td>kannedeepthi_7<td>1164<td>22r05a0410<td>65<td>24.76%<tr><td>284<td>21r01a04a0<td>cmrit25_21r01a04a0<td>369<td>21r01aoras<td>9<td>0<td>tharun4a0<td>1530<td>thar21r01a04a0<td>1147<td>21r01a04a0<td>55<td>24.75%<tr><td>285<td>22r05a0517<td>boy_123<td>815<td>22r05a0517<td>0<td>0<td>22r05a0517<td>0<td>varun43<td>1167<td>goudvarun495<td>0<td>24.61%<tr><td>286<td>21r01a6724<td>cmrit25_21r01a6724<td>776<td>21r01a6724<td>0<td>0<td>vyshnavi_08<td>0<td>vyshnavi08<td>1173<td>21r01a6724<td>80<td>24.59%<tr><td>287<td>21r01a05p0<td>21r01a05p0<td>812<td>21r01az74y<td>0<td>16<td>shva7<td>0<td>cmr_21r01a05p0<td>1030<td>21r01a05p0<td>49<td>24.58%<tr><td>288<td>21r01a66e4<td>21r01a66e4<td>378<td>21r01a6jdu<td>0<td>0<td>21r01a66e4<td>1412<td>r01a66e4<td>1260<td>21r01a66e4<td>60<td>24.53%<tr><td>289<td>21r01a0425<td>cmrit25_21r01a0425<td>377<td>21r01a0425<td>0<td>0<td>21r01a0425<td>1435<td>cmr_21r01a0425<td>1239<td>21r01a0425<td>60<td>24.51%<tr><td>290<td>21r01a7363<td>cmrit25_21r01a7363<td>779<td>21r01akthx<td>0<td>21<td>21r01a7363<td>0<td>vinayreddy3<td>1075<td>21r01a7363<td>70<td>24.5%<tr><td>291<td>21r01a67k1<td>21r01a67k1<td>368<td>21r01asqio<td>30<td>2<td>anushavempati<td>1437<td>cmr_21r01a67k1<td>1058<td>21r01a67k1<td>10<td>24.41%<tr><td>292<td>21r01a6601<td>21r01a6601<td>694<td>21r01a6601<td>0<td>21<td>21r01a6601<td>0<td>s21r01a6601<td>1173<td>21r01a6601<td>185<td>24.41%<tr><td>293<td>22r05a6713<td>22r05a6713<td>364<td>22r05a6713<td>10<td>8<td>22r05a6713<td>1421<td>b22r05a6713<td>1249<td>22r05a6713<td>0<td>24.4%<tr><td>294<td>22r05a0425<td>cmrit25_22r05a0425<td>738<td>22r05azmzz<td>0<td>4<td>22r05a0425<td>1398<td>22r05a0425<td>0<td>22r05a0425<td>65<td>24.4%<tr><td>295<td>21r01a67c8<td>21r01a67c8<td>749<td><td>0<td>0<td><td>0<td>moneycharan4<td>919<td>21r01a67c8<td>283<td>24.38%<tr><td>296<td>21r01a67k4<td>21r01a67k4_vishnu<td>351<td>21r01a67k4<td>20<td>0<td>21r01a67k4<td>1499<td>vishnu_a67k4<td>1106<td>21r01a67k4<td>35<td>24.34%<tr><td>297<td>22r05a0508<td>22r05a0508<td>824<td>22r05a57wl<td>0<td>25<td>22r05a0508<td>0<td>mahendar_mahi<td>925<td>22r05a0508<td>40<td>24.33%<tr><td>298<td>21r01a7240<td>cmrit_21r01a7240<td>355<td>21r01aox04<td>9<td>19<td>21r01a7240<td>1382<td>saikiran_95<td>1140<td>21r01a7240<td>80<td>24.31%<tr><td>299<td>22r05a0507<td>cmrit25_22r05a0507<td>798<td>22r05a0507<td>0<td>20<td>n22r05a0507<td>0<td>n22r05a0507<td>1026<td>22r05a0507<td>35<td>24.23%<tr><td>300<td>21r01a0577<td>cmrit25_21r01a0577<td>349<td>21r01avor9<td>0<td>0<td>adithya0509<td>1385<td>adithya0509<td>1373<td>21r01a0577<td>35<td>24.23%<tr><td>301<td>21r01a05a1<td>cmrit25_21r01a05a1<td>596<td>21r01a0q5z<td>25<td>30<td>21r01a05a1<td>0<td>mehrajfatima<td>1125<td>21r01a05a1<td>247<td>24.22%<tr><td>302<td>21r01a0502<td>cmrit25_21r01a0502<td>758<td>21r01ak9vh<td>0<td>0<td>nithish_123<td>0<td>aletinithish<td>1281<td>21r01a0502<td>0<td>24.11%<tr><td>303<td>21r01a6636<td>21r01a6636<td>785<td><td>0<td>0<td>21r01a6636<td>0<td>h21r01a6636<td>999<td>21r01a6636<td>119<td>24.07%<tr><td>304<td>21r01a6605<td>cmrit25_21r01a6605<td>773<td>21r01a6605<td>0<td>9<td>21r01a6605<td>0<td>cmr_21r01a6605<td>1140<td>21r01a6605<td>29<td>24.07%<tr><td>305<td>21r01a6760<td>cmrit25_21r01a6760<td>595<td>abhii_05<td>35<td>16<td>abhii_05<td>0<td>abhii_05<td>1259<td>21r01a6760<td>119<td>23.98%<tr><td>306<td>21r01a67g0<td>cmrit25_21r01a67g0<td>366<td>21r01a67g0<td>0<td>0<td>21r01a67g0<td>1516<td>cmr_21r01a67g0<td>1207<td>21r01a67g0<td>0<td>23.96%<tr><td>307<td>21r01a67b6<td>cmrit25_21r01a67b6<td>672<td>21r01a67b6<td>0<td>0<td>21r01a67b6<td>0<td>a_21r01a67b6<td>1449<td>21r01a67b6<td>60<td>23.91%<tr><td>308<td>21r01a0420<td>21r01a0420<td>350<td>21r01a0420<td>0<td>0<td>21r01a0420<td>1361<td>cmr_21r01a0420<td>1355<td>21r01a0420<td>25<td>23.9%<tr><td>309<td>21r01a7207<td>cmrit25_21r01a7207<td>737<td>21r01a7207<td>0<td>1<td>21r01a7207<td>0<td>a2101a7207<td>1113<td>21r01a7207<td>127<td>23.86%<tr><td>310<td>21r01a05a4<td>cmrit25_21r01a05a4<td>789<td>21r01a05a4<td>0<td>4<td>vishnu_morapally<td>0<td>vishnu_a4<td>1059<td>21r01a05a4<td>35<td>23.83%<tr><td>311<td>21r01a0554<td>cmrit25_21r01a0554<td>810<td>r01a0554cmr<td>0<td>0<td>r01a0554cmr<td>0<td>r01a0554cmr<td>1055<td>cmr_21r01a0554<td>0<td>23.81%<tr><td>312<td>21r01a6652<td>cmrit25_21r01a6652<td>361<td>priyansigupta<td>30<td>0<td>priyansigupta<td>1267<td>priyansi_29<td>1046<td>21r01a6652<td>75<td>23.79%<tr><td>313<td>21r01a0518<td>21r01a0518<td>765<td>21r01a0518<td>10<td>0<td>21r01a0518<td>0<td>cmr_21r01a0518<td>1102<td>21r01a0518<td>0<td>23.69%<tr><td>314<td>21r01a6664<td>cmrit25_21r01a6664<td>762<td>21r01a6664<td>0<td>12<td>21r01a6664<td>0<td>vignesh_2763<td>1016<td>21r01a6664<td>85<td>23.67%<tr><td>315<td>21r01a66b3<td>21r01a66b3<td>805<td>21r01alkr4<td>0<td>23<td>21r01a66b3<td>0<td>saiteja73<td>856<td>21r01a66b3<td>62<td>23.66%<tr><td>316<td>21r01a04g4<td>cmrit25_21r01a04g4<td>359<td>21r01a04g4<td>0<td>19<td>21r01a04g4<td>1383<td>dhathrija_28<td>982<td>21r01a04g4<td>144<td>23.53%<tr><td>317<td>21r01a7219<td>cmrit25_21r01a7219<td>725<td>21r01a7219<td>0<td>0<td>cmr_21r017219<td>0<td>cmr_21r01a7219<td>1236<td>21r01a7219<td>36<td>23.48%<tr><td>318<td>21r01a7214<td>cmrit25_21r01a7214<td>757<td>harshinibachu<td>0<td>0<td>harshinibachu<td>0<td>bachuharshini<td>1123<td>21r01a7214<td>35<td>23.44%<tr><td>319<td>21r01a6734<td>cmrit25_21r01a6734<td>728<td>21r01a6734<td>0<td>0<td>21r01a6734<td>0<td>r01a6734<td>1167<td>21r01a6734<td>67<td>23.41%<tr><td>320<td>21r01a05e0<td>tejabathini70<td>371<td>tejabat54e6<td>0<td>0<td>naveenbathini<td>1408<td>naveenbathini3<td>1183<td>tejabathini70<td>5<td>23.35%<tr><td>321<td>22r05a0420<td>cmirt25_22r05a0420<td>717<td>2r05azcln<td>0<td>0<td>bhavana420<td>0<td>bhavanareddy20<td>1095<td>22r05a0420<td>128<td>23.31%<tr><td>322<td>21r01a67c2<td>cmrit25_21r01a67c2<td>781<td>21r01a67c2<td>0<td>0<td>21r01a67c2<td>0<td>shreeya72<td>1065<td>21r01a67c2<td>5<td>23.3%<tr><td>323<td>21r01a7252<td>21r01a7252_divija<td>355<td>21r01a7252<td>0<td>0<td>21r01a7252<td>1409<td>divijapittala<td>1130<td>21r01a7252<td>57<td>23.19%<tr><td>324<td>21r01a6611<td>cmrit25_21r01a6611<td>697<td>21r01ax1n6<td>0<td>2<td>21r01a6611<td>0<td>b21r01a6611<td>852<td>21r01a6611<td>306<td>23.13%<tr><td>325<td>21r01a05m9<td>21r01a05m9<td>760<td>21r01a05m9<td>0<td>6<td>21r01a05m9<td>0<td>vishnu93<td>1020<td>21r01a05m9<td>45<td>23.12%<tr><td>326<td>21r01a6722<td>shivaraj22<td>802<td>shivaraj<td>0<td>0<td>shivaraj<td>0<td>shivaraj15<td>970<td>gandhamshivaraj<td>0<td>23.11%<tr><td>327<td>21r01a6755<td>21r01a6755<td>351<td><td>0<td>0<td>21r01a6755<td>1336<td>lalithya23<td>1275<td>lalithya_t<td>0<td>23.04%<tr><td>328<td>21r01a05p8<td>cmrit25_21r01a05p8<td>694<td>rohan_adepu<td>0<td>38<td>21r01a05p8<td>0<td>rohan_adepu<td>827<td>21r01a05p8rohan<td>216<td>22.99%<tr><td>329<td>21r01a6614<td>cmrit25_21r01a6614<td>690<td>21r01a6614<td>0<td>17<td><td>0<td>dsaibhavani<td>1087<td>21r01a6614<td>107<td>22.93%<tr><td>330<td>21r01a6638<td>cmrit25_21r01a6638<td>767<td>21r01a6638<td>0<td>2<td>menganisaikiran<td>0<td>cmr_21r01a6638<td>958<td>21r01a6638<td>50<td>22.82%<tr><td>331<td>21r01a0457<td>cmrit25_21r01a0457<td>572<td>21r01a0457<td>0<td>17<td>21r01a0457<td>1515<td>21r01a0457<td>0<td>21r01a0457<td>161<td>22.8%<tr><td>332<td>21r01a05c2<td>cmrit25_21r01a05c2<td>381<td>cmr_21r01a05c2<td>20<td>0<td>21r01a05c2<td>1472<td>sravanikumari<td>801<td>21r01a05c2<td>20<td>22.78%<tr><td>333<td>21r01a05c3<td>cmrit25_21r01a05c3<td>765<td>sripadhasubest<td>0<td>0<td>sripadhasudharshan1<td>0<td>sripadha03<td>1042<td>sripadha03<td>0<td>22.77%<tr><td>334<td>21r01a7205<td>21r01a7205<td>361<td>21r01a7205<td>0<td>0<td>21r01a7205<td>1372<td>akshita_911<td>1144<td><td>0<td>22.64%<tr><td>335<td>21r01a6772<td>cmrit25_21r01a6772<td>723<td>21r01axoew<td>10<td>0<td>21r01a6772<td>0<td>cmr_21r01a6772<td>987<td>21r01a6772<td>52<td>22.58%<tr><td>336<td>21r01a6732<td>cmrit25_21r01a6732<td>714<td>21r01a6732<td>0<td>0<td>21r01a6732<td>0<td>r01a6732<td>1104<td>21r01a6732<td>52<td>22.57%<tr><td>337<td>21r01a0595<td>cmrit25_21r01a0595<td>585<td>21r01aem5o<td>26<td>37<td>21r01a0595<td>0<td>sadhvika12<td>1015<td>21r01a0595<td>145<td>22.56%<tr><td>338<td>21r01a0429<td>cmrit25_21r01a0429<td>0<td>21r01a0429<td>119<td>0<td>21r01a0429<td>1445<td>cmr_21r01a0429<td>1221<td>21r01a0429<td>15<td>22.5%<tr><td>339<td>21r01a67a6<td>cmrit25_21r01a67a6<td>744<td>21r01a67a6<td>0<td>0<td>21r01a67a6<td>0<td>r01a67a6<td>968<td>21r01a67a6<td>64<td>22.48%<tr><td>340<td>21r01a67d5<td>cmrit25_21r01a67d5<td>776<td>cmr_21r01a67d5<td>0<td>0<td>cmr_21r01a67d5<td>0<td>cmr_21r01a67d5<td>950<td>cmr_21r01a67d5<td>0<td>22.43%<tr><td>341<td>21r01a04l3<td>cmrit25_21r01a04l3<td>692<td>21r01a4l3<td>0<td>0<td>21r01a04l3<td>1304<td>vamhi56<td>0<td>21r01a04l3<td>25<td>22.39%<tr><td>342<td>21r01a6692<td>cmrit25_21r01a6692<td>342<td>21r01a6692<td>0<td>0<td>21r01a6692<td>1415<td>cmr_21r01a6692<td>1004<td>21r01a6692<td>50<td>22.09%<tr><td>343<td>21r01a67b7<td>cmrit25_21r01a67b7<td>721<td>21r01a67b7<td>0<td>0<td>21r01a67b7<td>0<td>harshith1753<td>1052<td>21r01a67b7<td>18<td>22.07%<tr><td>344<td>21r01a05e2<td>cmrit25_21r01a05e2<td>698<td>21r01a05e2<td>0<td>29<td>21r01a05e2<td>0<td>cmr_21r01a05e2<td>934<td>21r01a05e2<td>55<td>21.96%<tr><td>345<td>21r01a6642<td>21r01a6642<td>712<td>21r01a6642<td>0<td>6<td>21r01a6642<td>0<td>mani_6642<td>1017<td>21r01a6642<td>30<td>21.93%<tr><td>346<td>21r01a6622<td>cmrit25_21r01a6622<td>584<td>21r01a6622<td>0<td>30<td>21r01a6622<td>0<td>bhoomikacmr_16<td>1061<td>21r01a6622<td>203<td>21.78%<tr><td>347<td>21r01a6727<td>cmrit25_21r01a6727<td>582<td>guru_5<td>10<td>13<td>guru_5<td>0<td>guru_5<td>1203<td>21r01a6727<td>97<td>21.7%<tr><td>348<td>21r01a05k1<td>v.preethi<td>355<td>21r01a05k1<td>0<td>0<td>21r01a05k1<td>1466<td>preethivarthya<td>919<td>21r01a05k1preethi<td>0<td>21.65%<tr><td>349<td>21r01a6752<td>cmrit25_21r01a6752<td>581<td>21r01a6752<td>10<td>0<td>snehitha_siddi<td>0<td>snehitha_siddi<td>1192<td>21r01a6752<td>129<td>21.58%<tr><td>350<td>21r01a67e1<td>mounika_goda<td>603<td>21r01aswcv<td>0<td>0<td>21r01a67e1<td>0<td>mounika_goda<td>1287<td>21r01a67e1<td>62<td>21.45%<tr><td>351<td>21r01a6769<td>cmrit25_21r01a6769<td>721<td>21r01a6769gfg<td>0<td>0<td>21r01a6769lt<td>0<td>bandarimahesh<td>959<td>21r01a67691<td>10<td>21.41%<tr><td>352<td>21r01a6606<td>cmrit25_21r01a6606<td>605<td>21r01a6606<td>0<td>0<td>21r01a6606<td>0<td>chandravathi<td>1073<td>_21r01a6606<td>189<td>21.38%<tr><td>353<td>21r01a6620<td>cmrit_2521r01a6620<td>707<td>21r01anamx<td>0<td>21<td><td>0<td>shrivarshini_1<td>908<td><td>0<td>21.25%<tr><td>354<td>21r01a6703<td>cmrit25_21r01a6703<td>695<td>21r01a6703<td>0<td>7<td>21r01a6703<td>0<td>a21r01a6703<td>928<td>21r01a6703<td>50<td>21.23%<tr><td>355<td>21r01a67g8<td>21r01a67g8<td>601<td>21r01a67g8<td>0<td>0<td>21r01a67g8<td>0<td>noor_g8<td>873<td>21r01a67g8<td>310<td>21.21%<tr><td>356<td>21r01a05j2<td>21r01a05j2<td>621<td>21r01a05j2<td>0<td>0<td>21r01a05j2<td>0<td>ahmed4849<td>1259<td>21r01a05j2<td>5<td>21.11%<tr><td>357<td>21r01a6610<td>cmrit25_21r01a6610<td>602<td>21r01an34e<td>0<td>0<td>subodh994<td>1456<td>subodd994<td>0<td>subodh<td>0<td>21.11%<tr><td>358<td>21r01a04m2<td>cmrit25_21r01a04m2<td>599<td>21r01a04m2<td>0<td>5<td>21r01a04m2<td>0<td>shashikanth32<td>1217<td>21r01a04m2<td>52<td>20.96%<tr><td>359<td>21r01a6733<td>cmrit25_21r01a6733<td>576<td>21r01a6733<td>0<td>7<td><td>0<td>cmr_21r01a6733<td>1151<td>21r01a6733<td>127<td>20.84%<tr><td>360<td>21r01a7350<td>cmrit25_21r01a7350<td>693<td>good_learner09<td>0<td>0<td>goodlearner09<td>0<td>good_learner09<td>970<td>good_learner09<td>0<td>20.79%<tr><td>361<td>21r01a0483<td>cmrit25_21r01a0483<td>351<td>keerthanasg3<td>0<td>0<td>keerthana_sg<td>1410<td>keerthanasg3<td>826<td><td>0<td>20.66%<tr><td>362<td>21r01a67g2<td>21r01a67g2<td>605<td>21r01a67g2<td>0<td>0<td>21r01a67g2<td>0<td>cmr_21r01a67g2<td>1209<td>21r01a67g2<td>25<td>20.65%<tr><td>363<td>21r01a0527<td>srilekha_527<td>347<td><td>0<td>0<td>srilekha_3<td>1371<td>tinnu_3_3<td>841<td>21r01a0527<td>20<td>20.64%<tr><td>364<td>21r01a0458<td>prasad58<td>0<td>21r01a0458<td>30<td>11<td>21r01a0458<td>1481<td>prasad71<td>1321<td>21r01a0458<td>207<td>20.61%<tr><td>365<td>22r05a6706<td>22r05a6706<td>581<td>laxman06<td>0<td>6<td>22r05a6706<td>0<td>laxman019<td>1141<td>22r05a6706<td>57<td>20.18%<tr><td>366<td>21r01a6688<td>21r01a6688<td>562<td>21r01a6688<td>0<td>2<td>21r01a6688<td>1410<td>21r01a6688<td>0<td>21r01a6688<td>10<td>20.14%<tr><td>367<td>22r05a6716<td>cmrit25_22r05a6716<td>0<td>22r05a6716<td>50<td>15<td>22r05a6716<td>1472<td>rajashekar_67<td>1099<td>22r05a6716<td>164<td>19.95%<tr><td>368<td>21r01a67b9<td>cmrit25_21r01a67b9<td>593<td>21r01a67b9<td>0<td>0<td>divya_411<td>0<td>divya68<td>857<td>21r01a67b9<td>206<td>19.94%<tr><td>369<td>21r01a0539<td><td>0<td>21r01a0539<td>30<td>0<td>21r01a0539<td>1504<td>yogeshmadhine<td>1391<td>21r01a0539<td>105<td>19.91%<tr><td>370<td>21r01a0583<td>cmrit25_21r01a0583<td>579<td>21r01a0583<td>0<td>22<td>21r01a0583<td>0<td>sreeja_r21<td>988<td>21r01a0583<td>86<td>19.88%<tr><td>371<td>21r01a0437<td>21r01a0437<td>348<td>21r01a0437<td>90<td>0<td>cmr_21r01a0437<td>0<td>cmr_21r01a0437<td>1183<td>cmr_21r01a0437<td>0<td>19.69%<tr><td>372<td>21r01a0572<td>cmrit25_21r01a0572<td>573<td>21r01a0572<td>0<td>14<td>vasundhara123<td>0<td>vasundhara2<td>1021<td>21r01a0572<td>75<td>19.64%<tr><td>373<td>22r05a6610<td>cmrit25_22r05a6610<td>591<td>22r05acnoi<td>10<td>2<td>22r05a6610r<td>0<td>sairohith0822<td>996<td>22r05a6610<td>25<td>19.62%<tr><td>374<td>22r05a7306<td>22r05a7306<td>578<td>22r05acyc5<td>0<td>10<td>22r05a7306<td>0<td>praveen_kuchi<td>1130<td>praveenkumarkuchi<td>0<td>19.61%<tr><td>375<td>22r05a0526<td>cmrit25_22r05a0526<td>578<td>nethikarewl<td>0<td>1<td>22r05a0526<td>0<td>r05a0526<td>1091<td>22r05a0526<td>47<td>19.58%<tr><td>376<td>21r01a05n5<td>cmrit25_21r01a05n5<td>578<td>21r01aw4dd<td>0<td>19<td>21r01a05n5<td>0<td>r01a05n5<td>1001<td>21r01a05n5<td>55<td>19.56%<tr><td>377<td>21r01a67h1<td>cmrit25_21r01a67h1<td>348<td>chaitanya<td>0<td>0<td>chaitanya_4441<td>1390<td>chaitanya_4441<td>669<td>chaitanya<td>0<td>19.5%<tr><td>378<td>21r01a0525<td>21r01a0525_harshini123<td>596<td>21r01au525<td>0<td>0<td>g.harshini<td>0<td>gharshini123<td>1013<td>21r01a0525<td>51<td>19.49%<tr><td>379<td>21r01a7328<td>21r01a7328<td>900<td><td>0<td>0<td><td>0<td><td>0<td>21r01a7328<td>35<td>19.47%<tr><td>380<td>21r01a7321<td>cmrit25_21r01a7321<td>431<td>21r01a7321<td>7<td>2<td><td>0<td>vaishnavii1312<td>911<td>21r01a7321<td>435<td>19.46%<tr><td>381<td>21r01a0591<td>cmrit25_21r01a0591<td>574<td>karnamvarq2le<td>0<td>12<td>varshith_591<td>0<td>varshith_591<td>970<td>21r01a0591<td>80<td>19.34%<tr><td>382<td>21r01a0506<td>21r01a0506<td>582<td>21r01a4d53<td>0<td>0<td>21r01a0506<td>0<td>sriram78<td>1100<td>21r01a0_506<td>10<td>19.34%<tr><td>383<td>21r01a05d9<td>21r01a05d9<td>0<td>21r01a05d9<td>29<td>39<td>21r01a05d9<td>1531<td>s_21r01a05d9<td>1079<td>21r01a05d9<td>128<td>19.3%<tr><td>384<td>21r01a04q3<td>cmrit25_21r01a04q3<td>585<td>21r01alhwc<td>0<td>6<td>cmrit_21r01a04q3<td>0<td>cmrit25_4q3<td>928<td>21r01a04q3<td>92<td>19.27%<tr><td>385<td>21r01a0541<td>21r01a0541<td>0<td>21r01a0541<td>60<td>0<td>vinuthnna_reddy<td>1343<td>vin_21r01a0541<td>1210<td>21r01a0541<td>60<td>19.06%<tr><td>386<td>21r01a04k9<td>cmrit25_21r01a04k9<td>563<td>21r01a04k9cmr<td>0<td>5<td>21r01a04k9<td>0<td>cmr21r01a04k9<td>809<td>21r01a04k9<td>161<td>18.7%<tr><td>387<td>21r01a05r4<td>cmrit25_21r01a05r4<td>568<td>21r01a05r4<td>0<td>17<td>21r01a05r4shravani<td>0<td>sravs_76<td>811<td>21r01a05r4<td>102<td>18.56%<tr><td>388<td>22r05a0509<td>22r05a0509<td>586<td>22r05a0509<td>0<td>0<td>sruthi66<td>0<td>sruthi66<td>912<td>22r05a0509<td>20<td>18.34%<tr><td>389<td>21r01a0560<td>cmrit2521r01a0560<td>601<td>21r01a64f2<td>0<td>0<td>21r01a0560<td>0<td>gangabhavani_9<td>858<td>21r01a0560<td>15<td>18.28%<tr><td>390<td>21r01a6641<td>21r01a6641<td>428<td>21r01a6641<td>0<td>26<td>21r01a6641<td>0<td>ashritha92<td>1048<td>21r01a6641<td>197<td>18.22%<tr><td>391<td>21r01a7365<td>cmr_21r01a7365<td>0<td>21r01a7365<td>0<td>87<td>21r01a7365<td>1347<td>cmr_21r01a7365<td>406<td>21r01a7365<td>589<td>18.16%<tr><td>392<td>21r01a0574<td><td>0<td>21r01a0574<td>60<td>18<td>21r01a0574<td>1298<td>cmr_21r01a0574<td>1006<td>21r01a0574<td>70<td>18.1%<tr><td>393<td>21r01a05q4<td>21r01a05q4<td>584<td>21r01a05q4<td>0<td>0<td>21r01a05q4<td>0<td>nikhilesh5q4<td>866<td>21r01a05q4<td>0<td>17.82%<tr><td>394<td>21r01a0432<td>cmrit25_21r01a0432<td>0<td>21r01a0432<td>10<td>6<td>sanjaymallikarjuna28<td>1421<td>sanjuz16<td>1366<td>21r01a0432<td>50<td>17.82%<tr><td>395<td>21r01a6686<td>cmr_21r01a6686<td>0<td>21r01a5xsm<td>40<td>0<td>csm_21r01a6686<td>1423<td>cmr_21r01a6686<td>1130<td>21r01a6686<td>30<td>17.64%<tr><td>396<td>21r01a67e9<td>21r01a67e9<td>0<td>21r01a67e9<td>20<td>0<td>21r01a67e9<td>1488<td>srikavya67e9<td>1241<td>21r01a67e9<td>32<td>17.63%<tr><td>397<td>21r01a0592<td>yaswanthnaidu4<td>573<td><td>0<td>0<td>21r01a0592<td>0<td>yaswanthnaidu4<td>856<td>21r01a0592<td>0<td>17.53%<tr><td>398<td>21r01a0428<td>cmrit_21r01a0428<td>0<td>21r01a0428<td>10<td>0<td>21r01a0428<td>1499<td>prasad428<td>1308<td>21r01a0428<td>20<td>17.45%<tr><td>399<td>21r01a67h0<td>21r01a67h0<td>347<td>21r01a67h0<td>20<td>0<td>21r01a67h0<td>1478<td>rahuloddepally<td>0<td>21r01a67h0<td>55<td>17.43%<tr><td>400<td>21r01a04j5<td>cmrit25_21r01a04j5<td>0<td>21r01a04j5<td>30<td>0<td>21r01a04j5<td>1418<td>tanirudh<td>1233<td>21r01a04j5<td>0<td>17.42%<tr><td>401<td>21r01a67h7<td>21r01a67h7_aashreetha<td>347<td>21r01a67h7aashreetha<td>30<td>0<td>21r01a67h7<td>0<td>aashreetha<td>1308<td>21r01a67h7<td>22<td>17.39%<tr><td>402<td>21r01a6725<td><td>0<td>rakesh_2425<td>29<td>0<td>rakesh_2425<td>1390<td>rakesh_2425<td>1259<td>rakesh_2425<td>0<td>17.37%<tr><td>403<td>21r01a67k0<td><td>0<td>21r01a67k0<td>0<td>8<td>21r01a67k0<td>1434<td>r01a67k0<td>1148<td>21r01a67k0<td>175<td>17.24%<tr><td>404<td>21r01a05g3<td>21r01a05g3<td>0<td>21r01a05g3<td>30<td>15<td>21r01a05g3<td>1473<td>cse_21r01a05g3<td>1006<td>21r01a05g3<td>53<td>17.22%<tr><td>405<td>21r01a67j5<td>cmrit25_21r01a67j5<td>0<td>anupamasu422g<td>10<td>4<td>anupama_33<td>1454<td>anupama_93<td>1270<td>21r01a67j5<td>35<td>17.21%<tr><td>406<td>21r01a6751<td><td>0<td>21r01adg38<td>0<td>0<td>21r01a6751<td>1410<td>pravallika45<td>1432<td>21r01a6751<td>20<td>17.17%<tr><td>407<td>21r01a05g0<td>rishivaran5g0<td>387<td>21r01ao3tc<td>30<td>1<td>rishivaran<td>0<td>rishivaran5go<td>1166<td>21r01a05g0<td>0<td>17.17%<tr><td>408<td>21r01a04d2<td>21r01a04d2<td>0<td>21r01a04d2<td>0<td>2<td>21r01a04d2<td>1423<td>akshith4d2<td>1081<td>21r01a04d2<td>228<td>17.11%<tr><td>409<td>21r01a0493<td>cmrit25_21r01a0493<td>0<td>21r01a0493<td>20<td>0<td>21r01a0493<td>1439<td>nand21r01a0493<td>1060<td>21r01a0493<td>119<td>17.06%<tr><td>410<td>21r01a67h5<td>cmrit25_21r01a67h5<td>0<td>21r01a67h5<td>0<td>0<td>21r01a67h5<td>1560<td>cmr_21r01a67h5<td>1099<td>21r01a67h5<td>135<td>17.06%<tr><td>411<td>21r01a05h7<td>cmrit25_21r01a05h7<td>709<td>21r01aezhm<td>29<td>6<td>21r01a05h7<td>0<td>sharanya34<td>0<td>21r01a05h7<td>25<td>17.05%<tr><td>412<td>21r01a67f1<td><td>0<td>21r01a67f1<td>0<td>17<td>kishore66<td>1431<td>kishore66<td>1165<td>21r01a67f1<td>122<td>17.05%<tr><td>413<td>21r01a67d1<td>21r01a67d1<td>382<td>21r01alsjb<td>0<td>0<td>neha_ankush26<td>0<td>neha_ankush<td>1330<td>21r01a67d1<td>42<td>16.83%<tr><td>414<td>21r01a0589<td>cmrit25_21r01a0589<td>361<td>21r01ayusu<td>0<td>5<td>21r01a0589<td>0<td>anuh21r01a0589<td>1288<td>21r01a0589<td>90<td>16.71%<tr><td>415<td>22r05a0502<td>22r05a0502<td>373<td>22r05a0502<td>30<td>27<td>22r05a0502<td>0<td>srujan22502<td>967<td>22r05a0502<td>40<td>16.7%<tr><td>416<td>21r01a0546<td>21r01a0546<td>0<td>sreejanarala<td>20<td>0<td>21r01a0546<td>1468<td>sree21r01a0546<td>1094<td>21r01a0546<td>35<td>16.63%<tr><td>417<td>21r01a05j8<td>cmrit25_21r01a05j8<td>0<td>21r01aq09q<td>30<td>0<td>21r01a05j8lt<td>1484<td>tevinj8<td>1043<td>hckrj8<td>0<td>16.61%<tr><td>418<td>22r05a6701<td>22r05a6701<td>358<td>22r05a7tt4<td>10<td>0<td>srinith_3<td>0<td>srinithreddy3<td>1286<td>srinith_3<td>44<td>16.61%<tr><td>419<td>21r01a0433<td>cmrit25-21r01a0433<td>0<td>21r01a0433<td>10<td>2<td>manojkumar25_<td>1410<td>manojkumar_25<td>1240<td>21r01a0433<td>20<td>16.57%<tr><td>420<td>21r01a05b7<td>cmrit25_21r01a05b7<td>362<td>21r01a05b7<td>0<td>24<td>21r01a05b7<td>0<td>ramya_b7<td>956<td>21r01a05b7<td>224<td>16.45%<tr><td>421<td>22r05a0404<td>cmrit25_22r05a0404<td>357<td>22r05a0404<td>0<td>0<td>22r05a0404<td>0<td>chandu404<td>1325<td>22r05a0404<td>57<td>16.41%<tr><td>422<td>21r01a66f5<td>21r01a66f5<td>719<td>21r01am2b8<td>0<td>17<td>21r01a66f5<td>0<td>21r01a66f5<td>0<td>21r01a66f5<td>65<td>16.36%<tr><td>423<td>21r01a05l4<td>cmrit_21r01a05l4<td>385<td><td>0<td>0<td>cmrit_harish5628<td>1409<td>cmrit_harish5628<td>0<td>21r01a05l4<td>8<td>16.3%<tr><td>424<td>21r01a67a2<td><td>0<td><td>0<td>0<td>21r01a67a2<td>1396<td>cmr_21r01a67a2<td>1266<td>21r01a67a2<td>45<td>16.3%<tr><td>425<td>21r01a7215<td>dhansai<td>0<td>dhanswfst<td>0<td>0<td>dhansaib6<td>1444<td>dhansaib6<td>1236<td>dhansaib6<td>27<td>16.21%<tr><td>426<td>21r01a7257<td>vaishnavi_017<td>0<td>21r01ax608<td>0<td>0<td>vaishnavisingireddy<td>1481<td>vaishnavisingi<td>1193<td>vaishnavisingir1<td>28<td>16.16%<tr><td>427<td>22r05a7202<td>cmrit25-22r05a7202<td>349<td>22r05a7202<td>0<td>0<td>kanakalaxmi<td>1409<td>22r05a7202<td>0<td>22r05a7202<td>73<td>16.16%<tr><td>428<td>21r01a66h6<td>cmrit25_21r01a66h6<td>376<td>anshitha_pallem<td>0<td>0<td>anshi_pallem<td>0<td>anshi_pallem<td>1075<td>21r01a66h6<td>150<td>16.15%<tr><td>429<td>21r01a6776<td><td>0<td>21r01a6776<td>0<td>13<td>21r01a6776<td>1303<td>rajesh6776<td>1108<td>21r01a6776<td>149<td>16.12%<tr><td>430<td>21r01a05l6<td>cmrit_21r01a05l6<td>0<td>21r01a05l6<td>0<td>4<td>21r01a05l6<td>1381<td>ranjith_20<td>1163<td>21r01a05l6<td>90<td>16.11%<tr><td>431<td>21r01a04k1<td>cmrit_21r01a04k1<td>0<td>21r01a04k1<td>0<td>17<td>21r01a04k1<td>1426<td>pranaykumar22<td>1021<td>21r01a04k1<td>117<td>16.08%<tr><td>432<td>21r01a6675<td>21r01a6675<td>0<td>21r01ae7gl<td>0<td>5<td>21r01a6675<td>1439<td>varsha_146<td>1120<td>21r01a6675<td>55<td>15.86%<tr><td>433<td>22r05a0411<td>cmrit25_22r05a0411<td>341<td>22r05a0411<td>0<td>0<td>22r05a0411<td>1434<td>22r05a0411<td>0<td>22r05a0411<td>40<td>15.81%<tr><td>434<td>22r05a0510<td>22r05a0510<td>358<td>22r05a0510<td>0<td>0<td>22r05a0510<td>0<td>vaishu10<td>1280<td>22r05a0510<td>20<td>15.79%<tr><td>435<td>21r01a0498<td>cmrit25_21r01a0498<td>396<td>21r01a0498<td>0<td>0<td>21r01a0498<td>0<td>samatha_498<td>1016<td>21r01a0498<td>104<td>15.76%<tr><td>436<td>21r01a05a5<td>cmrit25_21r01a05a5<td>362<td>muddasaniramya<td>18<td>0<td>ramyamuddasani<td>0<td>ramyamuddasani<td>971<td>21r01a05a5<td>104<td>15.74%<tr><td>437<td>21r01a05g9<td>cmrit25_21r01a05g9<td>0<td>21r01a05g9<td>0<td>0<td>21r01a05g9<td>1508<td>srivarsha_31<td>1113<td>21r01a05g9<td>16<td>15.7%<tr><td>438<td>21r01a04h2<td>21r01a04h2<td>0<td>gowtham_h2<td>0<td>0<td>21r01a04h2<td>1421<td>gowtham_h2<td>1178<td>21r01a04h2<td>25<td>15.7%<tr><td>439<td>21r01a04p1<td>cmrit25_21r01a04p1<td>0<td>21r01a04p1<td>0<td>0<td>21r01a04p1<td>1505<td>s21r01a04p1<td>996<td>21r01a04p1<td>93<td>15.7%<tr><td>440<td>21r01a04e3<td>cmrit_2521r01a04e3<td>369<td>21r01ay9hv<td>10<td>0<td>anilkumar_4e3<td>0<td>anilkumar4e3<td>1093<td>21r01a04e3<td>40<td>15.6%<tr><td>441<td>21r01a0562<td>21r01a0562<td>396<td>21r01a0562<td>0<td>0<td>vedanthkankan<td>0<td>vedanthkankan<td>1085<td>21r01a0562<td>35<td>15.53%<tr><td>442<td>21r01a05c9<td>cmrit25_21r01a05c9<td>359<td>21r01ab981<td>0<td>12<td>21r01a05c9<td>0<td>hamsika5c9<td>991<td>21r01a05c9<td>140<td>15.48%<tr><td>443<td>21r01a6743<td>cmrit25_21r01a6743<td>356<td>nethaji_43<td>0<td>0<td>nethaji_43<td>0<td>nethaji_43<td>1264<td>nethaji_43<td>0<td>15.46%<tr><td>444<td>21r01a0567<td>21r01a0567<td>0<td>21r01abk04<td>0<td>14<td>21r01a0567<td>1436<td>saiteja567<td>1105<td>anumalasaiteja21r01a0567<td>0<td>15.46%<tr><td>445<td>22r05a7203<td>cmrit25_22r05a7203<td>0<td>@22r05a7203<td>0<td>0<td>shravansanjay<td>1481<td>shravansanjay<td>1090<td>22r05a7203<td>20<td>15.44%<tr><td>446<td>21r01a05j0<td>cmrit25_21r01a05j0<td>363<td>21r01a05j0<td>0<td>15<td>21r01a05j0<td>0<td>sr21r01a05j0<td>1043<td>21r01a05j0<td>85<td>15.44%<tr><td>447<td>21r01a04m1<td>cmrit_21r01a04m1<td>0<td>21r01a04m1<td>0<td>11<td>21r01a04m1<td>1420<td>shalini76<td>958<td>cmrit_21r01a04m1<td>107<td>15.4%<tr><td>448<td>21r01a67b8<td>21r01a67b8<td>0<td>21r01a67b8<td>0<td>0<td>21r01a67b8<td>1382<td>cmr_21r01a67b8<td>1200<td>21r01a67b8<td>0<td>15.37%<tr><td>449<td>22r05a6717<td>cmrit25_22r05a6717<td>0<td>22r05afiff<td>0<td>0<td>22r05a6717<td>1385<td>vishnu717<td>1161<td>22r05a6717<td>22<td>15.36%<tr><td>450<td>21r01a05k7<td>cmrit25_21r01a05k7<td>369<td>21r01a05k7<td>0<td>9<td>21r01a05k7<td>0<td>cmrit5k7<td>953<td>21r01a05k7<td>134<td>15.32%<tr><td>451<td>21r01a04b5<td>cmrit25_21r01a04b5<td>350<td>21r01a04b5<td>0<td>11<td>21r01a04b5<td>0<td>cmr_21r01a04b5<td>921<td>21r01a04b5<td>191<td>15.31%<tr><td>452<td>21r01a66g4<td>cmrit25_21r01a66g4<td>364<td>21r01a66g4<td>0<td>40<td>navya_66g4<td>0<td>navya66g4<td>838<td>21r01a66g4<td>126<td>15.23%<tr><td>453<td>21r01a0461<td>cmr_21r01a0461<td>0<td>cmr_21r01a0461<td>0<td>0<td>cmr_21r01a0461<td>1409<td>cmr_21r01a0461<td>995<td>cmr_21r01a0461<td>102<td>15.23%<tr><td>454<td>21r01a7307<td>cmr_21r01a7307<td>704<td><td>0<td>0<td><td>0<td><td>0<td>21r01a7307<td>25<td>15.21%<tr><td>455<td>21r01a0492<td>cmrit25_21r01a0492<td>0<td>21r01amicz<td>0<td>0<td>21r01a0492<td>1410<td>kube21r01a0492<td>989<td>21r01a0492<td>99<td>15.17%<tr><td>456<td>21r01a0426<td>cmrit25_21r01a0426<td>0<td>21r01a0426<td>18<td>14<td>cmrit25_21r01a0426<td>0<td>r01a0426<td>1217<td>21r01a0426<td>644<td>15.13%<tr><td>457<td>21r01a05m2<td>cmrit25_21r01a05m2<td>357<td>21r01an1s6<td>0<td>17<td>21r01a05m2<td>0<td>r01a05m2<td>1036<td>21r01a05m2<td>50<td>14.98%<tr><td>458<td>21r01a7232<td>cmrit25_21r01a7232<td>386<td>21r01a7232<td>0<td>0<td>jaddu_deviram<td>0<td>cmr_21r01a7232<td>1077<td>21r01a7232<td>5<td>14.98%<tr><td>459<td>21r01a7223<td>cmrit25_21r01a7223<td>355<td>21r01aewni<td>0<td>0<td>21r01a7223<td>0<td>charishna<td>1125<td>21r01a7223<td>42<td>14.97%<tr><td>460<td>21r01a6774<td>cmrit25_21r01a6774<td>355<td>21r01a6774<td>0<td>0<td><td>0<td>r01a6774<td>1183<td><td>0<td>14.93%<tr><td>461<td>21r01a04d3<td>21r01a04d3<td>0<td><td>0<td>0<td>jhansi2k23<td>1388<td>jhansi2k23<td>1027<td>21r01a04d3<td>62<td>14.92%<tr><td>462<td>22r05a0418<td>cmrit25_22r05a0418<td>348<td>22r05a0418megha<td>0<td>0<td>22r05a0418<td>0<td>meghana48<td>1106<td>22r05a0418<td>63<td>14.91%<tr><td>463<td>21r01a6625<td><td>0<td><td>0<td>0<td>21r01a6625<td>1459<td>chakradar09<td>1043<td><td>0<td>14.83%<tr><td>464<td>21r01a05k3<td>cmrit25_21r01a05k3<td>360<td>21r01a05k3<td>0<td>19<td>21r01a05k3<td>0<td>ruthvik5k3<td>1037<td>21r01a05k3<td>20<td>14.82%<tr><td>465<td>21r01a6629<td>cmrit25_21r01a6629<td>375<td>21r01a6629<td>0<td>0<td>21r01a6629<td>0<td>deepak_029<td>1043<td>21r01a6629<td>20<td>14.68%<tr><td>466<td>21r01a04d9<td>cmrit25_21r01a04d9<td>0<td>cbhavaniprasad<td>0<td>0<td>21r01a04d9<td>1482<td>bunnyy22<td>951<td>21r01a04d9<td>29<td>14.67%<tr><td>467<td>21r01a7203<td>21r01a7203<td>0<td>21r01a7203<td>0<td>0<td>21r01a7203<td>1408<td>cmr21r01a7203<td>1031<td>21r01a7203<td>20<td>14.66%<tr><td>468<td>21r01a0466<td>cmrit25_21r01a0466<td>561<td><td>0<td>0<td><td>0<td>vyshu_18<td>436<td><td>0<td>14.65%<tr><td>469<td>21r01a6639<td>cmrit_21r01a6639<td>354<td>21r01aypux<td>0<td>24<td>cmrit_21r01a6639<td>0<td>udaycharan6639<td>947<td>21r01a6639<td>55<td>14.6%<tr><td>470<td>21r01a05h4<td>21r01a05h4<td>357<td>21r01aqj42<td>0<td>10<td>21r01a05h4<td>0<td>mallika1321<td>1002<td>21r01a05h4<td>50<td>14.59%<tr><td>471<td>21r01a05c8<td>cmrit25_21r01a05c8<td>356<td>21r01anhzo<td>0<td>0<td>shanmukh2410<td>0<td>shanmukh2410<td>956<td>21r01a05c8<td>106<td>14.55%<tr><td>472<td>21r01a6786<td>cmrit25_21r01a6786<td>362<td>21r01a6786<td>0<td>0<td>21r01a6786<td>0<td>premsai1029<td>1054<td>21r01a6786<td>10<td>14.37%<tr><td>473<td>21r01a67a5<td>adithya25<td>373<td><td>0<td>0<td>adithyaa5<td>0<td>adithya_a5<td>1018<td><td>0<td>14.29%<tr><td>474<td>21r01a7247<td>cmrit25_21r01a7247<td>0<td>shadulmohaljnv<td>0<td>0<td>mohammad_shadulla<td>1412<td>mohammadshadul<td>995<td><td>0<td>14.27%<tr><td>475<td>22r05a0522<td>cmrit25_22r05a0522<td>356<td><td>0<td>0<td><td>0<td>sunny522<td>997<td>22r05a0522<td>45<td>14.22%<tr><td>476<td>21r01a0474<td><td>0<td>21r01a2ifz<td>0<td>0<td>arvind_412<td>1443<td>arvind412<td>942<td><td>0<td>14.11%<tr><td>477<td>21r01a05p6<td><td>0<td>21r01a05p6<td>0<td>7<td>21r01a05p6<td>1350<td>nainika_215p6<td>920<td>21r01a05p6<td>40<td>14.01%<tr><td>478<td>21r01a05m6<td>cmrit25_21r01a05m6<td>348<td>21r01acr0e<td>0<td>0<td>21r01a05m6<td>0<td>r01a05m6<td>1012<td>21r01a05m6<td>20<td>13.91%<tr><td>479<td>22r05a0409<td>cmrit25_22r05a0409<td>377<td><td>0<td>0<td>22ro5ao409<td>0<td>ravi22ro5ao409<td>752<td>22r05a0409<td>124<td>13.9%<tr><td>480<td>21r01a0475<td>21r01a0475<td>0<td>krupakarreddy<td>0<td>0<td>21r01a0475<td>1409<td>cmr_21r01a0475<td>913<td>21r01a0475<td>10<td>13.83%<tr><td>481<td>21r01a6797<td>cmrit25_21r01a6797<td>358<td>21r01alizy<td>0<td>0<td>bhagirao<td>0<td>bhagirathrao<td>973<td>21r01a6797<td>10<td>13.78%<tr><td>482<td>21r01a05d4<td>21r01a05d4<td>347<td>21r01a05d4<td>10<td>18<td>21r01a05d4<td>0<td>bhavana00<td>821<td>21r01a05d4<td>20<td>13.71%<tr><td>483<td>21r01a6637<td><td>0<td><td>0<td>0<td>21r01a6637<td>1442<td>y21r01a6637<td>867<td>21r01asema<td>0<td>13.64%<tr><td>484<td>21r01a05r7<td>21r01a05r7cse<td>570<td>cmrit_21r01a05r7<td>0<td>15<td>21r01a05r7<td>0<td>cmr21r01a05r7<td>0<td>yerranagulaanusha21r01a05r7<td>0<td>12.51%<tr><td>485<td>21r01a6770<td>21r01a6770<td>567<td><td>0<td>0<td>21r01a6770<td>0<td>cmrit2025_21r01a6770<td>0<td>21r01a6770<td>35<td>12.39%<tr><td>486<td>21r01a05q5<td>alshay5q5<td>360<td>21r01a05q5<td>0<td>5<td>akshay5q5<td>0<td>akshay5q5<td>701<td>21r01a05q5<td>15<td>12.31%<tr><td>487<td>21r01a05f4<td>21r01a05f4<td>0<td>21r01a05f4<td>30<td>2<td>21r01a05f4<td>1753<td>cmrit25_21r01a05f4<td>0<td>21r01a05f4<td>56<td>12.23%<tr><td>488<td>21r01a66j2<td>r01a66j2<td>0<td>21r01a66j2<td>39<td>0<td>21r01a66j2<td>1458<td>21r01a66j2<td>0<td>21r01a66j2<td>179<td>12.16%<tr><td>489<td>21r01a6780<td>21r01a6780<td>572<td><td>0<td>0<td><td>0<td>21r01a6780<td>0<td><td>0<td>12.16%<tr><td>490<td>21r01a67e5<td>rashmitha54<td>567<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>12.06%<tr><td>491<td>21r01a0456<td>cmrit25_21r01a0456<td>0<td>21r01a0456<td>0<td>31<td>21r01a0456<td>0<td>anjaneyulu7_4<td>1064<td>21r01a0456<td>465<td>11.92%<tr><td>492<td>21r01a7356<td>21r01a7356<td>0<td>21r01a7356<td>10<td>25<td>21r01a7356<td>0<td>cmr_21r01a7356<td>1377<td>21r01a7356<td>108<td>10.83%<tr><td>493<td>21r01a7357<td>21r01a7357<td>0<td>21r01ara1p<td>0<td>47<td>21r01a7357<td>0<td>cmr21r01a7357<td>1209<td>21r01a7357<td>200<td>10.7%<tr><td>494<td>21r01a0460<td>21r01a0460<td>357<td>21r01a0460<td>0<td>47<td>indhu_24<td>0<td>indhu_24<td>0<td>21r01a0460<td>171<td>10.47%<tr><td>495<td>22r05a7303<td>chithram_saiteja<td>0<td>22r05aofi8<td>29<td>0<td>cmrit25_22r05a7303<td>0<td>sai_1211<td>1221<td>22r05a7303<td>65<td>9.83%<tr><td>496<td>21r01a05l0<td><td>0<td>21r01a05l0<td>0<td>3<td>manognakumar<td>0<td>manognakumar<td>1467<td>21r01a05l0_manu<td>55<td>9.76%<tr><td>497<td>21r01a67f0<td>21r01a67f0<td>0<td>21r01a67fo<td>29<td>13<td>21r01a67f0<td>0<td>harish_52<td>1132<td>21r01a67f0<td>78<td>9.74%<tr><td>498<td>21r01a67h8<td>cmrit25_21r01a67h8<td>0<td>21r01a2ifu<td>0<td>9<td>bhavya67h8<td>0<td>bhavya67h8<td>1283<td>21r01a67h8<td>122<td>9.42%<tr><td>499<td>21r01a7322<td>21r01a7322<td>0<td>21r01a7322<td>0<td>0<td>21r01a7322<td>1430<td>ramya_7322<td>0<td>21r01a7322<td>125<td>9.36%<tr><td>500<td>21r01a05a8<td>cmrit25_21r01a05a8<td>0<td>21r01a05a8<td>10<td>8<td>21r01a05a8<td>0<td>pallavi2004<td>1169<td>21r01a05a8<td>112<td>9.13%<tr><td>501<td>21r01a67d4<td><td>0<td>21r01a67d4<td>0<td>0<td>21r01a67d4<td>1411<td>cmr_21r01a67d4<td>0<td>21r01a67d4<td>107<td>9.08%<tr><td>502<td>22r05a0405<td>cmrit25_22r05a0405<td>0<td>22r05a0405<td>0<td>11<td>22r05a0405<td>0<td>cmr_22r05a0405<td>1154<td>22r05a0405<td>161<td>9.04%<tr><td>503<td>21r01a66g0<td>21r01a66g0<td>358<td>anagarikareddy<td>0<td>16<td>21r01a66g0<td>0<td>anagarika<td>0<td>21r01a66g0<td>100<td>8.99%<tr><td>504<td>21r01a04a9<td><td>0<td>pillisanjay<td>0<td>0<td>sanjay<td>1571<td>pillisanjay<td>0<td>21r01ao4a9<td>0<td>8.96%<tr><td>505<td>21r01a05f3<td>cmrit25_21r01a05f3<td>0<td>21r01a05f3<td>0<td>25<td>21r01a05f3<td>0<td>cmr_21r01a05f3<td>1135<td>21r01a05f3<td>119<td>8.88%<tr><td>506<td>21r01a04e9<td>cmrit25_21r01a04e9<td>0<td>21r01a04e9<td>0<td>0<td>21r01a04e9<td>0<td>r01a04e9<td>1091<td>sathwik_17<td>212<td>8.85%<tr><td>507<td>21r01a0570<td>cmrit_21r01a0570<td>0<td>21r01a0570<td>26<td>10<td>21r01a0570<td>0<td>shreya_1_17<td>1124<td>21r01a0570<td>15<td>8.84%<tr><td>508<td>21r01a66j3<td>cmrit25_21r01a66j3<td>362<td>21r01a66j3<td>0<td>10<td>21r01a66j3<td>0<td>cmrit25_21r01a66j3<td>0<td>cmrit_21r01a66j3<td>85<td>8.78%<tr><td>509<td>21r01a0478<td>cmrit25_21r01a0478<td>0<td>21r01a0478<td>0<td>0<td>21r01a0478<td>1424<td>21r01a0478<td>0<td>21r01a0478<td>60<td>8.7%<tr><td>510<td>21r01a05b3<td><td>0<td><td>0<td>0<td>pavanipuja<td>0<td>pavanipuja<td>1097<td>21r01a05b3<td>186<td>8.63%<tr><td>511<td>21r01a0435<td><td>0<td>cmrit_21r01a0435<td>0<td>0<td>cmrit_21r01a0435<td>0<td>cmr_21r01a0435<td>1383<td>cmrit_21r01a0435<td>0<td>8.63%<tr><td>512<td>22r05a6601<td><td>0<td>dinesh<td>0<td>0<td>dinesh<td>1507<td>dinesh<td>0<td>dineshbathula<td>0<td>8.6%<tr><td>513<td>21r01a6613<td><td>0<td>21r01a98ql<td>0<td>12<td>21r01a6613<td>0<td>sheershitha_77<td>1062<td>21r01a6613<td>167<td>8.55%<tr><td>514<td>21r01a05c5<td>cmrit25_21r01a05c5<td>0<td>21r01a05c5<td>10<td>9<td>cmrit25_21r01a05c5<td>0<td>v_sruthi20<td>1059<td>21r01a05c5<td>120<td>8.54%<tr><td>515<td>21r01a0404<td>21r01a0404<td>0<td>@21r01awmab<td>0<td>0<td>21r01a0404<td>0<td>v21r01a0404<td>1359<td>21r01a0404<td>5<td>8.53%<tr><td>516<td>21r01a66d4<td>cmrit25_21r01a66d4<td>0<td>21r01amda7<td>0<td>14<td>cmr_21r01a66d4<td>0<td>cmr_21r01a66d4<td>1183<td>21r01a66d4<td>65<td>8.38%<tr><td>517<td>21r01a67e4<td>ganeshe4<td>0<td>ganeshe4<td>0<td>0<td>21r01a67e4<td>0<td>cmr_21r01a67e4<td>1336<td>ganeshe4<td>0<td>8.34%<tr><td>518<td>21r01a0453<td>cmrit25_21r01a0453<td>0<td><td>0<td>0<td>21r01a0453<td>0<td>hanvitha_10<td>1179<td>21r01a0453<td>101<td>8.33%<tr><td>519<td>22r05a6715<td>22r05a6715<td>0<td>22r05a6715<td>0<td>0<td>22r05a6715<td>0<td>bhavana6715<td>1195<td>22r05a6715<td>89<td>8.31%<tr><td>520<td>21r01a0575<td>cmrit25_21r01a0575<td>0<td>21r01aauhx<td>0<td>0<td>21r01a0575<td>0<td>chakri26<td>1158<td>21r01a0575<td>110<td>8.29%<tr><td>521<td>21r01a0455<td><td>0<td>21r01aakaq<td>10<td>2<td>cmr_21r01a0455<td>0<td>cmr_21r01a0455<td>1223<td><td>0<td>8.23%<tr><td>522<td>21r01a0449<td><td>0<td><td>0<td>0<td><td>0<td>sumanth_49<td>1231<td>21r01a0449<td>57<td>8.23%<tr><td>523<td>21r01a7344<td>21r01a7344<td>0<td>21r01aordp<td>0<td>12<td>21r01a7344<td>0<td>cmr_21r01a7344<td>1185<td>21r01a7344<td>45<td>8.14%<tr><td>524<td>21r01a67d3<td>cmrit25_21r01a67d3<td>363<td>cmrit_21r01a67d3<td>0<td>15<td>cmrit_21r01a67d3<td>0<td>cmrit_21r01a67d3<td>0<td>cmrit_21r01a67d3<td>0<td>8.11%<tr><td>525<td>21r01a67d2<td><td>0<td>21r01a67d2<td>0<td>0<td>21r01a67d2<td>0<td>cmr_21r01a67d2<td>1285<td>21r01a67d2<td>7<td>8.09%<tr><td>526<td>21r01a0596<td>21r01a0596<td>0<td>21r01avr1q<td>0<td>5<td>21r01a0596<td>0<td>r01a0596<td>1179<td>21r01a0596<td>62<td>8.09%<tr><td>527<td>21r01a0401<td><td>0<td>21r01asn26<td>0<td>0<td><td>0<td>a21r01a0401<td>1201<td>21r01a0401<td>60<td>8.07%<tr><td>528<td>21r01a04r3<td>cmrit25_21r01a04r3<td>0<td><td>0<td>0<td>21r01a04r3<td>0<td>d21r01a04r3<td>1229<td>21r01a04r3<td>40<td>8.06%<tr><td>529<td>21r01a6704<td>cmrit25_21r01a6704<td>0<td><td>0<td>0<td><td>0<td>mahi6704<td>1167<td>21r01a6704<td>80<td>8.05%<tr><td>530<td>21r01a0494<td><td>0<td>21r01a0494@vamshi<td>0<td>0<td>21r01a0494<td>1410<td>21r01a0494@vamshi<td>0<td>21r01a0494@vamshi<td>0<td>8.04%<tr><td>531<td>21r01a6718<td><td>0<td><td>0<td>0<td><td>0<td>kousthub2003<td>1250<td>gkousthub<td>25<td>8.04%<tr><td>532<td>21r01a0511<td>21r01a0511<td>361<td>21r01ae5x9<td>0<td>0<td><td>0<td><td>0<td>21r01a0511<td>38<td>8.04%<tr><td>533<td>22r05a0408<td>gangireddy9<td>0<td>22r05a7p6r<td>0<td>0<td>22r05a0408<td>0<td>cmr_22r05a0408<td>1209<td>22r05a0408<td>50<td>8.03%<tr><td>534<td>22r05a7304<td>nagendra7304<td>0<td>22r05a29c2<td>0<td>17<td>22r05a7304<td>0<td>nagendra7304<td>1137<td>22r05a7304<td>50<td>8.02%<tr><td>535<td>21r01a0408<td><td>0<td><td>0<td>0<td><td>0<td>s_21r01a0408<td>1163<td>21r01a0408<td>79<td>8.02%<tr><td>536<td>21r01a04n1<td>21r01a04n1<td>347<td>21r01a05e9<td>0<td>4<td>aaishwarya_11<td>0<td>a21r01a4n1<td>0<td>21r01a04n1<td>52<td>7.98%<tr><td>537<td>21r01a05a2<td>cmrit25_21r01a05a2<td>0<td>21r01a05a2<td>0<td>0<td>21r01a05a2<td>0<td>s21ro1ao5a2<td>1129<td>21r01a05a2<td>95<td>7.96%<tr><td>538<td>21r01a04r5<td>cmrit_21r01a04r5<td>348<td>21r01a04r5<td>0<td>0<td>21r01a04r5<td>0<td>chanduthunga<td>0<td>21r01a04r5<td>58<td>7.96%<tr><td>539<td>21r01a7353<td>cmrit25_21r01a7353<td>0<td>21r01a7353<td>0<td>27<td>21r01a7353<td>0<td>hain21r01a7353<td>770<td>21r01a7353<td>254<td>7.96%<tr><td>540<td>21r01a66j0<td><td>0<td>raghavva5ljf<td>0<td>0<td>raghav-k<td>0<td>raghavk30<td>1274<td>21r01a66j01<td>0<td>7.95%<tr><td>541<td>21r01a0496<td>cmrit25_21r01a0496<td>0<td>21r01a0496<td>0<td>0<td>anil496<td>0<td>anil21r01a0496<td>1049<td>21r01a0496<td>145<td>7.94%<tr><td>542<td>22r05a0407<td>cmrit25_22r05a0407<td>0<td><td>0<td>0<td><td>0<td>cmr22r05a0407<td>1168<td>22r05a0407<td>67<td>7.93%<tr><td>543<td>21r01a0434<td>cmrit25_21r01a0434<td>0<td><td>0<td>0<td>21r01a0434<td>0<td>akshu66<td>1048<td>21r01a0434<td>137<td>7.86%<tr><td>544<td>21r01a05n9<td>21r01a05n9<td>350<td>21r01a05n9<td>0<td>12<td>21r01a05n9<td>0<td>manohar1012<td>0<td>21r01a05n9<td>10<td>7.85%<tr><td>545<td>21r01a05g4<td>cmrit25_21r01a05g4<td>0<td>21r01a05g4<td>0<td>11<td>21r01a05g4<td>0<td>r01a05g4<td>1204<td>21r01a05g4<td>5<td>7.85%<tr><td>546<td>21r01a04f7<td>cmrit25_21r01a04f7<td>0<td>21r01a04f7<td>0<td>0<td>21r01a04f7<td>0<td>bindu_f7<td>845<td>21r01a04f7<td>258<td>7.75%<tr><td>547<td>21r01a04j0<td>cmrit_21r01a04j0<td>0<td><td>0<td>0<td>21r01a04j0<td>0<td>sharathraju<td>971<td>21r01a04j0<td>176<td>7.75%<tr><td>548<td>21r01a04e7<td>cmrit25_21r01a04e7<td>362<td>udaygudala<td>0<td>0<td>udaygudala<td>0<td>udaygudala<td>0<td>udaygudala<td>0<td>7.7%<tr><td>549<td>21r01a7326<td>cmrit25_21r01a7326<td>362<td>21r01a7326<td>0<td>0<td>21r01a7326<td>0<td>21r01a7326<td>0<td>21r01a7326<td>0<td>7.7%<tr><td>550<td>21r01a0587<td><td>0<td>21r01a0587<td>0<td>0<td>deekshith_87<td>0<td>deekshith_587<td>1232<td>21r01a0587<td>0<td>7.69%<tr><td>551<td>21r01a05f5<td>navaneeth5f5<td>0<td>21r01acqbq<td>0<td>8<td>navaneeth1103<td>0<td>navaneeth1103<td>1194<td>kalavalanavanee1<td>0<td>7.66%<tr><td>552<td>21r01a05l3<td><td>0<td>21r01a05l3<td>10<td>2<td>21r01a05l3<td>0<td>viswas14<td>1131<td>21r01a05l3<td>0<td>7.66%<tr><td>553<td>21r01a05f8<td>cmrit25_21r01a05f8<td>0<td>21r01ao5f8<td>10<td>15<td>21r01a05f8<td>0<td>abhiram5f8<td>1051<td>21r01a05f8<td>15<td>7.64%<tr><td>554<td>21r01a7224<td>cmrit25_21r01a7224<td>0<td>21r01arg58<td>20<td>0<td>21r01a7224<td>0<td>nikitha7224<td>1010<td>21r01a7224<td>25<td>7.64%<tr><td>555<td>21r01a66c9<td>cmrit25_21r01a66c9<td>0<td>likhith_1216<td>0<td>0<td>likhith_1216<td>0<td>likhith_1216<td>1220<td>likhith_1216<td>0<td>7.62%<tr><td>556<td>21r01a6739<td><td>0<td>21r01ali3f<td>30<td>0<td>21r01a6739<td>0<td>ali39<td>934<td>21r01a6739<td>15<td>7.61%<tr><td>557<td>21r01a04l4<td>cmrit25_21r01a04l4<td>0<td>21r01a04l4<td>0<td>0<td>21r01a04l4<td>0<td>yella04l4<td>1111<td>21r01a04l4<td>67<td>7.58%<tr><td>558<td>21r01a04g2<td>cmrit25_21r01a04g2<td>0<td>21r01a04g2<td>0<td>0<td>k.pranavi<td>0<td>pranavi_27<td>860<td>21r01a04g2<td>230<td>7.58%<tr><td>559<td>21r01a04r6<td>cmrit25_21r01a04p6<td>355<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>7.55%<tr><td>560<td>21r01a67j6<td>cmrit-21r01a67j6<td>0<td><td>0<td>0<td><td>0<td>tsujan<td>1207<td><td>0<td>7.53%<tr><td>561<td>21r01a6728<td>cmrit25_21r01a6728<td>0<td><td>0<td>0<td>21r01a6728<td>0<td>saipriya2003<td>1153<td>21r01a6728<td>35<td>7.53%<tr><td>562<td>21r01a7355<td><td>0<td><td>0<td>0<td><td>0<td>mesiddhartharl<td>1206<td>me_siddhartharl<td>0<td>7.53%<tr><td>563<td>21r01a05m0<td>saitejareddy<td>0<td>saitejareddy<td>0<td>283<td>saitejareddy<td>0<td>saitejareddy<td>0<td>21r01a05m0<td>10<td>7.52%<tr><td>564<td>21r01a0597<td>21r01a0597<td>0<td>21r01a0597<td>0<td>0<td>vamshi_yadav2727<td>0<td>vamshiyadav07<td>1133<td>21r01a0597<td>45<td>7.5%<tr><td>565<td>21r01a04p6<td>cmrit25_21r01a04p6<td>0<td><td>0<td>0<td>21r01a04p6<td>0<td>cmr_21r01a04p6<td>1115<td>21r01a04p6<td>55<td>7.49%<tr><td>566<td>21r01a0440<td><td>0<td>21r01auz8t<td>0<td>0<td>21r01a0440<td>0<td>chanduja_21r01<td>1199<td><td>0<td>7.48%<tr><td>567<td>21r01a6706<td><td>0<td><td>0<td>0<td><td>0<td>dilipkumar970<td>1185<td>bonagiridilipku1<td>8<td>7.47%<tr><td>568<td>21r01a0594<td>shivasai_03<td>0<td>kondabattulaojvq<td>0<td>0<td>kondabattulashivasai143<td>0<td>shivasai_28<td>1194<td>cse_21r01a0594<td>0<td>7.45%<tr><td>569<td>21r01a0490<td>21r01a0490<td>0<td>21r01afled<td>0<td>0<td>21r01a0490<td>0<td>mani40<td>1100<td>21r01a0490<td>60<td>7.44%<tr><td>570<td>22r05a0524<td><td>0<td>22r05atpli<td>0<td>5<td>22r05a0524<td>0<td>shivani524<td>1100<td>22r05a0524<td>45<td>7.43%<tr><td>571<td>21r01a05c1<td>cmrit25_21r01a05c1<td>0<td>21r01a05c1<td>0<td>0<td>vaishnav_c1<td>0<td>vaishanv_c1<td>1183<td>21r01a05c1<td>0<td>7.38%<tr><td>572<td>21r01a04b3<td>21r01a04b3<td>0<td>@spandana<td>0<td>0<td>spandana<td>0<td>spandana63<td>1110<td>21r01a04b3<td>45<td>7.36%<tr><td>573<td>21r01a6763<td><td>0<td><td>0<td>0<td><td>0<td>srija_reddie16<td>1176<td><td>0<td>7.34%<tr><td>574<td>21r01a6737<td>cmrit25_21r01a6737<td>0<td>21r01a6737<td>0<td>0<td>bhavana_6737<td>0<td>bhavana_6737<td>1128<td>21r01a6737<td>30<td>7.33%<tr><td>575<td>21r01a0446<td>akhilperala<td>0<td>21r01a0446<td>0<td>0<td>21r01a0446<td>0<td>akhilperala<td>1134<td>cmrit_21r01a0446<td>25<td>7.32%<tr><td>576<td>21r01a6644<td><td>0<td>21r01aozhy<td>10<td>0<td>s21r01a6644<td>0<td>s21r01a6644<td>1085<td>21r01a6644<td>0<td>7.32%<tr><td>577<td>21r01a7249<td>ace_22<td>0<td>ace2207<td>0<td>0<td>kamal_mudiraj_<td>0<td>ace_223<td>1167<td>ace_22.<td>0<td>7.28%<tr><td>578<td>22r05a6720<td><td>0<td>22r05a6720<td>0<td>0<td>srilaxmi20<td>0<td>srilaxmi20<td>1098<td>22r05a6720<td>42<td>7.26%<tr><td>579<td>21r01a7225<td>21r01a7225<td>0<td>anonymou99wv<td>0<td>0<td>anilgoud<td>0<td>anil66<td>991<td>21r01a7225<td>111<td>7.25%<tr><td>580<td>21r01a0573<td><td>0<td>datta73<td>0<td>0<td>datta73<td>0<td>datta73<td>1160<td>21r01a0573<td>0<td>7.24%<tr><td>581<td>21r01a0419<td>cmrit25_21r01a0419<td>0<td>21r01a0419<td>0<td>0<td>21r01a0419<td>0<td>ganesh0_2<td>1019<td>21r01a0419<td>90<td>7.23%<tr><td>582<td>21r01a67j1<td>cmrit25_21r01a67j1<td>0<td>21r01a67j1<td>0<td>0<td>21r01a67j1<td>0<td>cmr_21r01a67j1<td>1152<td>cmr_21r01a67j1<td>0<td>7.19%<tr><td>583<td>21r01a7256<td>cmrit_21r01a7256<td>0<td>21r01a7256<td>0<td>0<td>21r01a7256<td>0<td>r01a7256<td>1140<td>21r01a7256<td>5<td>7.16%<tr><td>584<td>22r05a0414<td><td>0<td>santhosh_630<td>0<td>0<td><td>0<td>sai_630<td>1147<td>22r05a0414<td>0<td>7.16%<tr><td>585<td>21r01a7241<td>cmrit25_21r01a7241<td>0<td>21r01a7241<td>0<td>5<td>21r01a7241<td>0<td>r01a7241<td>871<td>21r01a7241<td>164<td>7.14%<tr><td>586<td>21r01a04g5<td>cmrit_21r01a04g5<td>0<td>21r01a04g5<td>0<td>0<td>21r01a04g5<td>0<td>shoiab_786<td>1047<td>21r01a04g5<td>63<td>7.14%<tr><td>587<td>21r01a05b0<td>21r01a05b0<td>0<td>21r01a05b0<td>0<td>0<td>21r01a05b0<td>0<td>surabhi_nanda<td>1046<td>21r01a05b0<td>62<td>7.12%<tr><td>588<td>21r01a0537<td>21r01a0537<td>0<td>21r01a0537cmrit<td>0<td>12<td>21r01a0537<td>0<td>sowmya37<td>1085<td>21r01a0537<td>3<td>7.12%<tr><td>589<td>21r01a04f3<td>n21r01a04f3<td>0<td>21r01a04f3<td>0<td>0<td>21r01a04f3<td>0<td>n21r01a04f3<td>1138<td>21r01a04f3<td>0<td>7.1%<tr><td>590<td>21r01a6609<td><td>0<td>21r01abvpo<td>0<td>0<td>21r01a669<td>0<td>a21r01a6609<td>976<td>21r01a6609<td>105<td>7.1%<tr><td>591<td>21r01a6655<td>21r01a6655<td>0<td>21r01aoqdn<td>0<td>29<td>21r01a6655<td>0<td>sahil216655<td>863<td>21r01a6655<td>97<td>7.08%<tr><td>592<td>21r01a7220<td>cmrit25_21r01a7220<td>0<td>21r01a7220<td>0<td>0<td>cmr_21r01a7220<td>0<td>cmr_21r01a7220<td>1133<td>21r01a7220<td>0<td>7.07%<tr><td>593<td>21r01a0555<td><td>0<td>21r01a0555<td>0<td>0<td><td>0<td>sanju_555<td>1120<td>21r01a0555<td>5<td>7.04%<tr><td>594<td>21r01a04h9<td>cmrit25_21r01a04h9<td>0<td><td>0<td>0<td>21r01a04h9<td>0<td>adithya_h9<td>1057<td>21r01a04h9<td>45<td>7.03%<tr><td>595<td>21r01a67b4<td>r01a67b4<td>0<td>21r01a67b4<td>0<td>0<td>pokalanandini2<td>0<td>r01a67b4<td>1125<td>pokalanandini2<td>0<td>7.02%<tr><td>596<td>21r01a6742<td>chandana_200<td>0<td><td>0<td>0<td><td>0<td>manichandana20<td>1090<td>21r01a6742<td>20<td>7%<tr><td>597<td>21r01a6713<td><td>0<td><td>0<td>0<td><td>0<td>sahithya04<td>1118<td><td>0<td>6.98%<tr><td>598<td>21r01a0540<td>21r01a0540<td>0<td>21r01agbwd<td>0<td>0<td>21r01a0540<td>0<td>pramodreddy78<td>1077<td>21r01a0540<td>26<td>6.97%<tr><td>599<td>21r01a0565<td>cmrit25_21r01a0565<td>0<td>21r01ar0tu<td>0<td>9<td>21r01a0565_lohitha<td>0<td>cmr_21r01a0565<td>1041<td>21r01a0565<td>24<td>6.96%<tr><td>600<td>21r01a05q2<td><td>0<td><td>0<td>0<td><td>0<td>mahendra45<td>1111<td>mahendra5q2<td>0<td>6.94%<tr><td>601<td>22r05a6719<td><td>0<td>22r05a6719<td>0<td>0<td>22r05a6719<td>0<td>prashanth0023<td>1093<td>22r05a6719<td>10<td>6.92%<tr><td>602<td>21r01a05c6<td><td>0<td>21r01a05c6<td>0<td>0<td>21r01a05c6<td>0<td>mani_shankar<td>1104<td>21r01a05c6<td>0<td>6.89%<tr><td>603<td>21r01a6654<td><td>0<td>21r01a7zg7<td>0<td>4<td>kitu_4414<td>0<td>saikrishna414<td>1068<td>21r01a6654<td>10<td>6.87%<tr><td>604<td>21r01a0448<td>cmrit2025_21r01a0448<td>0<td><td>0<td>0<td>sanjana_0448<td>0<td>cmr21r01a0448<td>1100<td>sanjana21r01a0448<td>0<td>6.87%<tr><td>605<td>21r01a6647<td>21r01a6647<td>0<td>21r01a6647<td>0<td>8<td>21r01a6647<td>0<td>cmr21r01a6647<td>979<td>21r01a6647<td>55<td>6.85%<tr><td>606<td>22r05a6704<td><td>0<td><td>0<td>0<td><td>0<td>cmr_22r05a6704<td>1097<td><td>0<td>6.85%<tr><td>607<td>21r01a0581<td>cmrit25_21r01a0581<td>0<td>21r01a3aac<td>0<td>0<td>21r01a0581<td>0<td>akarsh99<td>1096<td>21r01a0581<td>0<td>6.84%<tr><td>608<td>22r05a0415<td>cmrit_22r05a0415<td>0<td><td>0<td>0<td><td>0<td>yamini319<td>963<td>22r05a0415<td>84<td>6.82%<tr><td>609<td>21r01a7250<td>cmrit25_21r01a7250<td>0<td>21r01a7250<td>0<td>13<td>21r01a7250<td>0<td>adarsha_630<td>835<td>21r01a7250<td>128<td>6.78%<tr><td>610<td>21r01a0489<td>21r01a0489<td>0<td>21r01a0489<td>0<td>0<td>21r01a0489<td>0<td>cmr_21r01a0489<td>1002<td>21r01a0489<td>50<td>6.73%<tr><td>611<td>21r01a67d0<td><td>0<td>21r01abd8o<td>0<td>0<td>21r01a67d0<td>0<td>h21r01a67d0<td>1077<td><td>0<td>6.72%<tr><td>612<td>21r01a6750<td>shivabalajirongala<td>0<td>shivabalajvywn<td>10<td>3<td>shivabalaji<td>0<td>shivabalaji96<td>945<td>21r01a6750shiva<td>17<td>6.69%<tr><td>613<td>21r01a04c9<td>cmrit25_21r01a04c9<td>0<td>21r01a04c9<td>0<td>0<td>surya_21r01a04c9<td>0<td>surya_04c9<td>1055<td>21r01a04c9<td>5<td>6.63%<tr><td>614<td>21r01a0532<td>cmrit2025_21r01a0532<td>0<td>21r01a0532<td>0<td>12<td>21r01a0532<td>0<td>cmr_21r01a0532<td>989<td>21r01a0532<td>15<td>6.63%<tr><td>615<td>21r01a7231<td>cmrit25_21r01a7231<td>0<td>21r01a7231<td>0<td>0<td>21r01a7231<td>0<td>sneha_7231<td>1014<td>21r01a7231<td>27<td>6.59%<tr><td>616<td>21r01a0464<td>21r01a0464<td>0<td><td>0<td>0<td>bhumika464<td>0<td>bhumika36<td>905<td>21r01a0464<td>97<td>6.58%<tr><td>617<td>21r01a7246<td>mekalasridhar<td>0<td><td>0<td>0<td>mekalasridhar<td>0<td>sridhar46<td>1051<td>21r01a7246<td>0<td>6.56%<tr><td>618<td>21r01a05p9<td>21r01a05p9<td>0<td>21r01ae9yw<td>0<td>0<td>21r01a05p9<td>0<td>hari05p9<td>970<td>21r01a05p9<td>50<td>6.54%<tr><td>619<td>21r01a04d0<td>cmr_21r01a04d0<td>0<td><td>0<td>0<td>21r01a04d0<td>0<td>rajeshpatel04<td>1006<td>21r01a04d0<td>22<td>6.49%<tr><td>620<td>21r01a04j8<td>cmrit25_21r01a04j8<td>0<td>21r01acwpw<td>0<td>0<td>21r01a04j8<td>0<td>nikhil_j8<td>1029<td>nikhil_4j8<td>0<td>6.42%<tr><td>621<td>21r01a7222<td>cmrit25_21r01a7222<td>0<td>21r01a7222<td>0<td>0<td>mounikad25<td>0<td>dmounika_22<td>933<td>21r01a7222<td>62<td>6.42%<tr><td>622<td>21r01a66a7<td><td>0<td>21r01ahd2u<td>0<td>15<td>21r01a66a7<td>0<td>nnithin<td>778<td>21r01a66a7<td>120<td>6.4%<tr><td>623<td>21r01a6778<td><td>0<td>21r01a6778<td>0<td>0<td>21r01a6778<td>0<td>dhari2003<td>1017<td>21r01a6778<td>5<td>6.4%<tr><td>624<td>21r01a6730<td><td>0<td><td>0<td>0<td>srikesh_30<td>0<td>srikesh30q<td>1024<td><td>0<td>6.39%<tr><td>625<td>21r01a0430<td>cmrit_25_21r01a0430<td>0<td>21r01a0430<td>0<td>4<td>lahari_1234<td>0<td>laharika_30<td>802<td>21r01a0430<td>132<td>6.38%<tr><td>626<td>21r01a7239<td>cmrit25_21r01a7239<td>0<td>21r01a7239<td>0<td>1<td>siri_7239<td>0<td>siri_sanjana<td>889<td>21r01a7239<td>83<td>6.37%<tr><td>627<td>21r01a6702<td><td>0<td><td>0<td>0<td><td>0<td>deekshithardy<td>1019<td>deekshithardy<td>0<td>6.36%<tr><td>628<td>21r01a04f9<td>cmrit25_21r01aa04f9<td>0<td><td>0<td>0<td>21r01a04f9<td>0<td>r01a04f9<td>1017<td>21r01a04f9<td>0<td>6.35%<tr><td>629<td>22r05a0516<td>m.vamshi22r05a0516<td>0<td>22r05a0516<td>0<td>0<td>22r05a0516<td>0<td>vamshi9989<td>1015<td><td>0<td>6.34%<tr><td>630<td>21r01a05m8<td>cmrit25_21r01a05m8<td>0<td>21r01a05m8<td>0<td>0<td>21r01a05m8<td>0<td>sahithi_136<td>964<td>21r01a05m8<td>30<td>6.31%<tr><td>631<td>21r01a7201<td>cmrit25_21r01a7201<td>0<td>21r01a7201<td>0<td>0<td>21r01a7201<td>0<td>aharshitha_31<td>836<td>21r01a7201<td>109<td>6.27%<tr><td>632<td>21r01a04l9<td>21r01a04l9<td>0<td>21r01a04l9<td>0<td>0<td>koushik_04l9<td>0<td>koushik_4l9<td>964<td>cmrit_21r01a04l9<td>25<td>6.26%<tr><td>633<td>21r01a7264<td><td>0<td>21r01a7264<td>0<td>9<td><td>0<td>rahul_1508<td>948<td>21r01a7264<td>10<td>6.25%<tr><td>634<td>21r01a04a6<td>21r01a04a6<td>0<td>21r01a04a6<td>0<td>5<td>narasimha_4a6<td>0<td>narasimha4a6<td>768<td>21r01a04a6<td>137<td>6.24%<tr><td>635<td>21r01a6604<td>cmrit_21r01a6604<td>0<td>ranjeeth_123<td>0<td>0<td>21r01a6604<td>0<td>ranjeeth_123<td>984<td>21r01a6604<td>10<td>6.24%<tr><td>636<td>22r05a0412<td>cmrit25_22r05a0412<td>0<td><td>0<td>0<td><td>0<td>mounika_90<td>953<td>22r05a0412<td>30<td>6.24%<tr><td>637<td>21r01a05b2<td>purella_abhilash<td>0<td>21r01a16da<td>0<td>0<td>21r01a05b2<td>0<td>cmr_5b2<td>997<td>21r01a05b2<td>0<td>6.22%<tr><td>638<td>21r01a6607<td><td>0<td>21r01a6607<td>0<td>0<td>21r01a6607<td>0<td>sri_21r01a6607<td>995<td>21r01a6607<td>0<td>6.21%<tr><td>639<td>22r05a7206<td>cmrit25_22r05a7206<td>0<td>22r05ak3up<td>0<td>0<td>22r05a7206<td>0<td>r05a7206<td>939<td>22r05a7206<td>35<td>6.2%<tr><td>640<td>21r01a05b9<td><td>0<td>21r01abng1<td>0<td>0<td>21r01a05b9<td>0<td>kiran5b9<td>961<td>21r01a05b9<td>20<td>6.19%<tr><td>641<td>21r01a6746<td>cmrit25_21r01a6746<td>0<td>21r01a6746<td>0<td>4<td>21r01a6746<td>0<td>p21r01a6746<td>933<td>21r01a6746<td>24<td>6.16%<tr><td>642<td>21r01a0538<td><td>0<td>21r01araze<td>0<td>8<td><td>0<td>hansika33<td>906<td>21r01a0538<td>30<td>6.15%<tr><td>643<td>21r01a66e3<td><td>0<td>21r01az3lh<td>0<td>4<td>21r01a66e3<td>0<td>meghana_2309<td>851<td>21r01a66e3<td>75<td>6.14%<tr><td>644<td>21r01a67j4<td>cmrit2025_21r01a67j4<td>0<td>21r01a67j4<td>0<td>0<td>21r01a67j4<td>0<td>nanda_2403<td>727<td>21r01a67j4<td>164<td>6.11%<tr><td>645<td>21r01a6745<td>cmrit25_21r01a6745<td>0<td><td>0<td>0<td><td>0<td>sanjana81<td>977<td><td>0<td>6.1%<tr><td>646<td>21r01a04m9<td>cmrit25_21r01a04m9<td>0<td>21r01a7xgj<td>0<td>6<td>21r01a04m9_cmrit<td>0<td>glavanya<td>827<td>21r01a04m9<td>77<td>6.06%<tr><td>647<td>21r01a05g2<td>cmrit25_21r01ao5g2<td>0<td>21r01a05g2<td>0<td>15<td>sumith12<td>0<td>sumith12<td>866<td>21r01a05g2<td>25<td>6.04%<tr><td>648<td>21r01a66c2<td><td>0<td>21r01a2kn7<td>0<td>0<td>shivani_47<td>0<td>shivani_47<td>936<td>shivani_47<td>15<td>5.99%<tr><td>649<td>21r01a67a9<td>raghava_04<td>0<td><td>0<td>0<td>raghava_04<td>0<td>raghava_04<td>959<td>21r01a67a9<td>0<td>5.99%<tr><td>650<td>21r01a7260<td><td>0<td><td>0<td>0<td><td>0<td>telgadam_rahul<td>955<td><td>0<td>5.96%<tr><td>651<td>21r01a7361<td><td>0<td>21r01aq0so<td>0<td>6<td>turpatipranit<td>0<td>p21r01a7361<td>779<td>21r01a7361<td>95<td>5.93%<tr><td>652<td>21r01a6708<td><td>0<td><td>0<td>0<td><td>0<td>srinika_08<td>950<td><td>0<td>5.93%<tr><td>653<td>21r01a0479<td><td>0<td><td>0<td>0<td>cmr_21r01a0479<td>0<td>cmr_21r01a0479<td>945<td>cmr_21r01a0479<td>0<td>5.9%<tr><td>654<td>21r01a6705<td>banothulaxmipathibalaji<td>0<td>balaji<td>0<td>0<td><td>0<td>balaji_54<td>880<td>21r01a7205<td>42<td>5.9%<tr><td>655<td>21r01a05q0<td>s_5q0<td>0<td>21r01a05q0<td>0<td>0<td>21r01a05q0<td>0<td>sai5q0<td>942<td>21r01a05q0<td>0<td>5.88%<tr><td>656<td>21r01a05f7<td><td>0<td>kaushik5f7<td>0<td>0<td>kaushik5f7<td>0<td>kaushik5f7<td>937<td>kaushik5f7<td>0<td>5.85%<tr><td>657<td>21r01a7218<td><td>0<td>srisrivastav863<td>0<td>4<td>srivastav_4327<td>0<td>cmr_21r01a7218<td>878<td>21r01a7218_cmr<td>27<td>5.85%<tr><td>658<td>21r01a6789<td>cmrit_21r01a6789<td>0<td>21r01atc3f<td>0<td>0<td>21r01a6789<td>0<td>vijay_6789<td>935<td><td>0<td>5.84%<tr><td>659<td>21r01a66f8<td>cmrit25_21r01a66f8<td>0<td>21r01az5i6<td>0<td>0<td>21r01a66f8<td>0<td>keerthi24h<td>776<td>21r01a66f8<td>98<td>5.79%<tr><td>660<td>21r01a6663<td><td>0<td>rakeshvooradi<td>0<td>1<td>rakesh4100<td>0<td>rakesh4100<td>922<td>21r01a6663<td>0<td>5.78%<tr><td>661<td>21r01a04m6<td>nithin4545<td>0<td>yadavnitqd2d<td>0<td>0<td>nithin4545<td>0<td>nithin4545<td>925<td>gollanithin<td>0<td>5.77%<tr><td>662<td>21r01a05l1<td><td>0<td>21r01a05l1cmrit<td>0<td>0<td>21r01a05l1cmrit<td>0<td>selveenagrace0<td>894<td>21r01a05l1cmrit<td>15<td>5.72%<tr><td>663<td>21r01a7227<td><td>0<td><td>0<td>0<td><td>0<td>cmr_21r01a7227<td>911<td>prashanthkumar<td>0<td>5.69%<tr><td>664<td>21r01a67e8<td>21r01a67e8<td>0<td>21r01a67e8<td>0<td>9<td>21r01a67e8<td>0<td>joseph1820<td>628<td>21r01a67e8<td>159<td>5.68%<tr><td>665<td>21r01a04r7<td><td>0<td>21r01ah779<td>0<td>0<td>cmrit_21r01a04r7<td>0<td>shiva4r7<td>864<td>21r01a04r7<td>30<td>5.68%<tr><td>666<td>21r01a04d6<td><td>0<td><td>0<td>0<td><td>0<td>sushmitha2k23<td>817<td>21r01a04d6<td>57<td>5.65%<tr><td>667<td>21r01a0517<td><td>0<td>21r01aawgu<td>0<td>13<td><td>0<td>maheshdasari<td>826<td>21r01a0517<td>15<td>5.64%<tr><td>668<td>21r01a6768<td>21r01a6768<td>0<td>21r01a5k5x<td>0<td>0<td>shruthi_40<td>0<td>ballishruthi4<td>834<td>21r01a6768<td>40<td>5.59%<tr><td>669<td>21r01a0522<td><td>0<td><td>0<td>0<td><td>0<td>solomonsolo<td>894<td><td>0<td>5.58%<tr><td>670<td>21r01a05k6<td><td>0<td>21r01a05k6<td>0<td>1<td>21r01a05k6<td>0<td>cmr_21r01a05k6<td>888<td>21r01a05k6<td>0<td>5.57%<tr><td>671<td>21r01a67a1<td><td>0<td>21r01arlco<td>0<td>0<td>21r01a67a1<td>0<td>nikhi05<td>875<td>21r01a67a1<td>10<td>5.56%<tr><td>672<td>21r01a0412<td><td>0<td><td>0<td>0<td>21r01a0412<td>0<td>prashanth412<td>890<td>21r01a0412<td>0<td>5.56%<tr><td>673<td>21r01a04g1<td><td>0<td>21r01a04g1<td>0<td>0<td>21r01a04g1<td>0<td>k21r01a04g1<td>816<td>21r01a04g1<td>45<td>5.53%<tr><td>674<td>21r01a7261<td>cmrit25_21r01a7261<td>0<td>21r01a7261<td>0<td>0<td>21r01a7261<td>0<td>cmr21r01a7261<td>843<td>21r01a7261<td>20<td>5.45%<tr><td>675<td>21r01a05r0<td><td>0<td><td>0<td>0<td>21r01a05r0<td>0<td>cmr_21r01a05r0<td>863<td><td>0<td>5.39%<tr><td>676<td>21r01a04p8<td><td>0<td>21r01aiyjw<td>0<td>0<td>21r01a04p8<td>0<td>nethimeghana<td>780<td>21r01a04p8<td>52<td>5.37%<tr><td>677<td>21r01a0418<td><td>0<td>jampuladinesh<td>0<td>0<td>jampuladinesh<td>0<td>dinesh_418<td>744<td>21r01a0418<td>70<td>5.32%<tr><td>678<td>21r01a6721<td><td>0<td><td>0<td>0<td><td>0<td>cmr_21r01a6721<td>851<td>gampaadithya<td>0<td>5.31%<tr><td>679<td>21r01a7237<td><td>0<td><td>0<td>0<td><td>0<td>arunreddy26<td>830<td>21r01a7237<td>5<td>5.23%<tr><td>680<td>21r01a66j7<td>cmrit25_21r01a66j7<td>0<td>21r01ab7js<td>0<td>0<td>21r01a66j7<td>0<td>irfanshaik24<td>814<td>21r01a66j7<td>15<td>5.23%<tr><td>681<td>21r01a7255<td>21r01a7255<td>0<td><td>0<td>0<td><td>0<td>sai_21r01a7255<td>794<td>21r01a7255<td>25<td>5.2%<tr><td>682<td>21r01a66h2<td><td>0<td>21r01a66h2<td>0<td>5<td>21r01a66h2<td>0<td>cmr_21r01a66h2<td>808<td>21r01a66h2<td>0<td>5.17%<tr><td>683<td>21r01a7202<td><td>0<td>abrar_waseem10<td>0<td>0<td>abrar_waseem10<td>0<td>abrarwaseem10<td>827<td>abrar_waseem10<td>0<td>5.16%<tr><td>684<td>21r01a6762<td><td>0<td>21r01a6762<td>0<td>0<td><td>0<td>s21r01a6762<td>804<td>21r01a6762<td>10<td>5.11%<tr><td>685<td>21r01a7245<td>cmrit25_21r01a7245<td>0<td>nithisha7245<td>0<td>0<td>nithisha45<td>0<td>nithisha_45<td>720<td>21r01a7245<td>60<td>5.07%<tr><td>686<td>21r01a66a4<td>cmrit25_21r01a66a4<td>0<td>21r01a0pqr<td>0<td>4<td>sai_pratheeka_<td>0<td>pratheekaa4<td>681<td>21r01a66a4<td>72<td>5.05%<tr><td>687<td>21r01a0530<td>21r01a0530<td>0<td>21r01anoiv<td>0<td>0<td>21r01a0530<td>0<td>gnanavardhan<td>784<td>21r01a0530<td>5<td>4.94%<tr><td>688<td>21r01a67b3<td><td>0<td>21r01a67b3<td>0<td>0<td>21r01a67b3<td>0<td>cmr_21r01a67b3<td>741<td>21r01a67b3<td>25<td>4.87%<tr><td>689<td>21r01a6645<td><td>0<td><td>0<td>0<td><td>0<td>cmr21r01a6645<td>772<td><td>0<td>4.82%<tr><td>690<td>21r01a7346<td>kittu7346<td>0<td>kittu7346<td>0<td>0<td><td>0<td>kittu7346<td>771<td>kittu7346<td>0<td>4.81%<tr><td>691<td>21r01a7244<td>cmrit-21r01a7244<td>0<td><td>0<td>0<td><td>0<td>priyanka_12_03<td>700<td>21r01a7244<td>40<td>4.75%<tr><td>692<td>21r01a66b2<td><td>0<td><td>0<td>0<td><td>0<td>xenon0096<td>756<td><td>0<td>4.72%<tr><td>693<td>21r01a0568<td><td>0<td>21r01amhbr<td>0<td>0<td>21r01a0568<td>0<td>deekshitha777<td>746<td>21r01a0568deekshitha<td>0<td>4.66%<tr><td>694<td>21r01a05n2<td>cmrit25-21r01a05n2<td>0<td>21r01a05n2<td>0<td>0<td>cmr_21r01a05n2<td>0<td>yashwanth5n2<td>719<td>21r01a05n2<td>5<td>4.54%<tr><td>695<td>21r01a6785<td>21r01a6785<td>0<td><td>0<td>0<td>21r01a6785<td>0<td>m21r01a6785<td>712<td>21r01a6785<td>0<td>4.44%<tr><td>696<td>21r01a04q6<td>cmrit25_21r01a04q6<td>0<td><td>0<td>0<td>rishitha_27<td>0<td>rishitha_27<td>633<td>21r01a04q6<td>30<td>4.24%<tr><td>697<td>21r01a05b4<td>cmrit25_21r01a05b4<td>0<td><td>0<td>0<td><td>0<td>dheeraj_mithra<td>671<td>21r01a05b4<td>0<td>4.19%<tr><td>698<td>21r01a04q2<td>21r01a04q2<td>0<td>21r01a04q2<td>0<td>0<td>s_21r01a04q2<td>0<td>s_21r01a04q2<td>670<td><td>0<td>4.18%<tr><td>699<td>21r01a04f0<td>cmrit25_21r01a04f0<td>0<td>21r01a04f0<td>0<td>0<td>pradeepthi1207<td>0<td>pradeepthi1207<td>612<td>21r01a04f0<td>30<td>4.11%<tr><td>700<td>21r01a05q1<td>21r01a05q1<td>0<td>21r01a05q1<td>0<td>0<td>21r01a05q1<td>0<td>manish5q1<td>657<td>21r01a05q1<td>0<td>4.1%<tr><td>701<td>21r01a05d5<td><td>0<td><td>0<td>0<td>21r01a05d5<td>0<td>keerthana1017<td>631<td>21r01a05d5<td>5<td>3.99%<tr><td>702<td>21r01a66c0<td><td>0<td>sushmitharekha<td>0<td>0<td>rekhasushmitha<td>0<td>sushmitharekha<td>633<td>sushmitharekha<td>0<td>3.95%<tr><td>703<td>21r01a05n1<td><td>0<td><td>0<td>0<td>rahul05n1<td>0<td>rahul05n1<td>626<td>rahul05n1<td>0<td>3.91%<tr><td>704<td>22r05a6714<td>22r05a6714<td>0<td><td>0<td>0<td><td>0<td>aravindpuli<td>625<td><td>0<td>3.9%<tr><td>705<td>21r01a04r9<td>cmrit25_21r01a04r9<td>0<td>21r01a04r9<td>0<td>0<td>21r01a04r9<td>0<td>p21r01a04r9<td>502<td>21r01a04r9<td>72<td>3.83%<tr><td>706<td>21r01a6616<td><td>0<td>21r01ackt3<td>0<td>2<td>21r01a6616<td>0<td>★saiteja630<td>0<td>21r01a6616<td>258<td>2.53%<tr><td>707<td>21r01a04q4<td>cmrit25_21r01a04q4<td>0<td>ponnasri10kn<td>0<td>20<td>lc21r01a04q4<td>0<td>s21r01a04q4<td>0<td>21r01a04q4<td>77<td>1.26%<tr><td>708<td>22r05a0513<td><td>0<td>22r05a0513<td>0<td>19<td>22r05a0513<td>0<td>saichandra513<td>0<td>22r05a0513<td>67<td>1.14%<tr><td>709<td>21r01a0454<td>sanjay<td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a0454<td>114<td>1.1%<tr><td>710<td>21r01a05k0<td>21r01a05k0<td>0<td>21r01a05k0<td>20<td>0<td>cmr_21r01a05k0<td>0<td>cmr_21r01a05k0<td>0<td>21r01a05k0<td>0<td>1.09%<tr><td>711<td>21r01a04e0<td><td>0<td>21r01a04e0<td>0<td>0<td>pavithra<td>0<td>21r01a04e0<td>0<td>21r01a04e0<td>104<td>1%<tr><td>712<td>21r01a05g8<td>21r01a05g8<td>0<td>21r01a05g8<td>0<td>30<td><td>0<td>cmr_21r01a05g8<td>0<td>21r01a05g8<td>18<td>0.96%<tr><td>713<td>21r01a6679<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a6679<td>95<td>0.91%<tr><td>714<td>21r01a66k0<td><td>0<td><td>0<td>0<td><td>0<td>yamini_1101<td>0<td>21r01a66k0<td>95<td>0.91%<tr><td>715<td>21r01a0488<td>21r01a0488<td>0<td>21r01a0488<td>0<td>0<td>21r01a0488<td>0<td>21r01a0488<td>0<td>21r01a0488<td>95<td>0.91%<tr><td>716<td>22r05a7305<td>22r05a7305<td>0<td>22r05a7305<td>0<td>0<td>22r05a7305<td>0<td>22r05a7305<td>0<td>22r05a7305<td>90<td>0.86%<tr><td>717<td>21r01a04b8<td><td>0<td>21r01a04b8<td>10<td>0<td>21r01a04b8<td>0<td>21r01a04b8<td>0<td>21r01a04b8<td>25<td>0.79%<tr><td>718<td>21r01a0452<td>cmrit25_21r01a0452<td>0<td>21r01a0452<td>0<td>0<td>21r01a0452<td>0<td>cmr_21r01a0452<td>0<td>21r01a0452<td>78<td>0.75%<tr><td>719<td>21r01a66d2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a66d2<td>75<td>0.72%<tr><td>720<td>21r01a04d1<td><td>0<td><td>0<td>0<td>rasagna_123<td>0<td>21r01a04d1<td>0<td>21r01a04d1<td>75<td>0.72%<tr><td>721<td>21r01a66k4<td><td>0<td>21r01a66k4<td>0<td>0<td><td>0<td>srija_66<td>0<td>21r01a66k4<td>75<td>0.72%<tr><td>722<td>21r01a7351<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a7351<td>74<td>0.71%<tr><td>723<td>21r01a04a7<td>saikumarreddy21r01a04a7<td>0<td>saikumarreddy<td>0<td>0<td>pvsaikumarreddy<td>0<td>pvsaikumarreddy<td>0<td>21r01a04a7<td>73<td>0.7%<tr><td>724<td>21r01a67h3<td><td>0<td>21r01a67h3<td>10<td>0<td>21r01a67h3<td>0<td><td>0<td>21r01a67h3<td>15<td>0.69%<tr><td>725<td>21r01a7206<td>21r01a7206<td>0<td>21r01a7206<td>0<td>0<td>21r01a7206<td>0<td>p21r01a7206<td>0<td>21r01a7206<td>71<td>0.68%<tr><td>726<td>21r01a66h7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a66h7<td>70<td>0.67%<tr><td>727<td>21r01a04h8<td>cmrit25_21r01a04h8<td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a04h8<td>67<td>0.64%<tr><td>728<td>21r01a04k8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a04k8<td>67<td>0.64%<tr><td>729<td>21r01a04g9<td>cmrit2025_21r01a04g9<td>0<td>21r01ah3iu<td>0<td>0<td>21r01a04g9<td>0<td>cmr_21r01a04g9<td>0<td>21r01a04g9<td>65<td>0.62%<tr><td>730<td>22r05a0422<td>cmrit25_22ro5a0422<td>0<td><td>0<td>0<td><td>0<td><td>0<td>22r05a0422<td>65<td>0.62%<tr><td>731<td>21r01a0445<td><td>0<td><td>0<td>0<td><td>0<td>thribhuvan_123<td>0<td>21r01a0445<td>65<td>0.62%<tr><td>732<td>21r01a05d1<td>21r01a05d1cmrit25<td>0<td>21r01a05d1<td>10<td>2<td>21r01a05d1<td>0<td>21r01a05d1<td>0<td>21r01a05d1<td>0<td>0.6%<tr><td>733<td>21r01a04p5<td><td>0<td><td>0<td>0<td><td>0<td>d21r01a04p5<td>0<td>21r01a04p5<td>62<td>0.6%<tr><td>734<td>21r01a04r0<td>21r01a04r0<td>0<td>21r01a04r0<td>0<td>0<td>cmrit4r0<td>0<td>cmrit4r0<td>0<td>21r01a04r0<td>62<td>0.6%<tr><td>735<td>21r01a0409<td>21r01a0409<td>0<td><td>0<td>0<td><td>0<td>s798976804<td>0<td>21r01a0409<td>60<td>0.58%<tr><td>736<td>21r01a0413<td>cmrit25_21r01a0413<td>0<td>21r01a0413<td>0<td>0<td>anusha<td>0<td>21r01a0413<td>0<td>21r01a0413<td>60<td>0.58%<tr><td>737<td>21r01a04n4<td>cmrit_21r01a04n4<td>0<td>21r01a04n4<td>0<td>0<td>21r01a04n4<td>0<td>pavanjukuntla<td>0<td>21r01a04n4<td>60<td>0.58%<tr><td>738<td>22r05a0423<td>cmrit25_22r05a0423<td>0<td>22r05a0423<td>0<td>4<td>22r05a0423<td>0<td><td>0<td>22r05a0423<td>49<td>0.58%<tr><td>739<td>21r01a67j2<td>21r01a67j2<td>0<td>21r01aud18<td>10<td>0<td><td>0<td>anirudh27<td>0<td><td>0<td>0.55%<tr><td>740<td>21r01a0501<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a0501<td>55<td>0.53%<tr><td>741<td>21r01a04m7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a04m7<td>55<td>0.53%<tr><td>742<td>21r01a04p7<td>cmrit25_21r01a04p7<td>0<td><td>0<td>0<td>21r01a04p7<td>0<td>n21r01a04p7<td>0<td>21r01a04p7<td>55<td>0.53%<tr><td>743<td>21r01a66d0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a66d0<td>55<td>0.53%<tr><td>744<td>21r01a04n9<td>cmrit25_21r01a04n9<td>0<td><td>0<td>0<td>21r01a04n9<td>0<td>21r01a04n9<td>0<td>21r01a04n9<td>51<td>0.49%<tr><td>745<td>21r01a66j5<td><td>0<td>21r01ah8qh<td>0<td>0<td>satla_varshini<td>0<td>varshini_123<td>0<td>21r01a66j5<td>50<td>0.48%<tr><td>746<td>21r01a0442<td>21r01a0442<td>0<td>21r01a0442<td>0<td>0<td>21r01a0442<td>0<td>cmr_21r01a0442<td>0<td>21r01a0442<td>50<td>0.48%<tr><td>747<td>21r01a67h2<td><td>0<td>21r01a67h2<td>0<td>0<td>21r01a67h2<td>0<td>cmr_21r01a67h2<td>0<td>21r01a67h2<td>47<td>0.45%<tr><td>748<td>21r01a0463<td><td>0<td><td>0<td>0<td>21r01a0463<td>0<td>cmr21r01a0463<td>0<td>21r01a0463<td>47<td>0.45%<tr><td>749<td>21r01a0470<td><td>0<td>21r01a0470<td>0<td>0<td><td>0<td>21r01a0470<td>0<td>21r01a0470<td>47<td>0.45%<tr><td>750<td>22r05a0426<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>22r05a0426<td>47<td>0.45%<tr><td>751<td>21r01a04n3<td><td>0<td><td>0<td>0<td>jaligam<td>0<td><td>0<td>21r01a04n3<td>47<td>0.45%<tr><td>752<td>21r01a0443<td>udaykiran<td>0<td>21r01a0443<td>0<td>0<td>udaykiran<td>0<td>21r01a0443<td>0<td>21r01a0443<td>46<td>0.44%<tr><td>753<td>21r01a04p9<td>cmrit25_21r01a04p9<td>0<td>21r01a04p9<td>0<td>0<td>21r01a04p9<td>0<td>cmrit25_21r01a04p9<td>0<td>21r01a04p9<td>45<td>0.43%<tr><td>754<td>21r01a04c0<td><td>0<td>21r01a04c0<td>0<td>0<td>21r01a04c0<td>0<td>21r01a04c0<td>0<td>21r01a04c0<td>45<td>0.43%<tr><td>755<td>21r01a7253<td>cmrit25_21r01a7253<td>0<td>gouthami<td>0<td>7<td>21r01a7253<td>0<td>gouthami<td>0<td>21r01a7253<td>25<td>0.42%<tr><td>756<td>22r05a0525<td><td>0<td>22r05a0525<td>0<td>16<td>22r05a0525<td>0<td>cmr22r05a0525<td>0<td><td>0<td>0.42%<tr><td>757<td>22r05a6705<td><td>0<td>dharavathshekar<td>0<td>16<td>dharavathshekar<td>0<td>dharavathshekar<td>0<td><td>0<td>0.42%<tr><td>758<td>21r01a0438<td>21r01a0438<td>0<td>21r01a0438<td>0<td>0<td>21r01a0438<td>0<td>21r01a0438<td>0<td>21r01a0438<td>42<td>0.4%<tr><td>759<td>21r01a05g1<td>cmrit25-21r01a05g1<td>0<td>21r01a05g1<td>0<td>7<td>geetha75<td>0<td>21r01a05g1<td>0<td>21r01a05g1<td>20<td>0.38%<tr><td>760<td>21r01a0579<td><td>0<td>21r01azt73<td>0<td>14<td>21r01a0579<td>0<td>akshith579<td>0<td>darlaakshith21r01a0579<td>0<td>0.37%<tr><td>761<td>21r01a04r8<td>cmrit_21r01a04r8<td>0<td><td>0<td>0<td>likitha_r8<td>0<td>likitha_r8<td>0<td>21r01a04r8<td>37<td>0.36%<tr><td>762<td>21r01a0465<td>cmrit25_21r01a0465<td>0<td>21r01a0465<td>0<td>0<td>21r01a0465<td>0<td>21r01a0465<td>0<td>21r01a0465<td>35<td>0.34%<tr><td>763<td>21r01a04n6<td>guru98<td>0<td>21r01a04n6<td>0<td>0<td>21r01a04n6-cmrit25<td>0<td>guru98<td>0<td>21r01a04n6<td>35<td>0.34%<tr><td>764<td>21r01a04r2<td><td>0<td>21r01a04r2<td>0<td>0<td>21r01a04r2<td>0<td>21r01a04r2<td>0<td>21r01a04r2<td>35<td>0.34%<tr><td>765<td>21r01a04a3<td><td>0<td>nithin<td>0<td>0<td>nithin<td>0<td>nithin<td>0<td>21r01a04a3<td>30<td>0.29%<tr><td>766<td>21r01a66h4<td><td>0<td><td>0<td>0<td>shivateja_54<td>0<td>shiva54<td>0<td>21r01a66h4<td>30<td>0.29%<tr><td>767<td>21r01a0503<td><td>0<td>21r01a3qwb<td>0<td>0<td>21r01a0503<td>0<td>hrithik55<td>0<td>21r01a0503<td>30<td>0.29%<tr><td>768<td>21r01a7325<td><td>0<td><td>0<td>0<td>21r01a7325<td>0<td>cmr_21r01a7325<td>0<td>21r01a7325<td>30<td>0.29%<tr><td>769<td>21r01a05n6<td><td>0<td>21r01a05n6<td>0<td>2<td>21r01a05n6<td>0<td>cmr_21r01a05n6<td>0<td>21r01a05n6<td>20<td>0.24%<tr><td>770<td>21r01a04q5<td><td>0<td>21r01aciqg<td>0<td>0<td>21r01a04q5<td>0<td>c21r01a04q5<td>0<td>21r01a04q5<td>25<td>0.24%<tr><td>771<td>21r01a0586<td>21r01a0586_shiva<td>0<td>21r01a0586<td>0<td>0<td>21r01a0586<td>0<td>21r01a0586<td>0<td>21r01a0586<td>24<td>0.23%<tr><td>772<td>21r01a05q7<td><td>0<td>21r01au8ud<td>0<td>3<td>21r01a05q7<td>0<td>ttanvi<td>0<td>21r01a05q7<td>15<td>0.22%<tr><td>773<td>21r01a0584<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a0584<td>20<td>0.19%<tr><td>774<td>21r01a66h3<td><td>0<td>21r01a0x4f<td>0<td>0<td>cmrit_25_21r01a66h3<td>0<td>vyshnavi_1705<td>0<td>21r01a66h3<td>20<td>0.19%<tr><td>775<td>21r01a0431<td>21r01a0431<td>0<td>narendharreddy431<td>0<td>0<td>narendharreddy431<td>0<td>narendharreddy431<td>0<td>21r01a0431<td>20<td>0.19%<tr><td>776<td>21r01a0507<td>sairajballa<td>0<td>sairajb512y<td>0<td>0<td>21r01a0507<td>0<td>sairaj11<td>0<td>21r01a0507<td>15<td>0.14%<tr><td>777<td>21r01a67g4<td>21r01a67g4<td>0<td><td>0<td>0<td><td>0<td>rasagna_69<td>0<td>21r01a67g4<td>15<td>0.14%<tr><td>778<td>21r01a05l2<td>cmrit25_21r01a05l2<td>0<td>21r01a2nbs<td>0<td>0<td>21r01a05l2<td>0<td>r01a05l2<td>0<td>21r01a05l2<td>15<td>0.14%<tr><td>779<td>22r05a6615<td><td>0<td>22r05ah2t0<td>0<td>0<td><td>0<td>mounith_reddy<td>0<td>22r05a6615<td>15<td>0.14%<tr><td>780<td>21r01a0515<td>cmrit2025_21r01a0515<td>0<td>21r01a7db5<td>0<td>0<td>ch.arunkumar<td>0<td>ch.arunkumar<td>0<td>21r01a0515<td>15<td>0.14%<tr><td>781<td>21r01a0447<td>21r01a0447<td>0<td>ragula<td>0<td>0<td>ajay447<td>0<td>21r01a0447<td>0<td>21r01a0447<td>15<td>0.14%<tr><td>782<td>21r01a04q9<td>21r01a04q9<td>0<td><td>0<td>0<td><td>0<td><td>0<td>cmrit_21r01a04q9<td>15<td>0.14%<tr><td>783<td>21r01a04m0<td><td>0<td>21r01a04m0<td>0<td>0<td>21r01a04m0<td>0<td>21r01a04m0<td>0<td>21r01a04m0<td>14<td>0.13%<tr><td>784<td>21r01a6624<td><td>0<td>21r01a6624<td>0<td>1<td>21r01a6624<td>0<td><td>0<td>21r01a6624<td>10<td>0.12%<tr><td>785<td>21r01a05c7<td><td>0<td>v_siddharth38<td>0<td>1<td><td>0<td><td>0<td>21r01a05c7<td>10<td>0.12%<tr><td>786<td>21r01a04l1<td><td>0<td><td>0<td>0<td>rahul04l1<td>0<td>21r01a04l1<td>0<td>21r01a04l1<td>12<td>0.12%<tr><td>787<td>21r01a6790<td>21r01a6790<td>0<td>21r01a6790<td>0<td>0<td>tagore<td>0<td>21r01a6790<td>0<td>21r01a6790<td>10<td>0.1%<tr><td>788<td>21r01a04l0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a04l0<td>10<td>0.1%<tr><td>789<td>21r01a05n4<td>21r01a05n4<td>0<td>21r01a05n4<td>0<td>3<td>bhargavi<td>0<td>bhargavi<td>0<td>bhargavi<td>0<td>0.08%<tr><td>790<td>21r01a04r1<td><td>0<td>21r01a04r1<td>0<td>0<td>21r01a04r1<td>0<td>21r01a04r1<td>0<td>21r01a04r1<td>7<td>0.07%<tr><td>791<td>21r01a0402<td><td>0<td><td>0<td>0<td>cmrit25_21r01a0402<td>0<td><td>0<td>21r01a0402<td>7<td>0.07%<tr><td>792<td>21r01a0450<td><td>0<td>21r01a0450<td>0<td>0<td>21r01a0450<td>0<td>21r01a0450<td>0<td>21r01a0450<td>5<td>0.05%<tr><td>793<td>21r01a6603<td>vamshi6603<td>0<td>21r01a6603<td>0<td>0<td>vamshi<td>0<td>vamshi6603<td>0<td>21r01a6603<td>5<td>0.05%<tr><td>794<td>21r01a04b0<td>cmrit25_21r01a04b0<td>0<td>21r01aqt3k<td>0<td>0<td>21r01a04b0<td>0<td>kranthi_2612<td>0<td>21r01a04b0<td>5<td>0.05%<tr><td>795<td>21r01a04c4<td><td>0<td>21r01a04c4<td>0<td>0<td>21r01a04c4<td>0<td>cmr_21r01a04c4<td>0<td>21r01a04c4<td>5<td>0.05%<tr><td>796<td>22r05a6607<td><td>0<td><td>0<td>0<td>jashwanth03<td>0<td>jashwanth_03<td>0<td>22r05a6607<td>5<td>0.05%<tr><td>797<td>21r01a04l5<td><td>0<td>21r01a04l5<td>0<td>0<td><td>0<td>chandan<td>0<td>21r01a04l5<td>5<td>0.05%<tr><td>798<td>21r01a05f6<td><td>0<td>21r01a05f6<td>0<td>0<td>21r01a05f6<td>0<td>cmr_21r01a05f6<td>0<td>21r01a05f6<td>5<td>0.05%<tr><td>799<td>21r01a0468<td><td>0<td>21r01a0468<td>0<td>0<td>chanti<td>0<td>21r01a0468<td>0<td>21r01a0468<td>5<td>0.05%<tr><td>800<td>21r01a66d3<td><td>0<td>21r01a62wc<td>0<td>1<td><td>0<td>cmr_21r01a66d3<td>0<td>21r01a66d3<td>0<td>0.03%<tr><td>801<td>21r01a7229<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>802<td>21r01a7235<td>cmrit25_21r01a7235<td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>803<td>21r01a7242<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>804<td>21r01a7248<td><td>0<td><td>0<td>0<td><td>0<td>cmr21r01a7248<td>0<td><td>0<td>0%<tr><td>805<td>21r01a0535<td>21r01a0535<td>0<td>srishanth<td>0<td>0<td>srishanth<td>0<td>srishanth_18<td>0<td><td>0<td>0%<tr><td>806<td>21r01a0571<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>807<td>21r01a0580<td>cmrit25_21r01a0580<td>0<td>21r01ahaqd<td>0<td>0<td>21r01a0580<td>0<td>santhosh580<td>0<td>21r01a0580<td>0<td>0%<tr><td>808<td>21r01a0588<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>809<td>21r01a0590<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>manikantacharan<td>0<td>0%<tr><td>810<td>21r01a0598<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>priyanshraj15<td>0<td>0%<tr><td>811<td>21r01a05a0<td><td>0<td>21r01a05a0shadab01<td>0<td>0<td>21r01a05a0<td>0<td>21r01a05a0shadab01<td>0<td>21r01a05a0<td>0<td>0%<tr><td>812<td>21r01a05c4<td>cmrit25_21r01a05c4<td>0<td>ribka_0230<td>0<td>0<td>ribka_0230<td>0<td>ribka_0230<td>0<td>ribka_0230<td>0<td>0%<tr><td>813<td>21r01a05e4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>814<td>21r01a05h9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>815<td>21r01a05m3<td><td>0<td>21r01a4b5o<td>0<td>0<td>21r01a05m3<td>0<td>gowthami_2003<td>0<td>21r01a05m3<td>0<td>0%<tr><td>816<td>21r01a05p1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>pavan<td>0<td>0%<tr><td>817<td>21r01a05q8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>818<td>21r01a05q9<td>21r01a05q9<td>0<td>cmrit25_21r01a05q9<td>0<td>0<td><td>0<td>cmrit25_21r01a05q9<td>0<td>21r01a05q9<td>0<td>0%<tr><td>819<td>22r05a0504<td><td>0<td>22r05a0504<td>0<td>0<td><td>0<td>22r05a0504<td>0<td>22r05a0504<td>0<td>0%<tr><td>820<td>21r01a6608<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>821<td>21r01a6621<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>822<td>21r01a6626<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>823<td>21r01a6653<td><td>0<td>21r01a6653<td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>824<td>21r01a6658<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>825<td>21r01a6661<td><td>0<td>banni2261<td>0<td>0<td>banni2261<td>0<td>banni2261<td>0<td>banni2261<td>0<td>0%<tr><td>826<td>21r01a6668<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>827<td>21r01a6674<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>828<td>21r01a6678<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>829<td>21r01a6691<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>830<td>21r01a6697<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>831<td>21r01a6698<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>832<td>21r01a66b4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>833<td>21r01a66c1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>834<td>21r01a66c8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>835<td>21r01a66d1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>836<td>21r01a66e6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>837<td>21r01a66f0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>838<td>21r01a66f1<td><td>0<td>21r01a8ttj<td>0<td>0<td>21r01a66f1<td>0<td>r01a66f1<td>0<td><td>0<td>0%<tr><td>839<td>21r01a66f2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>840<td>21r01a66g2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>841<td>21r01a66g3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>842<td>21r01a66g5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>843<td>21r01a66g9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>844<td>21r01a66j1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>845<td>21r01a66j4<td><td>0<td>21r01aaq6n<td>0<td>0<td><td>0<td>t21r01a66j4<td>0<td><td>0<td>0%<tr><td>846<td>21r01a66j8<td>umesh<td>0<td>umesh_1021<td>0<td>0<td>21r01a66j8<td>0<td>umesh_1021<td>0<td>umesh_1021<td>0<td>0%<tr><td>847<td>21r01a66j9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>848<td>21r01a66k3<td><td>0<td>navya_0229<td>0<td>0<td><td>0<td>navya_0229<td>0<td>navya_0229<td>0<td>0%<tr><td>849<td>22r05a6609<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>850<td>22r05a6619<td>cmrit25_22r05a6619<td>0<td><td>0<td>0<td>22r05a6619<td>0<td><td>0<td>bhavika6619<td>0<td>0%<tr><td>851<td>22r05a6620<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>852<td>21r01a7302<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>853<td>21r01a7306<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>854<td>21r01a7308<td>saketh08<td>0<td>21r01asaz1<td>0<td>0<td>saketh08<td>0<td>saketh08<td>0<td>21r01a7308<td>0<td>0%<tr><td>855<td>21r01a7311<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>856<td>21r01a7318<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>857<td>21r01a7320<td><td>0<td>21r01a7320<td>0<td>0<td>21r01a7320<td>0<td>21r01a7320<td>0<td>21r01a7320<td>0<td>0%<tr><td>858<td>21r01a7327<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>859<td>21r01a7329<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>860<td>21r01a7332<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>861<td>21r01a7336<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>862<td>21r01a7340<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>jahnavi<td>0<td>0%<tr><td>863<td>21r01a7352<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>864<td>21r01a7354<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>865<td>21r01a7364<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>866<td>22r05a7307<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>867<td>21r01a6707<td>21r01a6707<td>0<td><td>0<td>0<td>vishn8868<td>0<td><td>0<td><td>0<td>0%<tr><td>868<td>21r01a6710<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>869<td>21r01a6716<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>870<td>21r01a6773<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>871<td>21r01a6777<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>872<td>21r01a6781<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>873<td>21r01a6783<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>874<td>21r01a6784<td>cmrit25_21r01a6784<td>0<td>21r01a6784<td>0<td>0<td>21r01a6784<td>0<td>21r01a6784<td>0<td>21r01a6784<td>0<td>0%<tr><td>875<td>21r01a6793<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>876<td>21r01a67a0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>877<td>21r01a67c5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>878<td>21r01a67c6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>879<td>21r01a67d9<td>rakeshreddy11<td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>880<td>21r01a67f5<td>cmrit25_21r01a67f5<td>0<td>cmrit25_21r01a67f5<td>0<td>0<td>cmrit25_21r01a67f5<td>0<td>cmrit25_21r01a67f5<td>0<td>cmrit25_21r01a67f5<td>0<td>0%<tr><td>881<td>21r01a67j8<td><td>0<td>21r01amz9e<td>0<td>0<td>21r01a67j8<td>0<td><td>0<td>telugugiridhar21r01a67j8<td>0<td>0%<tr><td>882<td>22r05a6703<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>883<td>22r05a6711<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>884<td>21r01a0405<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>885<td>21r01a0406<td><td>0<td><td>0<td>0<td>nandini<td>0<td>nandini<td>0<td>nandini<td>0<td>0%<tr><td>886<td>21r01a0423<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>887<td>21r01a0439<td><td>0<td><td>0<td>0<td>21r01a0439<td>0<td>nallurimanasa<td>0<td><td>0<td>0%<tr><td>888<td>21r01a0444<td><td>0<td>p.varsha<td>0<td>0<td>varsha<td>0<td>varsha<td>0<td>varsha<td>0<td>0%<tr><td>889<td>21r01a0467<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>890<td>21r01a0477<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>891<td>21r01a0481<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>892<td>21r01a0482<td><td>0<td>21r01a0482<td>0<td>0<td>21r01a0482<td>0<td><td>0<td>21r01a0482<td>0<td>0%<tr><td>893<td>21r01a04a2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>894<td>21r01a04a4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>895<td>21r01a04a5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>896<td>21r01a04a8<td><td>0<td>21r01a04a8<td>0<td>0<td>p.meghana<td>0<td>pettemumeghana<td>0<td>21r01a04a8<td>0<td>0%<tr><td>897<td>21r01a04c3<td>naveenthuppathi<td>0<td>t.naveen<td>0<td>0<td>t.naveen<td>0<td>t.naveen<td>0<td>t.naveen<td>0<td>0%<tr><td>898<td>21r01a04c6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>899<td>21r01a04c8<td><td>0<td>21r01a04c8<td>0<td>0<td><td>0<td>21r01a04c8<td>0<td>21r01a014c8<td>0<td>0%<tr><td>900<td>21r01a04d8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>901<td>21r01a04e1<td>4.00e+01<td>0<td><td>0<td>0<td><td>0<td><td>0<td>4.00e+01<td>0<td>0%<tr><td>902<td>21r01a04f1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>903<td>21r01a04f4<td><td>0<td>21r01a04f4<td>0<td>0<td><td>0<td><td>0<td>cmrit25_21r01a04f4<td>0<td>0%<tr><td>904<td>21r01a04f8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>905<td>21r01a04g0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>906<td>21r01a04l2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>907<td>21r01a04l7<td>21r01a04l7<td>0<td>21r01ae5om<td>0<td>0<td>21r01a04l7<td>0<td><td>0<td>naveen<td>0<td>0%<tr><td>908<td>21r01a04l8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>909<td>21r01a04m5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>910<td>21r01a04n2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>911<td>21r01a04q8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>912<td>22r05a0403<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>913<td>22r05a0413<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>914<td>22r05a0419<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>915<td>21r01a7208<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>916<td>21r01a7213<td><td>0<td>21r01abuuu<td>0<td>0<td>21r01a7213<td>0<td>cmrit25_21r01a7213<td>0<td>21r01a7213<td>0<td>0%<tr><td>917<td>21r01a7236<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>918<td>21r01a0529<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>919<td>21r01a05l8<td><td>0<td>eeshapingili<td>0<td>0<td>21r01a05l8<td>0<td>eeshapingili<td>0<td>pingilieesha<td>0<td>0%<tr><td>920<td>22r05a0506<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>siddu<td>0<td>0%<tr><td>921<td>22r05a0511<td>22r05a0511p<td>0<td>22r05a0511<td>0<td>0<td><td>0<td>22r05a0511<td>0<td>ganapathisandeep22r05a0511<td>0<td>0%<tr><td>922<td>21r01a6660<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>923<td>21r01a6671<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>924<td>21r01a66e8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>925<td>21r01a66k2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>926<td>22r05a6602<td><td>0<td>bhukya_sumam<td>0<td>0<td>suman@123<td>0<td><td>0<td>suman<td>0<td>0%<tr><td>927<td>21r01a7337<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>928<td>21r01a7349<td><td>0<td><td>0<td>0<td><td>0<td>harshitha_75<td>0<td><td>0<td>0%<tr><td>929<td>21r01a6709<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>930<td>21r01a6736<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>931<td>21r01a67k2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>932<td>21r01a0415<td><td>0<td>g.shivasai<td>0<td>0<td>g.shivasai<td>0<td>shivasai<td>0<td>g.shivasai<td>0<td>0%<tr><td>933<td>21r01a0451<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>934<td>21r01a0472<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>935<td>21r01a0499<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>936<td>22r05a0417<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>937<td>21r01a7204<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>938<td>22r05a7201<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>939<td>21r01a05a7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>940<td>21r01a05a9<td><td>0<td><td>0<td>0<td>21r01a05a9<td>0<td>varshith<td>0<td>varshithpandre16<td>0<td>0%<tr><td>941<td>21r01a05e8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>ashwitha_59<td>0<td>0%<tr><td>942<td>21r01a6662<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>943<td>21r01a6694<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>944<td>21r01a66b7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>945<td>21r01a66d8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>946<td>21r01a66e1<td><td>0<td><td>0<td>0<td>21r01a66e1<td>0<td>vardhan_29<td>0<td>vardhan_29<td>0<td>0%<tr><td>947<td>21r01a66e7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>948<td>21r01a66f3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>949<td>21r01a66f7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>950<td>22r05a6616<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>951<td>21r01a7303<td>21r01a7303<td>0<td><td>0<td>0<td>aletiruchitha<td>0<td><td>0<td><td>0<td>0%<tr><td>952<td>21r01a7338<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>953<td>21r01a6753<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>954<td>21r01a6792<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>955<td>21r01a67j9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>956<td>22r05a6709<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>957<td>22r05a6712<td><td>0<td><td>0<td>0<td>sukumar7796<td>0<td><td>0<td><td>0<td>0%<tr><td>958<td>21r01a0427<td><td>0<td>21r01azy8a<td>0<td>0<td>kpoojitha<td>0<td>r01a0427<td>0<td><td>0<td>0%<tr><td>959<td>21r01a04e4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>960<td>21r01a04j4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>961<td>21r01a04j9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>962<td>21r01a04k2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>963<td>21r01a04k6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>964<td>21r01a04p4<td>shivacharan27<td>0<td>21r01a04p4<td>0<td>0<td><td>0<td>cmr_21r01a04p4<td>0<td>21r01a04p4<td>0<td>0%<tr><td>965<td>21r01a7221<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>966<td>21r01a7230<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>967<td>21r01a7234<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>968<td>21r01a0576<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>969<td>21r01a05h5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>970<td>21r01a05r2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>971<td>21r01a6643<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>972<td>21r01a66b9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>973<td>21r01a66g8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>974<td>21r01a7323<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>975<td>21r01a7359<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>976<td>21r01a6723<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>977<td>21r01a6748<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>978<td>21r01a6779<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>979<td>22r05a6707<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>kumaraswamy<td>0<td>0%<tr><td>980<td>22r05a6708<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>981<td>21r01a0462<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>982<td>21r01a04e8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>983<td>21r01a04h0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>984<td>21r01a04h6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>985<td>21r01a04j3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>986<td>21r01a04j7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>987<td>21r01a04n5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>988<td>21r01a7211<td>cmrit25_21r01a7211<td>0<td><td>0<td>0<td>21r01a7211<td>0<td>21r01a7211deepak<td>0<td><td>0<td>0%<tr><td>989<td>21r01a7216<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>990<td>22r05a7205<td>cmrit25_22r05a7205<td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>991<td>21r01a0542<td><td>0<td><td>0<td>0<td><td>0<td>dharmesh14<td>0<td>dharmesh14<td>0<td>0%<tr><td>992<td>21r01a05b1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>993<td>21r01a05b5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>994<td>21r01a05e9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>995<td>21r01a05k4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>996<td>21r01a05p7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>997<td>21r01a6656<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>998<td>21r01a6659<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>999<td>21r01a6667<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1000<td>21r01a66g6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1001<td>22r05a6606<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1002<td>21r01a6729<td><td>0<td>jellasherry<td>0<td>0<td>jellasherry<td>0<td><td>0<td>jellasherry<td>0<td>0%<tr><td>1003<td>21r01a6747<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1004<td>21r01a67b0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1005<td>21r01a04c1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1006<td>21r01a04m4<td><td>0<td>kavyanjali<td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1007<td>21r01a04m8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1008<td>21r01a04q0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1009<td>21r01a7226<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1010<td>21r01a0505<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1011<td>21r01a05e7<td><td>0<td><td>0<td>0<td><td>0<td>dev21r01a05e7<td>0<td>devimrinal21r01a05e7<td>0<td>0%<tr><td>1012<td>21r01a05l7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1013<td>21r01a05q6<td>cmrit25_21r01a05q6<td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1014<td>22r05a0523<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1015<td>21r01a6684<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1016<td>21r01a66j6<td><td>0<td>21r01a66j6<td>0<td>0<td><td>0<td>rohan_setti<td>0<td>21r01a66j6<td>0<td>0%<tr><td>1017<td>21r01a7305<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1018<td>21r01a7331<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1019<td>21r01a7339<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1020<td>21r01a6754<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1021<td>21r01a67c3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1022<td>21r01a67c4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a67c4<td>0<td>0%<tr><td>1023<td>21r01a67c9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1024<td>21r01a67g7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1025<td>22r05a6710<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1026<td>21r01a04b6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1027<td>21r01a04b9<td>21r01a04b9_dilipkumar<td>0<td>21r01a04b9<td>0<td>0<td>21r01a04b9<td>0<td>dilipkumar_4b9<td>0<td>seggamdilipkumar_21r01a04b9<td>0<td>0%<tr><td>1028<td>21r01a04e5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1029<td>21r01a04j1<td>shadabshaik<td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1030<td>22r05a0424<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1031<td>21r01a0526<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1032<td>21r01a05h1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1033<td>21r01a05p2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1034<td>21r01a6628<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1035<td>21r01a66h9<td><td>0<td>dinesh_4675<td>0<td>0<td><td>0<td>dinesh_4675<td>0<td>dinesh_4675<td>0<td>0%<tr><td>1036<td>22r05a6605<td><td>0<td>nandini<td>0<td>0<td><td>0<td><td>0<td>nandini<td>0<td>0%<tr><td>1037<td>21r01a7314<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1038<td>21r01a6735<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1039<td>21r01a6749<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1040<td>21r01a0459<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a0459<td>0<td>0%<tr><td>1041<td>21r01a04c5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1042<td>21r01a04d4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1043<td>21r01a04e2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1044<td>21r01a04f5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1045<td>21r01a04g8<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1046<td>21r01a04n0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1047<td>21r01a04n7<td><td>0<td><td>0<td>0<td><td>0<td>nareshkn971<td>0<td><td>0<td>0%<tr><td>1048<td>21r01a7212<td><td>0<td>b.anil<td>0<td>0<td>b.anil<td>0<td>b.anil<td>0<td><td>0<td>0%<tr><td>1049<td>21r01a7217<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1050<td>21r01a05k2<td>tejaa89<td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a05k2<td>0<td>0%<tr><td>1051<td>21r01a6651<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1052<td>21r01a6695<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1053<td>21r01a66g7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1054<td>21r01a6771<td>cmrit25_21r01a6771<td>0<td>21r01a6771<td>0<td>0<td>21r01a6771p<td>0<td>r01a6771<td>0<td>21r01a6771<td>0<td>0%<tr><td>1055<td>21r01a04f2<td>jogannagariarunreddy<td>0<td>jogannagariarunreddy<td>0<td>0<td><td>0<td>jogannagariarunreddy<td>0<td>jogannagariarun<td>0<td>0%<tr><td>1056<td>21r01a04j2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1057<td>21r01a04k3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1058<td>21r01a05d0<td><td>0<td>akarthikreddy<td>0<td>0<td>alampallykarthikreddy<td>0<td>alampallykarthikreddy<td>0<td>karthik5d0<td>0<td>0%<tr><td>1059<td>21r01a05k9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1060<td>21r01a66f6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1061<td>21r01a7335<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1062<td>21r01a6726<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1063<td>21r01a6741<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1064<td>22r05a6718<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1065<td>21r01a0407<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1066<td>21r01a04g3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1067<td>21r01a04h3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1068<td>21r01a04j6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1069<td>21r01a04k5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1070<td>21r01a04l6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1071<td>21r01a04n8<td>udayyyyyy<td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1072<td>21r01a04p3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1073<td>21r01a6646<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1074<td>21r01a66d7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1075<td>21r01a7304<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1076<td>21r01a7324<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1077<td>21r01a6740<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1078<td>21r01a6744<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1079<td>21r01a67g5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1080<td>21r01a0476<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1081<td>21r01a04b4<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1082<td>21r01a7243<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1083<td>21r01a7254<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1084<td>21r01a0512<td><td>0<td><td>0<td>0<td>21r01a0512<td>0<td>vijaykumar512<td>0<td>vijaykumar<td>0<td>0%<tr><td>1085<td>21r01a0519<td><td>0<td><td>0<td>0<td><td>0<td>abhiram24<td>0<td><td>0<td>0%<tr><td>1086<td>21r01a05g7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1087<td>21r01a6681<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1088<td>21r01a6717<td>sandeep<td>0<td><td>0<td>0<td><td>0<td>sandeep<td>0<td>sandeep<td>0<td>0%<tr><td>1089<td>21r01a67e0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1090<td>21r01a0403<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1091<td>21r01a0414<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1092<td>21r01a0480<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1093<td>21r01a04b2<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1094<td>21r01a04q1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1095<td>21r01a0569<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1096<td>21r01a05l5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1097<td>21r01a05l9<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1098<td>21r01a05n0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1099<td>21r01a7312<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1100<td>21r01a7333<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1101<td>21r01a67c7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td>21r01a67c7<td>0<td>0%<tr><td>1102<td>21r01a67d7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1103<td>21r01a0436<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1104<td>21r01a0497<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1105<td>21r01a04g6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1106<td>21r01a04h7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1107<td>21r01a04k7<td><td>0<td>21r01a04k7<td>0<td>0<td>a21r01a04k7<td>0<td>a21r01a04k7<td>0<td>21ro1a04k7<td>0<td>0%<tr><td>1108<td>21r01a05e3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1109<td>21r01a05n3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1110<td>21r01a05p3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1111<td>21r01a0495<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1112<td>21r01a04d5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1113<td>21r01a04h5<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1114<td>21r01a6617<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1115<td>21r01a7358<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1116<td>21r01a0422<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1117<td>21r01a0471<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1118<td>21r01a0473<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1119<td>21r01a04g7<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1120<td>21r01a05q3<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1121<td>21r01a05r1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1122<td>21r01a67g6<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1123<td>21r01a0469<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1124<td>21r01a7341<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1125<td>21r01a6759<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1126<td>21r01a6767<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1127<td>21r01a0411<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1128<td>21r01a04h1<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1129<td>21r01a7310<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1130<td>21r01a67j0<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1131<td>21r01a6720<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%<tr><td>1132<td>21r01a7330<td><td>0<td><td>0<td>0<td><td>0<td><td>0<td><td>0<td>0%</tbody></table>
\ No newline at end of file
diff --git a/src/cmritleaderboard2025/CMRITLeaderboard2025.java b/src/cmritleaderboard2025/CMRITLeaderboard2025.java
deleted file mode 100644
index 2c49eff..0000000
--- a/src/cmritleaderboard2025/CMRITLeaderboard2025.java
+++ /dev/null
@@ -1,875 +0,0 @@
-// Built OVERNIGHT, yes again, by https://www.instagram.com/gabyah92 (Instagram)
-// Technical Trainer
-package cmritleaderboard2025;
-
-import java.io.*;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.net.HttpURLConnection; 
-import java.net.URI; 
-import java.net.URLConnection;
-import java.net.URLEncoder;
-import java.nio.charset.StandardCharsets;
-import java.text.DecimalFormat; 
-import java.util.ArrayList;
-import java.util.Collections; 
-import java.util.HashMap; 
-import java.util.Iterator;
-import java.util.List;   
-import org.apache.poi.ss.usermodel.BorderStyle;
-import org.apache.poi.ss.usermodel.Cell;
-import org.apache.poi.ss.usermodel.CellStyle; 
-import org.apache.poi.ss.usermodel.FillPatternType;
-import org.apache.poi.ss.usermodel.HorizontalAlignment;
-import org.apache.poi.ss.usermodel.IndexedColors;
-import org.apache.poi.ss.usermodel.Row;
-import org.apache.poi.ss.usermodel.Workbook;
-import org.apache.poi.ss.usermodel.WorkbookFactory;
-import org.apache.poi.xssf.usermodel.XSSFWorkbook;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject; 
-
-public class CMRITLeaderboard2025 { 
-    private String excelSheetField = "lib\\CMRIT2025Leaderboard.xlsx";
-    HashMap <String, Integer> geeksforgeeksDB = new HashMap<>(); 
-    HashMap <String, Integer> hackerrankDB = new HashMap<>(); 
-    HashMap <String, Integer> codeforcesDB = new HashMap<>(); 
-     
-    static boolean hackerrankchk = false; 
-    static String searchToken = "";
-    static int hackerrankMaxScore = 0; 
-    static int GFGMaxScore = 0; 
-    static int GFGpMaxScore = 0; 
-    static int codechefMaxRating = 0;
-    static int leetcodeMaxRating = 0;
-    static int codeforcesMaxRating = 0;
-    
-    public CMRITLeaderboard2025() {  
-            hackerrankMaxScore = 0; 
-            GFGMaxScore = 0; 
-            GFGpMaxScore = 0; 
-            codechefMaxRating = 0;
-            leetcodeMaxRating = 0;
-            codeforcesMaxRating = 0; 
-            searchToken = "cmrit25-1-basics, cmrit25-4-rbd, cmrit25-3-iterables, cmrit25-2-lpb, cmrit25-5-ds, 1-basics-2025, 2-loops-2025, 3-bitpat-2025, 4-iterables-2025, ds-2025, codevita-2025";
-            if (searchToken.equals("")) { 
-                hackerrankchk = false;
-            }
-            else hackerrankchk = true;
-            List<Participant> curr_leaderboard = null; 
-            
-            String excelSheetPath = excelSheetField; 
-            System.out.print(excelSheetPath);
-            if (!excelSheetPath.equals("")) {
-                try{
-                    curr_leaderboard = loadExcelSheet(excelSheetPath);
-                    if(curr_leaderboard.isEmpty()) throw new Exception();
-                    downloadLeaderboard(curr_leaderboard);
-                    // Sort and assign ranks 
-                    assignRanks(curr_leaderboard); 
-                    // Display the leaderboard in console 
-                    exportParticipantsToExcel((ArrayList<Participant>) curr_leaderboard); 
-                    curr_leaderboard.clear();
-                } catch(Exception f) {  }
-            } else {   }  
-            this.geeksforgeeksDB.clear();
-            this.hackerrankDB.clear(); 
-            this.codeforcesDB.clear(); 
-            System.exit(0);
-    }
-
-    static void exportParticipantsToExcel(ArrayList<Participant> participants) {
-        try {
-            // Create a new Workbook
-            XSSFWorkbook workbook = new XSSFWorkbook();
-
-            // Create a new Sheet
-            org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("Current CMRITLeaderboard2025");
-
-            // Create bold font with size 18 for column headers
-            org.apache.poi.ss.usermodel.Font boldFont = workbook.createFont();
-            boldFont.setBold(true);
-            boldFont.setFontHeightInPoints((short) 20);
-
-            org.apache.poi.ss.usermodel.Font boldFont2 = workbook.createFont();
-            boldFont2.setBold(true);
-            boldFont2.setFontHeightInPoints((short) 14);
-
-            // Create bold centered cell style with 14 font size for normal cells
-            CellStyle boldCenteredCellStyle = workbook.createCellStyle();
-            boldCenteredCellStyle.setAlignment(HorizontalAlignment.CENTER);
-            boldCenteredCellStyle.setFont(boldFont);
-            boldCenteredCellStyle.setFillForegroundColor(IndexedColors.LIGHT_TURQUOISE1.getIndex());
-            boldCenteredCellStyle.setBorderBottom(BorderStyle.THICK);
-            boldCenteredCellStyle.setBorderTop(BorderStyle.THICK);
-            boldCenteredCellStyle.setBorderLeft(BorderStyle.THICK);
-            boldCenteredCellStyle.setBorderRight(BorderStyle.THICK);
-            boldCenteredCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
-            // Create bold cell style with 14 font size for normal cells
-            CellStyle boldCellStyle = workbook.createCellStyle();
-            boldCellStyle.setAlignment(HorizontalAlignment.CENTER);
-            boldCellStyle.setFont(boldFont2);
-            boldCellStyle.setFillForegroundColor(IndexedColors.TURQUOISE.getIndex());
-            boldCellStyle.setBorderBottom(BorderStyle.THICK);
-            boldCellStyle.setBorderTop(BorderStyle.THICK);
-            boldCellStyle.setBorderLeft(BorderStyle.THICK);
-            boldCellStyle.setBorderRight(BorderStyle.THICK);
-            boldCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
-
-            // Add column headers => 
-            // Rank, Codeforces_Handle, 35% Codeforces_Rating,
-            //       GFG_Handle, 30% GFG_Contest_Score, 10% GFG_Practice_Score,
-            //       Leetcode_Handle, 15% Leetcode_Rating
-            //       CodeChef_Handle, 10% Codechef_Rating
-            Row headerRow = sheet.createRow(0);
-            Cell rankHeaderCell = headerRow.createCell(0);
-            rankHeaderCell.setCellValue("Rank");
-            rankHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell handleHeaderCell = headerRow.createCell(1);
-            handleHeaderCell.setCellValue("Handle");
-            handleHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codeforcesIdHeaderCell = headerRow.createCell(2);
-            codeforcesIdHeaderCell.setCellValue("Codeforces_Handle");
-            codeforcesIdHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codeforcesRatingHeaderCell = headerRow.createCell(3);
-            codeforcesRatingHeaderCell.setCellValue("Codeforces_Rating");
-            codeforcesRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell gfgHeaderCell = headerRow.createCell(4);
-            gfgHeaderCell.setCellValue("GFG_Handle");
-            gfgHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell gfgCScoreHeaderCell = headerRow.createCell(5);
-            gfgCScoreHeaderCell.setCellValue("GFG_Contest_Score");
-            gfgCScoreHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell gfgPScoreHeaderCell = headerRow.createCell(6);
-            gfgPScoreHeaderCell.setCellValue("GFG_Practice_Score");
-            gfgPScoreHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell leetcodeHeaderCell = headerRow.createCell(7);
-            leetcodeHeaderCell.setCellValue("Leetcode_Handle");
-            leetcodeHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell leetcodeRatingHeaderCell = headerRow.createCell(8);
-            leetcodeRatingHeaderCell.setCellValue("Leetcode_Rating");
-            leetcodeRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codechefHeaderCell = headerRow.createCell(9);
-            codechefHeaderCell.setCellValue("Codechef_Handle");
-            codechefHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            Cell codechefRatingHeaderCell = headerRow.createCell(10);
-            codechefRatingHeaderCell.setCellValue("Codechef_Rating");
-            codechefRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            int hc = 11;
-            
-            if( hackerrankchk ){
-                hc = 13;
-                Cell hackerRankHeaderCell = headerRow.createCell(11);
-                hackerRankHeaderCell.setCellValue("HackerRank_Handle");
-                hackerRankHeaderCell.setCellStyle(boldCenteredCellStyle);
-
-                Cell hackerRankRatingHeaderCell = headerRow.createCell(12);
-                hackerRankRatingHeaderCell.setCellValue("HackerRank_Practice_Score");
-                hackerRankRatingHeaderCell.setCellStyle(boldCenteredCellStyle);
-            } 
-            
-            Cell percentileHeaderCell = headerRow.createCell(hc);
-            percentileHeaderCell.setCellValue("Percentile");
-            percentileHeaderCell.setCellStyle(boldCenteredCellStyle);
-            
-            // Add participants' data : Rank, Codeforces_Handle, 35% Codeforces_Rating,
-            //       GFG_Handle, 30% GFG_Contest_Score, 10% GFG_Practice_Score,
-            //       Leetcode_Handle, 15% Leetcode_Rating
-            //       CodeChef_Handle, 10% Codechef_Rating
-            for (int i = 0; i < participants.size(); i++) {
-                Participant participant = participants.get(i);
-                Row row = sheet.createRow(i + 1);
-                
-                Cell rankCell = row.createCell(0);
-                rankCell.setCellValue(participant.getRank());
-                rankCell.setCellStyle(boldCellStyle); 
-                
-                Cell handleCell = row.createCell(1);
-                handleCell.setCellValue(participant.getHandle());
-                handleCell.setCellStyle(boldCellStyle);
-                
-                Cell idCell1 = row.createCell(2);
-                idCell1.setCellValue(participant.getCodeforcesHandle());
-                idCell1.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell1 = row.createCell(3);
-                scoreCell1.setCellValue(participant.getCodeforcesRating());
-                scoreCell1.setCellStyle(boldCellStyle);
-                
-                Cell idCell2 = row.createCell(4);
-                idCell2.setCellValue(participant.getGeeksForGeeksHandle());
-                idCell2.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell2 = row.createCell(5);
-                scoreCell2.setCellValue(participant.getGeeksForGeeksScore());
-                scoreCell2.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell2_1 = row.createCell(6);
-                scoreCell2_1.setCellValue(participant.getGeeksForGeekspScore());
-                scoreCell2_1.setCellStyle(boldCellStyle);
-                
-                Cell idCell3 = row.createCell(7);
-                idCell3.setCellValue(participant.getLeetcodeHandle());
-                idCell3.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell3 = row.createCell(8);
-                scoreCell3.setCellValue(participant.getLeetcodeRating());
-                scoreCell3.setCellStyle(boldCellStyle);
-                
-                Cell idCell4 = row.createCell(9); 
-                idCell4.setCellValue(participant.getCodeChefHandle());
-                idCell4.setCellStyle(boldCellStyle);
-                
-                Cell scoreCell4 = row.createCell(10);
-                scoreCell4.setCellValue(participant.getCodeChefRating());
-                scoreCell4.setCellStyle(boldCellStyle);
-                
-                if(hackerrankchk){
-                    Cell idCell5 = row.createCell(11); 
-                    idCell5.setCellValue(participant.getHackerrankHandle());
-                    idCell5.setCellStyle(boldCellStyle);
-
-                    Cell scoreCell5 = row.createCell(12);
-                    scoreCell5.setCellValue(participant.getHackerrankScore());
-                    scoreCell5.setCellStyle(boldCellStyle);
-                }
-                Cell scoreCell6 = row.createCell(hc);
-                DecimalFormat df = new DecimalFormat("#.##");
-                scoreCell6.setCellValue( df.format(participant.getPercentile())+"%" );
-                scoreCell6.setCellStyle(boldCellStyle);
-            }
-
-            File folder = new File("Leaderboards");
-            if (!folder.exists()) {
-                folder.mkdir();
-            }
-
-            // Resize columns to fit the content 
-            for(int i=0;i<12 + (hackerrankchk?2:0);i++) sheet.autoSizeColumn(i); 
-            
-            String baseFileName = "Leaderboards/CurrentCMRITLeaderboard2025";
-            String extension = ".xlsx";
-
-            
-            File file = new File(baseFileName + extension); 
-            try ( FileOutputStream fileOut = new FileOutputStream(file)) { 
-                workbook.write(fileOut);
-                System.out.println("Excel file created successfully!"); 
-                {
-                    {  
-                        StringBuilder htmlBuilder = new StringBuilder(); 
-                        htmlBuilder.append("<html><head><title>").append(sheet.getSheetName()).append("</title></head><body>");
-                        htmlBuilder.append("<table>");
-                        int rowss=0;
-                        for (Row row : sheet) { 
-                            if(rowss == 0) htmlBuilder.append("<thead>"); 
-                            else if(rowss == 1) htmlBuilder.append("<tbody>");
-                            htmlBuilder.append("<tr>");
-                            int cols = 0;
-                            for (Cell cell : row) {
-                                if(rowss == 0) htmlBuilder.append("<th>");
-                                else htmlBuilder.append("<td>"); 
-                                switch (cell.getCellType()) {
-                                    case STRING -> htmlBuilder.append(cell.getStringCellValue());
-                                    case NUMERIC -> {
-                                        htmlBuilder.append((int)(cell.getNumericCellValue()));
-                                       
-                                    }
-                                    case BOOLEAN -> htmlBuilder.append(cell.getBooleanCellValue());
-                                    case FORMULA -> htmlBuilder.append(cell.getCellFormula());
-                                    default -> htmlBuilder.append(" ");
-                                }
-                                cols++;
-                            }
-                            if(rowss == 0) {
-                                htmlBuilder.append("</thead>");
-                                htmlBuilder.append("""
-                                                   <style>@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600);
-                                                   
-                                                   *, *:before, *:after {
-                                                     margin: 0;
-                                                     padding: 0;
-                                                     box-sizing: border-box;
-                                                   }
-                                                   
-                                                   body {
-                                                     background: #105469;
-                                                     font-family: 'Open Sans', sans-serif;
-                                                   }
-                                                   table {
-                                                     background: #012B39;
-                                                     border-radius: 0.25em;
-                                                     border-collapse: collapse;
-                                                     margin: 1em;
-                                                   }
-                                                   th {
-                                                     border-bottom: 1px solid #364043;
-                                                     color: #E2B842;
-                                                     font-size: 0.85em;
-                                                     font-weight: 600;
-                                                     padding: 0.5em 1em;
-                                                     text-align: center;
-                                                   }
-                                                   td {
-                                                     color: #fff;
-                                                     font-weight: 400;
-                                                     padding: 0.65em 1em;
-                                                     text-align: center;
-                                                   } 
-                                                   tbody tr {
-                                                     transition: background 0.25s ease;
-                                                     text-align: center;
-                                                   }
-                                                   tbody tr:hover {
-                                                     background: #014055;
-                                                     text-align: left;
-                                                   }
-                                                   
-                                                   </style>""");
-                            } 
-                            rowss++;
-                        }
-
-                        htmlBuilder.append("</tbody></table>");
-
-                        // Save the generated HTML to a file. 
-                        try (FileOutputStream htmlOut = new FileOutputStream("index.html")) {
-                            htmlOut.write(htmlBuilder.toString().getBytes());
-                            System.out.println("HTML file created successfully!");
-                            
-                        } catch (Exception e) {
-                            e.printStackTrace();
-                        }
-
-                        // Make sure to close the workbook after finishing with the file operations.
-                        try {
-                            workbook.close();
-                        } catch (Exception e) {
-                            e.printStackTrace();
-                        }
-
-                    }
-                }
-                
-                workbook.close();
-
-            } catch (Exception e) { 
-            }
-        } catch ( Exception e) { 
-        } 
-    }
-
-    private List<Participant> downloadLeaderboard(List <Participant>list) throws Exception {  
-        try{
-            String url;
-            URI websiteUrl;
-            URLConnection connection;
-            HttpURLConnection o;
-            InputStream inputStream;
-            // geeksforgeeks 
-            for(int j=1;j<=10000;j++){ 
-                try{
-                    url = "https://practiceapi.geeksforgeeks.org/api/latest/events/recurring/gfg-weekly-coding-contest/leaderboard/?leaderboard_type=0&page="+j;
-                    websiteUrl = new URI(url);
-                    connection = new URI(url).toURL().openConnection();
-                    o = (HttpURLConnection) websiteUrl.toURL().openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){ continue; } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        JSONArray arr = jsonObject.getJSONArray("results");
-                        int n = arr.length();
-                        if( n == 0) break; 
-                        for(int i=0;i<n;i++){
-                            JSONObject tmp = arr.getJSONObject(i);
-                            String userHandle = tmp.getString("user_handle").toLowerCase();
-                            if(geeksforgeeksDB.containsKey(userHandle)) { 
-                                int score = (int)tmp.getDouble("user_score");
-                                list.get(geeksforgeeksDB.get(userHandle)).setGeeksForGeeksScore(score); 
-                                GFGMaxScore = Integer.max(GFGMaxScore, score);
-                            } 
-                        }
-                    } catch(Exception t) {}
-                }catch(Exception pp) {}
-            }  
-            // hackerrank
-            if(hackerrankchk){
-                try{
-                    String tracker_names[] = searchToken.replace(" ", "").split(","); 
-                    for(String tracker_name : tracker_names){ 
-                        System.out.print(tracker_name);
-                        for(int j=0;j<10000;j+=100){ 
-                            try{
-                                url = "https://www.hackerrank.com/rest/contests/" + tracker_name +  "/leaderboard?offset="+j+"&limit=100";
-                                websiteUrl = new URI(url);
-                                connection = new URI(url).toURL().openConnection();
-                                o = (HttpURLConnection) websiteUrl.toURL().openConnection();
-                                o.setRequestMethod("GET");
-                                connection.setRequestProperty("Accept", "application/json");
-                                connection.setRequestProperty("User-Agent", "Mozilla/5.0");
-                                if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){ throw new ArithmeticException("INVALID URL : " + tracker_name); } 
-                                inputStream = connection.getInputStream();
-                                try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                                    StringBuilder jsonContent = new StringBuilder();
-                                    String line;
-                                    while ((line = bufferedReader.readLine()) != null) { 
-                                        jsonContent.append(line);
-                                    }
-                                    JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                                    JSONArray arr = jsonObject.getJSONArray("models");
-                                    int n = arr.length();
-                                    if( n == 0) break; 
-                                    for(int i=0;i<n;i++){
-                                        JSONObject tmp = arr.getJSONObject(i);
-                                        String userHandle = tmp.getString("hacker").toLowerCase();
-
-                                        if( ( !userHandle.isBlank() && !userHandle.equals("[deleted]")) && this.hackerrankDB.containsKey(userHandle)) { 
-                                            int index = hackerrankDB.get(userHandle);
-                                            int score = list.get(index).getHackerrankScore()+(int)tmp.getDouble("score"); 
-                                            hackerrankMaxScore = Integer.max(score, hackerrankMaxScore);
-                                            list.get(index).setHackerrankScore(score); 
-                                        }  
-                                    }
-                                } catch(Exception t) {}
-                            }
-                            catch(ArithmeticException e){ 
-                                
-                                break;
-                            }
-                            catch(Exception pp) {}
-                        } 
-                    } 
-                }catch(Exception ee){}
-            } 
-            int n = list.size();
-            for(int i=0;i<n;i++){
-                // geeksforgeeks overallScore 
-                try{
-                    if(list.get(i).getGeeksForGeeksHandle().isBlank()) throw new Exception("");
-                    url = "https://coding-platform-profile-api.onrender.com/geeksforgeeks/"+list.get(i).getGeeksForGeeksHandle(); 
-                    websiteUrl = new URI(url);
-                    connection = new URI(url).toURL().openConnection();
-                    o = (HttpURLConnection) websiteUrl.toURL().openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){
-                        throw new ArithmeticException();
-                    } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        int score; 
-                        try{
-                            score = jsonObject.getInt("overall_coding_score");
-                        }catch(Exception e) { score = 0; } 
-                        list.get(i).setGeeksForGeekspScore(score);
-                        GFGpMaxScore = Integer.max(score, GFGpMaxScore); 
-                    }catch (Exception e) { }
-                }catch(Exception e) {  } 
-
-                // Codechef 
-                try{
-                    if(list.get(i).getCodeChefHandle().isBlank()) throw new Exception("");
-                    url = "https://codechef-api.vercel.app/"+list.get(i).getCodeChefHandle();
-                    websiteUrl = new URI(url);
-                    connection = new URI(url).toURL().openConnection();
-                    o = (HttpURLConnection) websiteUrl.toURL().openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE){
-                        throw new ArithmeticException();
-                    } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        int rating = 0;
-                        try{
-                            rating = jsonObject.getInt("currentRating");
-                        }catch(Exception e) { rating = 0; } 
-                        list.get(i).setCodeChefRating(rating);
-                        codechefMaxRating = Integer.max(codechefMaxRating, rating); 
-                    }catch (Exception e) { }
-                }catch(Exception e){  } 
-
-                // leetcode
-                try{ 
-                    if(list.get(i).leetcode_handle.isBlank()) throw new Exception("");
-                    
-                    String username = list.get(i).leetcode_handle;
-                    String encodedUsername = URLEncoder.encode(username, StandardCharsets.UTF_8);
-        
-                    url = "https://leetcode.com/graphql?query=" + 
-                           URLEncoder.encode("query{userContestRanking(username:\"" + encodedUsername + "\"){rating}}", StandardCharsets.UTF_8); 
-                    websiteUrl = new URI(url);
-                    connection = new URI(url).toURL().openConnection();
-                    o = (HttpURLConnection) websiteUrl.toURL().openConnection();
-                    o.setRequestMethod("GET");
-                    if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE)
-                    {  throw new ArithmeticException(); } 
-                    inputStream = connection.getInputStream();
-                    try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                        StringBuilder jsonContent = new StringBuilder();
-                        String line;
-                        while ((line = bufferedReader.readLine()) != null) { 
-                            jsonContent.append(line);
-                        }
-                        JSONObject jsonObject = new JSONObject(jsonContent.toString()); 
-                        int rating = 0;
-                        try{
-                        rating = (int)jsonObject.getJSONObject("data").getJSONObject("userContestRanking").getDouble("rating");
-                        }catch(Exception e) { rating = 0; }  
-                        list.get(i).setLeetcodeRating(rating);
-                        leetcodeMaxRating = Integer.max(rating, leetcodeMaxRating);
-                    }catch (Exception e) { }
-                }catch(Exception e) {  }  
-            }
-        } catch(Exception e) {}
-        
-        //codeforces
-        try {
-            String url = "https://codeforces.com/api/user.ratedList?activeOnly=false&includeRetired=true";
-            JSONArray rows = null;
-            try {  
-                URI websiteUrl = new URI(url);
-                URLConnection connection = new URI(url).toURL().openConnection();
-                HttpURLConnection o = (HttpURLConnection) websiteUrl.toURL().openConnection();
-                
-                o.setRequestMethod("GET");
-                if (o.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND || o.getResponseCode() == HttpURLConnection.HTTP_NOT_ACCEPTABLE) {
-                    
-                }
-                InputStream inputStream = connection.getInputStream();
-                try ( BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {
-                    StringBuilder jsonContent = new StringBuilder();
-                    String line;
-                    while ((line = bufferedReader.readLine()) != null) {
-                        jsonContent.append(line);
-                    }
-                    JSONObject jsonObject = new JSONObject(jsonContent.toString());
-                    String status = jsonObject.getString("status");
-                    if (status.equals("OK")) {
-                        rows = jsonObject.getJSONArray("result");
-                    }
-                }
-            } catch ( IOException | NumberFormatException | JSONException e) {
-                
-            }
-            JSONArray standings = rows; 
-            try { 
-                if (standings != null) {
-                    for (int j = 0; j < standings.length(); j++) {
-                        JSONObject member = standings.getJSONObject(j);
-                        String handle = member.getString("handle").toLowerCase();
-                        int points = member.getInt("rating"); 
-                        if(codeforcesDB.containsKey(handle)) {
-                            list.get(codeforcesDB.get(handle)).setCodeforcesRating(points);
-                            codeforcesMaxRating = Integer.max(points, codeforcesMaxRating); 
-                        } 
-                    }
-                } else { 
-                }
-            } catch (Exception e) {
-                
-            }
-        } catch(Exception e) {  } 
-        return list;
-    } 
-
-    private double participantRank(Participant p){ // using normalization and weighted averages
-        // metric being 35% codeforces, 30% geeksforgeeks, 10% geeksforgeeks(practice), 15% leetcode, 10% codechef 
-        // including hackerrank:
-        // metric being 30% codeforces, 30% geeksforgeeks, 10% geeksforgeeks(practice), 10% leetcode, 10% codechef, 10% hackerrank
-        // 1477 3400 13.03235
-        try{
-            double cf   =   (p.getCodeforcesRating()/(double)codeforcesMaxRating)  *100  ;
-            double gfgs =   (p.getGeeksForGeeksScore()/(double)GFGMaxScore)        *100  ;
-            double gfgp =   (p.getGeeksForGeekspScore()/(double)GFGpMaxScore)      *100  ;
-            double lc   =   (p.getLeetcodeRating()/(double)leetcodeMaxRating)      *100  ;
-            double cc   =   (p.getCodeChefRating()/(double)codechefMaxRating)      *100  ;
-            double hr   =   (p.getHackerrankScore()/(double)hackerrankMaxScore)    *100  ;
-            double percentile ;
-            if( hackerrankchk ) percentile = ( cf * 0.3 + gfgs*0.3  + gfgp*0.1 + lc*0.1 + cc*0.1 + hr*0.1 ); 
-            else                percentile = ( cf * 0.35 + gfgs*0.3  + gfgp*0.1 + lc*0.15 + cc*0.1 ); 
-            p.percentile = percentile;
-            return percentile;
-        }catch (Exception e) {
-            
-            return 0;
-        }
-    }
-    
-    private List<Participant> loadExcelSheet(String excelSheetPath) {
-        // Format of excel sheet must be : {Handle, GFG_Handle, Codeforces_Handle, LeetCode_Handle, CodeChef_Handle}
-        ArrayList<Participant> participants = new ArrayList<>( );
-
-        try { 
-            try ( FileInputStream excelFile = new FileInputStream(excelSheetPath);  Workbook workbook = WorkbookFactory.create(excelFile)) {
-                // Assuming the data is in the first sheet (index 0)
-                org.apache.poi.ss.usermodel.Sheet sheet = workbook.getSheetAt(0);
-
-                // Assuming 'Handle' is in column A (index 0) and Other handles start from column B (index 1)
-                Iterator<Row> rowIterator = sheet.iterator();
-                int handleInd = 0;
-                int gfgInd = 1;
-                int codeforcesInd = 2;
-                int leetcodeInd = 3;
-                int codechefInd = 4;  
-                int hackerrankInd = 5;
-
-                if ( handleInd==-1 || gfgInd == -1 || codeforcesInd == -1 || leetcodeInd == -1 || codechefInd == -1 || sheet.getRow(0).getCell(codeforcesInd) == null || sheet.getRow(0).getCell(gfgInd) == null || sheet.getRow(0).getCell(leetcodeInd) == null || sheet.getRow(0).getCell(codechefInd) == null || sheet.getRow(0).getCell(handleInd) == null  ) {
-                    
-                    return new ArrayList<>();
-                }
-                
-                if( (hackerrankchk && sheet.getRow(0).getCell(hackerrankInd) == null   ) ){
-                    
-                    return new ArrayList<>();
-                }
-                
-                if (rowIterator.hasNext()) {
-                    rowIterator.next();
-                }
-                
-                int ind = 0;
-                while (rowIterator.hasNext()) {
-                    Row row = rowIterator.next();
-                    
-                    Cell handleCell = row.getCell(handleInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    Cell gfgCell = row.getCell(gfgInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    Cell codeforcesCell = row.getCell(codeforcesInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL); 
-                    Cell leetcodeCell = row.getCell(leetcodeInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL); 
-                    Cell codechefCell = row.getCell(codechefInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    Cell hackerrankCell = row.getCell(hackerrankInd, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
-                    
-                    Participant participant = new Participant(); 
-                    if( handleCell != null ){
-                         participant.setHandle(handleCell.toString().replace(" ", "").toLowerCase());
-                    } else break;
-                    if ( codeforcesCell != null ) { 
-                        String cfhandle = codeforcesCell.toString().replace(" ", "").toLowerCase();  
-                        cfhandle = cfhandle.replace("#n/a", "");
-                        cfhandle = cfhandle.replace("@cmritonline.ac.in", "");
-                        codeforcesDB.put(cfhandle, ind);
-                        participant.setCodeforcesHandle(cfhandle); 
-                    }
-                    if ( gfgCell != null ) { 
-                        String gfghandle = gfgCell.toString().replace(" ", "").toLowerCase();  
-                        gfghandle = gfghandle.replace("#n/a", "");
-                        gfghandle = gfghandle.replace("@cmritonline.ac.in", "");
-                        participant.setGeeksForGeeksHandle(gfghandle);
-                        geeksforgeeksDB.put(gfghandle, ind);
-                    }
-                    if ( leetcodeCell != null ){
-                        String lthandle = leetcodeCell.toString().replace(" ", "").toLowerCase();  
-                        lthandle = lthandle.replace("#n/a", "");
-                        lthandle = lthandle.replace("@cmritonline.ac.in", "");
-                        participant.setLeetcodeHandle(lthandle); 
-                    }
-                    if ( codechefCell != null ){
-                        String cchandle = codechefCell.toString().replace(" ", "").toLowerCase();  
-                        cchandle = cchandle.replace("#n/a", "");
-                        cchandle = cchandle.replace("@cmritonline.ac.in", "");
-                        participant.setCodeChefHandle(cchandle); 
-                    }
-                    if ( hackerrankCell != null && hackerrankchk ){
-                        String hrhandle = hackerrankCell.toString().replace(" ", "").toLowerCase();
-                        hrhandle = hrhandle.replace("#n/a", "");
-                        if( hrhandle.length()>1 && hrhandle.charAt(0) == '@') hrhandle = hrhandle.substring(1); 
-                        hrhandle = hrhandle.replace("@cmritonline.ac.in", "");
-                        participant.setHackerrankHandle(hrhandle); 
-                        hackerrankDB.put(hrhandle, ind);
-                    }
-                    participants.add(participant);
-                    ind++; 
-                }
-            }
-        } catch ( Exception e ) {
-            
-            return new ArrayList<>();
-        }
-        return participants;
-    } 
-    
-    private void assignRanks(List<Participant> leaderboard) { 
-        Collections.sort(leaderboard, (a, b)-> -Double.compare(participantRank(a),participantRank(b) ) );
-        try {
-            for (int i = 0; i < leaderboard.size(); i++) {
-                leaderboard.get(i).setRank(i + 1);
-            }
-        } catch (Exception e) {
-            
-        }
-    }
-
-    private class Participant { 
-        private String handle;
-        
-        private String codechef_handle;
-        private String codeforces_handle;
-        private String leetcode_handle;
-        private String geeksforgeeks_handle;
-        private String hackerrank_handle;
-        
-        private int codechefrating;
-        private int codeforcesrating;
-        private int leetcoderating;
-        private int geeksforgeeksscore;  // Contest Score
-        private int geeksforgeekspscore; // Practice Score
-        private int hackerrankscore;
-        private double percentile;
-        
-        private int rank;
-
-        private Participant() {
-            this.percentile = 0;
-            this.hackerrankscore = 0;
-            this.geeksforgeekspscore = 0;
-            this.geeksforgeeksscore = 0;
-            this.codeforcesrating = 0;
-            this.codechefrating = 0;
-            this.leetcoderating = 0;
-        }
-        
-        public void setPercentile(double p){
-            this.percentile = p;
-        }
-        
-        public double getPercentile(){
-            return this.percentile;
-        }
-        
-        public void setHandle(String handle) {
-            this.handle = handle;
-        } 
-        
-        public void setHackerrankHandle(String handle) {
-            this.hackerrank_handle = handle;
-        } 
-        
-        public void setGeeksForGeeksHandle(String handle) {
-            this.geeksforgeeks_handle = handle;
-        } 
-        
-        public void setLeetcodeHandle(String handle) {
-            this.leetcode_handle = handle;
-        }
-        
-        public void setCodeChefHandle(String handle) {
-            this.codechef_handle = handle;
-        }
-        
-        public void setCodeforcesHandle(String handle) {
-            this.codeforces_handle = handle;
-        }
-        
-        public String getGeeksForGeeksHandle() {
-            return this.geeksforgeeks_handle;
-        }
-        
-        public String getLeetcodeHandle() {
-            return this.leetcode_handle;
-        }
-        
-        public String getHackerrankHandle() {
-            return this.hackerrank_handle;
-        }
-        
-        public String getCodeChefHandle() {
-            return this.codechef_handle;
-        }
-        
-        public String getCodeforcesHandle() {
-            return this.codeforces_handle;
-        }
-
-        public void setGeeksForGeeksScore(int score) {
-            this.geeksforgeeksscore = score;
-        }
-        
-        public void setHackerrankScore(int score) {
-            this.hackerrankscore = score;
-        }
-        
-        public void setGeeksForGeekspScore(int score){
-            this.geeksforgeekspscore = score;
-        }
-        
-        public void setLeetcodeRating(int rating) {
-            this.leetcoderating = rating;
-        }
-        
-        public void setCodeChefRating(int rating) {
-            this.codechefrating = rating;
-        }
-        
-        public void setCodeforcesRating(int rating) {
-            this.codeforcesrating = rating;
-        }
-
-        public String getHandle() {
-            return handle;
-        }
-
-        public int getGeeksForGeeksScore() {
-            return this.geeksforgeeksscore;
-        }
-        
-        public int getHackerrankScore() {
-            return this.hackerrankscore;
-        }
-        
-        public int getGeeksForGeekspScore() {
-            return this.geeksforgeekspscore;
-        }
-        
-        public int getLeetcodeRating() {
-            return this.leetcoderating;
-        }
-        
-        public int getCodeChefRating() {
-            return this.codechefrating;
-        }
-        
-        public int getCodeforcesRating() {
-            return this.codeforcesrating;
-        }
-
-        public int getRank() {
-            return rank;
-        }
-
-        public void setRank(int rank) {
-            this.rank = rank;
-        }
-    } 
-    public static void main(String[] args) {
-         new CMRITLeaderboard2025();
-        
-    }
-}
